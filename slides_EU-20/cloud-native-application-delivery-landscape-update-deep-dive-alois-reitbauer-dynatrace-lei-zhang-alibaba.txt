Cloud-Native Application Delivery Landscape Update (Deep-Dive): GPBV-8392 - events@cncf.io - Wednesday, August 19, 2020 8:22 AM - 115 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:56 [W] Hello, this is Lee Jong.
00:07:26 [W] I'm Ali Baba and today me and my co-speaker Alloys from Tetris will give you the talk about the cloud native application delivery landscape after it.
00:07:35 [W] This is actually a deep dive session for cncf.
00:07:38 [W] C Cab delivery.
00:07:39 [W] So today if I am a application developer and I look at the cncf lenses Cape around the application definition and the development category.
00:07:54 [W] It's actually very interesting the first section.
00:07:59 [W] I so is a bunch of databases which I only heard one or two of them why they are part of application deflation our deployment.
00:08:09 [W] I'm very curious.
00:08:09 [W] Should I be some kind of expert on storage engine to write a single application seems not the second section.
00:08:24 [W] I so is a bunch of software with name of streaming and message.
00:08:26 [W] It's also very real indeed.
00:08:33 [W] I really don't think how Kafka works is a concern for most of the application developers not to mention the other ones like cloudevents, which I would probably never need to know.
00:08:39 [W] Of application. They fascia night deployment.
00:08:55 [W] I'm very curious.
00:08:55 [W] Should I be some kind of expert on storage engine to write a single application seems not the second section.
00:08:56 [W] I so is a bunch of software with name of streaming and message.
00:08:56 [W] It's also very real indeed.
00:08:57 [W] I really don't think how Kafka works is a concern for most of the application developers in automation.
00:08:58 [W] The other ones like cloudevents which I would probably never need to know what it is and for the rest part of the category.
00:09:00 [W] It's intentionally a mixed box of every application packaging and ci/cd related project in the community.
00:09:02 [W] Nobody knows why how they are.
00:09:03 [W] Nobody knows how they are organized or placed in the sections.
00:09:04 [W] It's just the chaos.
00:09:04 [W] Honestly speaking the application category of cncf landscape needs a significant update stings a long time ago today the modern application delivery actually starts from application developers writing
00:09:18 [W] Or pasting the sections.
00:09:19 [W] It's just a chaos.
00:09:19 [W] honestly speaking the application category of cncf landscape needs a significant update since a long time ago today the modern application delivery actually starts from application developers
00:09:20 [W] Processed by pushing a code then ci/cd system will generate dark image as a artifacts of your application and a full deployment of these artifacts.
00:09:34 [W] We will write kubernative Amo files to defy workloads.
00:09:50 [W] Is the controller like World controller will response and perform the corresponding application delivery functionality.
00:10:00 [W] For example, Bluegreen permanent these application workflow this application three workflow which includes gitops and declarative API kubernative and controller pattern and this heart is very
00:10:13 [W] different from the traditional ci/cd pathways
00:10:16 [W] And it also creates more emerging Technologies and new Scopes in the Sierra.
00:10:25 [W] It's also not a reason that we need to update things have landscape regarding to application delivery because we definitely want to include this emerging efforts at part of the landscape of application delivery were talking about
00:10:37 [W] so the first emerging technology we want to include in the new landscape is standard application model. So why standard application model is important?
00:10:49 [W] We all know that a kubenetes to do that. If I was to build application Level platforms, but the real world the requirement from over users are highly diverse. For example, some applications are stay for workloads.
00:11:05 [W] So we need to build the same.
00:11:08 [W] We need to build a user's a steady for application platform with operational capabilities like manual scaling policies and it narrowed strategies. However, there are also many applications which are stateless.
00:11:19 [W] Then use deployment at workloads Flagger for example to do relevant and HP a photo scary.
00:11:27 [W] And for some other applications, they just prefer to go to the serverless style.
00:11:34 [W] We have to use Canadian.
00:11:37 [W] We need to use kinetic for example to save them see although all these platforms have unique Shades.
00:11:45 [W] Shades. They also share a lot of common, for example, all of them requires a capability like less equipped.
00:11:51 [W] But at careful Builders we have to implement this. Let's see Crypt functionality in every different form in every different platform again. And again since every different platform here speak different languages speak differently tikv.
00:12:06 [W] So eustacia Lee the platform Builders are creating more fragmentations today more silos and the more closed systems weasel out of In-House the artists.
00:12:21 [W] this doesn't feel good.
00:12:22 [W] This is where our standard application model can save the world.
00:12:28 [W] Essentially.
00:12:33 [W] We now have a unified model layer for all application Platforms in the organization the speak API such as components and application configurations or any kind of standard application Level Primitives instead of the infrastructure level
00:12:43 [W] Knative switch which ensure that we will not leak lot of too much detail to our users with a unified approach and every platform here will have their own unique workloads shares to serve different scenarios.
00:12:59 [W] And for the common workloads And Trades, we don't need to reinvent the valves anymore because all the platforms now share a common pool of capabilities.
00:13:12 [W] So purple Builders just pick what they want to assemble them into their own platforms. It's just easy and neat.
00:13:18 [W] In the community the existing a fur to defy standard application model for platform Builders is open application model in detail om devised for application Level Primitives for kubernetes in standard approach firstly.
00:13:34 [W] Components it's all about what workloads you want to deploy in most cases.
00:13:45 [W] They are kubernative deployments, but it can also be functions if you want or your own kubernative operators at workloads.
00:13:48 [W] The second concept is shade which are used to defy helped all printed workloads auto-scaling rollout.
00:13:58 [W] Check the management extra or over perfect examples of shades.
00:14:02 [W] Some of them are provided on to box by kubernative.
00:14:04 [W] The most of them come from the ecosystem like Flagger like you steal. This is also where abstractions mostly happen if you want to make your users lives either.
00:14:14 [W] The third the third concept is application configuration.
00:14:23 [W] This is a llamo file to explicitly to buy the shares to certain components to clearly know the topology of your application instead of tracking them by for example labels or use other kind of unstructured approaches.
00:14:33 [W] The last but most important the definitions there are used to register cri-o any currency pair resource at workloads and trades and we will talk maybe talk about mode about this in detail very soon.
00:14:49 [W] He's also check its website or specification for this detail reports.
00:14:54 [W] Okay. So let's go to the next step. The second scope you want to including over landscape is multi Koster application delivery and gitops.
00:15:06 [W] So why do we want to use multicast ER this is a very important question because today we basically have lot of kubernative clusters to manage not only in our own
00:15:21 [W] Not only overall organization but also using different organizations. It's very common pattern.
00:15:28 [W] So we want to have better isolation.
00:15:31 [W] We want to improve the availability and we also want to have more flexibility to for example to do capacity planning, especially for bursting workloads.
00:15:43 [W] And of course we want to do location affinity and we want to avoid the defender lock. These are all the multi-class turku bananas camp.
00:15:50 [W] Bring us the benefits and advantages here.
00:15:54 [W] But the question is how to deliver application to this is clusters, especially when those clusters planning to different clouds.
00:16:10 [W] So the first issue is how we place the applications the application placement that is to say how to for example deliver the application to a Target cluster based on our strategy the first project
00:16:19 [W] To the community to take a look a which can solve this problem is the Federation version 2, but of course, they could be fed project. But there is restriction in this project because need to defy Federation types for every kubernative.
00:16:34 [W] Resource you want to deploy. This is actually very complicated.
00:16:39 [W] That's why a lot of people gradually moved to gitops based approach, which means you will basically use gitops with application label placement strategy.
00:16:52 [W] And for example, you can use Argo City to do that. It had a few short name in the application stage for you to Define which application goes to these cluster and that application go to the go to that cluster. It's very easy and also flux also supports
00:17:04 [W] our pattern and there are also a lot of commercial products today for example Google and thoughts which enable you to deliver application to different Target clusters based on your gitops configuration.
00:17:17 [W] But the second issue a little bit more complicated which is the possibility of your operational capability.
00:17:26 [W] For example, I want to deploy my application to multiple clusters in multiple Cloud, but how can I defy the certain operational capability without need to care about the details of the call providers or
00:17:39 [W] The different clusters right?
00:17:43 [W] For example the called resources.
00:17:51 [W] How can I define a database which is possible between Google cloud and Microsoft Azure Cloud, right?
00:17:53 [W] This is very very complicated issue.
00:18:01 [W] And today crows can can help you solve this kind of problem because it can help you to build a cloud platform agnostic abstraction on top of the cloud resource apis, but there's more operational capabilities. For example,
00:18:08 [W] Grace wrought out monitoring and for traffic management today.
00:18:23 [W] There is a ongoing effort which name is a semi for you to defy traffic management strategies regardless of what kind of servicemeshcon means you have, right?
00:18:27 [W] This is actually a very good start but we we really need more like this for example English, right?
00:18:30 [W] How can we Define Ingress specification regardless of these implementation and there are committees effort at the oh like in Greece V2 it
00:18:38 [W] VI and also for rollout for observability for this part we have opentelemetry I which is probably promising, but we don't know how to defy portable definition for auto
00:18:53 [W] For example as well as starts biting. So in one word, the current Community is still not there to defy generic standards for or interfaces for possible operational capabilities, and it's very hard for us,
00:19:08 [W] And being able real multi Koster, although he called application today worry for now.
00:19:18 [W] yes, there are some promising effort and we should keep our eyes on that now. I will let my co-speaker to share more about the rest of the challenges. You want to include in the scope of application delivery landscape. So please go ahead.
00:19:28 [W] Thank you Harry. That's a perfect transition into the next challenge that we want to talk about which is about packaging and shipping suit. Yes or cots applications.
00:19:39 [W] so what is a CTS application CTS means commercial off-the-shelf application basically applications you run within your company that you simply didn't install and use but not develop yourself
00:19:56 [W] A lot of companies in a lot lot of applications in a modern company are these kind of applications and the more we move the kubernative the more we can expect more of these applications because they plotted diseases.
00:20:11 [W] It's like a multi-class the scenario that we were talking about before but mortar next week because every class there is different and we I can make no assumptions what the class is going to look like which gets us to
00:20:23 [W] Need a kind of basic contract of what to expect from the environment that we could be deployed to currently we can only rely on the basic platform components of our communities Custer and not on additional requirements which the application however might have.
00:20:39 [W] And ideally we also have a standardized self-contained packaging format that we could use to deploy this application.
00:20:50 [W] So let's look at packaging Solutions.
00:20:51 [W] So obviously you can use help help as a package manager allows us to package all the individual components we need for our application and put them into Helm chart but not all components are the helm child, especially the images are not in the
00:21:06 [W] Chart and also the target system must have help available.
00:21:11 [W] Otherwise, we could not use the helm chart. We can use an Operator Operator Zoe's encapsulate this installation logic and obviously a lot more and just insulation logic but images again are still not part of
00:21:25 [W] That operator so it doesn't solve our dependency on the register side either.
00:21:31 [W] We have always something like seen epsagon out native application Bangles that allow us to package components together also sign them and to number of other things as well.
00:21:47 [W] And if we use a concept that's called a thick bundle. It comes with the images included. However, we again get a requirement on additional Tooling in our cluster.
00:21:54 [W] So with these requirements we have exactly a situation as we've seen in see it here on the top. All of our platform assumptions are met.
00:22:06 [W] So everything we actually require is also available for us and grass service manage storage.
00:22:14 [W] I don't think you require from our kubernative class that they have available.
00:22:15 [W] However, when I one of those components is missing we can't run the application like escape the servicemeshcon.
00:22:44 [W] Run into problems there or even environmental install to does not want to have a second servicemeshcon a level and requires us to use this. So we're getting into more complex situation here how endless
00:23:00 [W] the next chain challenge we're looking into is really handling chain of custody for application delivery and the next slide should sum this up pretty well.
00:23:16 [W] You control applied some file from the internet and let's see what happens.
00:23:21 [W] This is definitely how not how we want to deploy our applications to production.
00:23:29 [W] This is how we want to deploy really anything to variable in its custody because we don't know what's going to happen, right?
00:23:31 [W] So if we look at our environment is actually split into two parts.
00:23:40 [W] The left part is the untrusted zone at the public image of public health insurance and public operator, which the Nelson might be an image and the right part are trusting environment our cluster or add effects to our registry.
00:23:49 [W] So somehow what we need to do, we need to move things from the untrusted Zone into the trusted Zone and into the peer only possible things or that we expect to move over and that's something else.
00:24:02 [W] So what we need to do is we need to establish trust and ensure authenticity of the artifacts.
00:24:11 [W] I will really getting what we think we're getting.
00:24:12 [W] You need to get them into our safe Zone which can be somewhat tedious because we need to export everything re-imported or you need to be use some kind of federation for Registries, but it's still kind of inconvenient to get there
00:24:28 [W] There's more convenience for some of these segments moving things into your environment and for installing applications using operators on the other hand.
00:24:42 [W] I've also seen people always rather relying on more decorative approaches and operators because they want to see exactly what is happening to the fast before the executed and operates might just be a binary inside the container to running.
00:24:55 [W] From potential solution space there's two things that are definitely worth looking into the city Docker content trust, which is by itself only partial solution opposite to the problem, but it helps to do verify that certain
00:25:10 [W] Just are coming from a certain provider of us if we trusted registry that's and requirement here.
00:25:19 [W] And for Helm, we have a process for how long proven and the Integrity that allows us to do similar things for help to ensure we getting what will be expecting the death Brigade and this is also something that they should include
00:25:32 [W] Into your delivery to ensure that only items can be executed against your custard. That should be allowed to execute against that Custer.
00:25:42 [W] The last challenge we want to talk about here is Willie operations automation, but not so much in the infrastructure Taylor level but really moving it up to the application Level and ideally do this in a reusable format.
00:26:00 [W] So good.
00:26:03 [W] communities is great in handling generic application operations. We start scaling Health monitoring prison Health endpoints and Readiness and points.
00:26:11 [W] But every Cajuns are match not just on these Health endpoints.
00:26:22 [W] Usually you have as allies and SLO that you use for your operations tasks into the application is running properly that go Way Beyond it's just there or it's working.
00:26:29 [W] And they're also domain specific operations that you running that require custom logic. Like if you load gets too high, you want to switch to static content delivery versus calculating things at one time.
00:26:43 [W] So what are your options here?
00:26:47 [W] So explaining the metrics artist is really easy.
00:26:51 [W] You can use for me cos you can use opentelemetry which makes it really easy to expose those metrics.
00:26:56 [W] You still need to have a back-end that consumes this metric this Matrix obviously, but you can assume that the cluster has them available.
00:27:04 [W] For operations automation kubernative operators as the name already suggests are a great choice here as they can handle and work with these metrics and these environments.
00:27:18 [W] However, it's not really that well defined or less a standardized how the operator would get information about SLS and I suppose that they should act on it.
00:27:29 [W] How would they operate the no reason be able to access this information which is stored. Most likely to monitor.
00:27:33 [W] Back ends and can consume these metrics and loodse.
00:27:36 [W] There is also a project called keptn. That was a person involved in that tries to solve amongst other things some of those problems and how you can use S license allows and put some automated operations Logic on top of it
00:27:53 [W] All three things get tied together automatically.
00:27:57 [W] Thank you allies and for great summary about the new challenges and solutions.
00:28:07 [W] There are facing in current application delivery ecosystem.
00:28:10 [W] It's very informative.
00:28:13 [W] So allow me to do a brief summary for this station.
00:28:18 [W] So we're basically seeing that they are new challenges and potential Solutions emerging in the application delivery ecosystem.
00:28:26 [W] It's huge and it's important they were
00:28:28 [W] we also notice that some of them are still missing see the current landscape and some others need Revisited or repositioning we need to do something to reshape the whole landscape and we also notice that
00:28:42 [W] The current structure of the landscape will need some kind of readings I so we can deliver the messages to other audiences to let the community know better.
00:28:55 [W] What a specific project is really about what kind of challenges it can be used to solve and any potential usage use cases. We can discover besides it's men description.
00:29:07 [W] So all of these things can be delivered very well by restructure and refactor the current cncf landscape.
00:29:19 [W] That's why we have the proposal in the cgroup creation delivery of the cncf.
00:29:24 [W] Do we want to add a new tab?
00:29:25 [W] which name is application delivery for sins of landscape, which basically about the Clone knative application management and development and focus on this ecosystem.
00:29:37 [W] Mmm, so this is idea. And if you like this idea and you want to join us together to reshape the scenes at landscape, the CCAP delivery is really the best place for you to get started.
00:29:51 [W] So me and Alloys and we'll add brain or co-chairs for this league and you can reach out to us through the slack Channel instance that workspace.
00:30:05 [W] You can raise your discussion. You can over mailing list and of course the best way
00:30:08 [W] Joyce and Yuma discussion around the things they have cgroup delivery and the application delivery ecosystem is always thinking meeting which is held every first and third Wednesday of the month.
00:30:20 [W] So I think the best way for you to get started to check the agenda the nose to see what is currently under discussion. And this update on the landscape is actually one of the most important part for recent work.
00:30:36 [W] Welcome to join the seccomp delivery and I will be very happy to see you Joyce and reciprocity since it lets get in the future.
00:30:45 [W] Thank you very much.
00:30:46 [W] Okay. Now you should be able to see and hear me I was eating was a refresh issue.
00:31:58 [W] So our last question was whether the slides will be available.
00:32:11 [W] Obviously, they will be you will find them later today in case you cannot find them just ping us on the cncf after they were exact Channel also if you need any other information
00:32:19 [W] Okay, looking at the other questions in here the question but earlier in with a comment about cloudevents.
00:32:38 [W] Yes, cloudevents are a specification and some of the projects are already using cloudevents the point of you're making at some point.
00:32:46 [W] We need more higher level semantics on top of cloudevents to understand what the event actually means that a different tools can properly interpret the events. Like they have different delivery tools and they will
00:32:54 [W] And what a blue critical element is how to plug redeployment is supposed to work and to execute.
00:33:05 [W] So this is the part that's not part of the cloudevents specification this editions semantics.
00:33:10 [W] There is one question.
00:33:17 [W] How do we trust public kubernative operators?
00:33:23 [W] Yeah, that is actually a very good question. So
00:33:24 [W] As mentioned in my in my part of the presentation the first thing you obviously should ensure that you trust the issuer of or whoever created that container at the way you install it which many cases the help chart.
00:33:40 [W] And also obviously installing them only via like trusted sites like the operator happens in force is definitely helpful.
00:33:53 [W] We still have seen or I have seen in some discussions that you don't know exactly what the operator does but you also know which writes the operator requests on your cluster.
00:34:05 [W] So this is something you should definitely look into before installing and operator really question whether it is operator really needs all of that access.
00:34:12 [W] To the cluster and CC you should never run it in production first.
00:34:15 [W] And yeah, okay.
00:34:32 [W] There's one question about what kpt be considered too low level to be relevant solution for apt delivery.
00:34:49 [W] I have to admit that I'm not familiar with the key pity but we got the only we can bring this discussion into the Sea Captain's every channel and what we overall do within the
00:35:14 [W] Delivery we always offer the chance for different projects to present.
00:35:21 [W] The solutions as part of our bi-weekly meeting bi-weekly meeting. So if you have a project that you think adds value here get yourself on the agenda and we will for the first Plantation.
00:35:38 [W] We serve a small slot like 10 minutes or so to present the project to the broader community and we welcome projects to present what they were working on.
00:35:50 [W] we try to get as many projects out there and
00:35:53 [W] Cannibalistic community so feel free to try to channel and get yourself on the agenda for one of the the upcoming ones.
00:35:59 [W] And just ideally opposed to prepare Prince presentation for for this one.
00:36:10 [W] And also has hair imagine as we are redesigning the landscape.
00:36:23 [W] I think we also have more more opportunities to publish projects in indirect area.
00:36:30 [W] One more question. What are the might thoughts on the philosophical implications of trying to extend the scope of automated operations to consider business logic acting on slos
00:36:54 [W] I think in some cases you can do it. Well, I don't know from personal experience that we try to encode more and more logic into applications to cope with
00:37:09 [W] Curation said he want to deal with and like I said all related once enabling disabling features for me is a very it's a very classic one that we also using a lot
00:37:24 [W] Internally were based on like the errors or are budgets. We disable certain features that we know might be causing issues or might not working that that properly the bigger challenge.
00:37:39 [W] However is that you have a centralized understanding of what operational logic and world of relational steps you're running on your application. Otherwise you get into this kind of split brain situation where the
00:37:52 [W] Ask the level you might have remediate certain situations while at the same time.
00:38:00 [W] you're doing it on a high level application Level and these two might interfere with each other and obviously one might even try to act on this side effects of this this other level.
00:38:07 [W] Overall, I think however that based on slos eventually you might take more and more decisions, especially in a highly automated environment.
00:38:21 [W] For example, if an application is already over is error budget, you might at least require additional confirmation for a deployment or if you really have any a deployment of new functionality and you have
00:38:32 [W] Some declarative way to say that this functionality can be disabled in cases of issues.
00:38:39 [W] You should be able to automatically do this.
00:38:42 [W] It's still a very admittedly very early early work that there is still very early work in this area, but I think overall we are more moving they're using this as a low information because this is obviously highly valuable information
00:38:54 [W] Nation at the application Level that that we can leverage to improve the user experience for for our application logic consumers.
00:39:05 [W] But yet.
00:39:14 [W] So one more question, how would you tools like help integrate with the standard AB models in time of the release concept would be simply use Helm as a template ER instead of
00:39:36 [W] plier
00:39:37 [W] so I think helm.
00:39:41 [W] You could still use it also for the the apply process.
00:39:55 [W] But as you change the releases you use obviously Helm charts and in some cases, you might even follow the pattern of using Helm umbrella charts.
00:40:01 [W] But in this case, you're not really necessarily using it as a package manager as much as you're really using it as a templating engine, especially when you look at multistage deliver. You want to Define your overall application concept once
00:40:11 [W] And then have a different manifestation on four different stages just to take one example, a replica counts will be different for a development environment for pre-production environment and the production environment
00:40:26 [W] Also from personal experience I can share that we use Helm as I've said like as the base is configuration and have everything in their values file that's usually changed throughout a release process for specific workloads.
00:40:39 [W] But in this case, it's still acting as well as the templating engine and all the using he'll to apply that the configuration changes.
00:40:49 [W] But already there's also other ways you can do templating the key is how you structured especially for multistage delivery and how to create those files independently of the stages and then ideally just use the values files
00:41:08 [W] provide the information required for the individual stages
00:41:11 [W] and this is I think I was an area where they could be definitely more examples and how to best use cloud native tooling for more complex multistage scenarios.
00:41:29 [W] Okay, I just heard we have only one minute left here in the live chat.
00:41:56 [W] Just be sure to also join the conversation on the cncf select chat as well so we can have a longer conversation.
00:42:04 [W] There is a dedicated slack channel for the
00:42:10 [W] For this session next step to cube come after us.
00:42:14 [W] Session that you can have a look at 20 conversation there.
00:42:22 [W] There is already a lot going on in the channel. And obviously there's also the sick app delivery Channel, which is the
00:42:26 [W] slack channel in the cncf 40 Apple every Sig itself.
00:42:38 [W] Projects and relative fit into that the landscape or a pencil presentation.
00:42:41 [W] So feel free to also engage these channels and
00:42:44 [W] yeah, I would recommend continue the conversation there.
00:42:50 [W] Yes, so, please keep the conversation going. There's repeated. Its.
00:42:59 [W] 2 Cube Khan maintainers like board space and look for the Q days wet the cloudevents level landscape and meet us there on Slack.
00:43:11 [W] Thanks everyone for joining the session and I hope to continue this conversation a lot of quick questions here and also very interesting follow-up discussions expected out of this.
