KubeEdge: Kubernetes Native Edge Computing Framework (Intro): BFEK-9611 - events@cncf.io - Tuesday, August 18, 2020 12:29 PM - 45 minutes

Participant: wordly [W] English (US)
Participant: wordly [W0] English (US)

Transcription for wordly [W]

00:01:00 [W] Hi everyone.
00:01:04 [W] Thank you for coming to my session.
00:01:06 [W] The session is about a kubeedge the name is the kubeedge kubernative knative at cloud computing framework this day introduction session.
00:01:18 [W] My name is ending I work for futurewei and the one of the founding member of this project.
00:01:22 [W] So for my talk, I have this structure. I will talk about the background then a little bit architecture of a kubeedge then the communities that is following the
00:01:39 [W] Slides I'm going to give a user adoption example, and I also going to show a short demo to see how easy you can deploy your own kubeedge for your Youth and At Last I have
00:01:54 [W] Quest information to share with you, and I'm going to do the live Q&A after this recording.
00:02:04 [W] So please have your questions ready.
00:02:05 [W] I'm going to live to answer your questions online and or in person if I can so let's start background.
00:02:16 [W] So kubeedge kubeedge is a platform. We build upon of a community's so the purpose is provide the fundamental.
00:02:25 [W] The infrastructure to support network application development and meta data synchronization between the edge and the cloud so all we know cloud and Edge very different.
00:02:39 [W] So there's a lot of challenges if you want to resolve Edge Computing problems first is Network reliability not like a cloud you have a high speed reliable connection within the
00:02:54 [W] Rice with in your data center.
00:02:59 [W] So Cloud to add you may have unreliable a network connections and your network bandwidth will be limited between your cloud and Edge and also a lot of time the edge have only limited resource.
00:03:12 [W] We need to work within that the limitation and also when the network got disconnected we need a autonomous.
00:03:23 [W] operations on the edge so the The Edge can run independently without the connect to the cloud and also because we support a lot of iot a scenarios that's a highly distributed and he genius device management and
00:03:39 [W] He protocols we need to work with so that's all the challenges. So with this challenge kubeedge can provide like four major features. The first is seamless Cloud
00:03:54 [W] Nation so we do this for metadata and data seamlessly with other user interaction or intervention and the we also support
00:04:10 [W] On the me. So basically we support autonomous operation on the edge you will win the edge is disconnected from the cloud.
00:04:24 [W] And also we are low resource ready.
00:04:29 [W] That means if you have only a low config The Edge server the kubeedge has still work in this resource constrained the edge in this situation. Basically, you have a low memory low Network bandwidth.
00:04:39 [W] a lower real ondcp UI low computer power
00:04:44 [W] kubeedge can work in this scenario.
00:04:53 [W] And also we have strong support for the iot.
00:04:56 [W] So we simplified device communication.
00:05:00 [W] So it's very easy for the iot application to communicate between application of device in the iot scenario.
00:05:09 [W] So, this is our release Journey this project we enter as a Sandbox project of kubernative seek cncf in
00:05:26 [W] At that time we already support a combination coredns P eyes including a no depart complete map secret Etc.
00:05:41 [W] So in the June 2019, we have the official 1.0 release during this release.
00:05:47 [W] We highlight some features like ovhcloud coordination for devices. And also we verify the container integration.
00:05:53 [W] Then in 1.1 release we provide CSI integration for the edge and one point to release we a big feature. We release it account kubeedge componentconfig
00:06:11 [W] 1.3 really is we support log connect from pot add H. We also verify the cri-o integration in one point for release that's in the in August
00:06:26 [W] to have a we're going to support a community kubernative knative Matrix API, so you can collect performance data from Edge to cloud and there's a few more features because when I record
00:06:42 [W] Haven't have done release yet.
00:06:48 [W] I hope when this recording is played we are going to have this really so I gave the released log link here so you can click through when you see this video.
00:07:00 [W] So now we are released every three months then about a one month after official kubenetes released.
00:07:11 [W] We're going to have the compatibility issue to solve them.
00:07:13 [W] When we can upgrade the kubernative dependency follow the release, so we are in the same three months release cycle now architecture.
00:07:28 [W] So let me introduce the kubeedge architecture basically kubeedge is natively extend the kubernative.
00:07:37 [W] So we work with the communities we met in the majority. We have two components cloud and F5.
00:07:43 [W] So I'm going to elaborate each part in the following sighs. But now I will you introduce so mainly on the cloud. We have a clock or basically it's talk to kubernative and
00:07:59 [W] The request to the edge part The Edge have a edge Corps and it's a table to The Container engine and also the mqtt devices and I'm going to have this elaborated in the
00:08:14 [W] Jen and also the mqtt devices and I'm going to have this elaborated in the following slides.
00:08:16 [W] For that edge Cloud part. So basically we have the least watch to talk to the kubernative master.
00:08:32 [W] We have ADD controller basically the Shadow the management of for the know the part everything coordinated knative resources, and we have a device API device controller.
00:08:37 [W] That's for the iot devices modeling. Then we have a sync server that sinks over is basically
00:08:45 [W] We can detect inconsistent between the cloud and Edge and to solve this issues.
00:08:55 [W] Then we have the kubeedge CSI drivers does hook up the storage provisioning for the edge.
00:09:01 [W] And also we have the admission webhook.
00:09:05 [W] That's for the device cri-o.
00:09:06 [W] we can do the API validation and the best practice enforcement Edge. So one thing important
00:09:15 [W] Part is Edge. So in Edge, we have a job.
00:09:21 [W] Let's talk to the cloud.
00:09:24 [W] So the closed part of a kubeedge have also a clock Hub.
00:09:29 [W] So that's the we set up a web socket from Edge to Cloud so we can talk seamlessly from Edge to Cloud.
00:09:36 [W] Device cri-o we can do the API validation and the best practice enforcement.
00:09:45 [W] Edge so one of the important part is Edge. So in Edge, we have a job.
00:09:46 [W] They've talked to the cloud.
00:09:46 [W] So the cloud part of a kubeedge have also a cloud Hub.
00:09:47 [W] So does the we set up a web socket from Edge to Cloud so we can talk seamlessly from Edge to Cloud.
00:09:49 [W] So this way you when you add it behind some firewall or Gateway, even you don't have a public IP. We can initiate a connection from
00:09:50 [W] Add to the cloud so then the edge Cloud can talk through this websocket channel to to reach the cloud Edge communication and other part we have a metadata
00:09:57 [W] The can talk through this websocket channel to to reach the cloud Edge communication.
00:09:58 [W] And other part we have a metadata manager is a load level of metadata persistent and the HD is a more like kubelet but there's a light weighted and only do necessary
00:10:09 [W] And also is also responsible for the part of the life cycle and we have a device to in that's basically a synchronized device status between the cloud and Edge and the divides. The last part is eventbus dust is our
00:10:25 [W] It's basically a synchronized device status between the cloud and Edge and the device.
00:10:26 [W] The last part is eventbus dust is our mqtt client does synchronize the device status the from the device and the edge node, so to in this way you can control
00:10:36 [W] Thus synchronized device status the from the device and the edge node.
00:10:37 [W] So to in this way, you can control your iot device Community. As I said this project enter cncf sandbox and send power project
00:10:48 [W] Was on the 19th. So from now from that time, we grow very healthy and now we have more than from 30 to 300 contributors and the GitHub stars
00:11:04 [W] And from 30 to 300 contributors and the GitHub stars from 400 now, it's more than 2700 and the four Forks GitHub Folks at that time is
00:11:12 [W] And the four Forks GitHub Folks at that time is 100 now. It's more than 700 and the contribution organization is from beginning. Only one now is more than 25 and maintainers
00:11:23 [W] Healthy from 7 to 14 from five different companies.
00:11:31 [W] You can see the top contributors. The new contributors are from four different companies and they have a steady cam commit trend for the our repo
00:11:44 [W] Yeah, collaborating with other open source communities and they are we the communities iot Edge work group working group very support for this project and we have a very
00:11:59 [W] Some with them. Also. We work with LF Edge the Nick Foundation Edge a criminal project.
00:12:10 [W] We have a to blueprint project family. There one is called the Elliot.
00:12:19 [W] It's a mini for industry LT. The other one is kubeedge and serverless. BP is a blueprint that's for MLF loading and some AI framework a lot of a new
00:12:27 [W] rebuild
00:12:29 [W] Contributions so you can as I said, we have a lot of a contribution organizations, and also we have a lot of adopters contribution including armed son from China Unicom
00:12:46 [W] Adopters contribution including armas unsung China Unicom Etc, and that's all listed here.
00:12:52 [W] And also we have more than 20 adopters.
00:13:00 [W] You can click that's all listed in our GitHub repo you can see we have adopters list and we mentioned the wreath cam were clouded seen how iot chronosphere.
00:13:08 [W] fear hobby Club
00:13:10 [W] And a few others we need their combination be can before we can publish their name.
00:13:17 [W] So one user adoption examples I'm going to present here is a Highway DTC system.
00:13:28 [W] You can see thus we have a lot of taupe gate in the highway.
00:13:38 [W] So that's touchless contestant is so the car can drive through the gate so it automatically recognizes your plate number and charge on your account.
00:13:48 [W] So you can pass through the gate quickly without a stop and
00:13:50 [W] All and the pay and it can be obtained or something.
00:13:59 [W] So for this scenario, we have a lot of edge. So basically also the edge have a heated genius.
00:14:07 [W] However, the sum of have a 86 serverless some are using arm servers in their gate of them.
00:14:12 [W] So kubeedge, yeah in charge of deploy the application to the edge and manage the lifecycle all this stuff the kubenetes and kubeedge is deployed
00:14:32 [W] each of the life cycle all this stuff the kubernative and kubeedge is deployed in the public cloud and Edge is Gog to 0 this tributed across a lot of
00:14:40 [W] An edge is Gog Gog Gog distributed across a lot of places.
00:14:48 [W] So in this scenario, we have more than 50,000 at you know, the manager by the kubeedge and also the containers the application containers and more than half a million.
00:14:56 [W] So and also it will it's generator about 300 million data record ever.
00:15:02 [W] Today and it's improved the efficiency of this system as used to be 15 15 second to process a car now is only take two seconds the track you to take an almost
00:15:17 [W] Down to three second is improved the user efficiency.
00:15:23 [W] Now, let me give me a few minutes.
00:15:33 [W] I'm going to show you a demo to see how easy you can deploy your own kubeedge system and how is easy how easy you can use that the same communities experience deploy our application from cloudbees Edge, so you
00:15:43 [W] Even noticed is running on the edge. It's not in their Data Center.
00:15:48 [W] Now, let me show you a quick demo.
00:15:55 [W] So basically, I have a two windows.
00:16:10 [W] The upper one is The Edge. The lower one is the cloud.
00:16:11 [W] We already have a queen knative deployed.
00:16:13 [W] You can see there's a only Master node right now.
00:16:20 [W] Now we register our Cloud part is just one single.
00:16:23 [W] Single combined you can see the clouded wrath gesture.
00:16:30 [W] The cloud part of the clock or way I show in the first slide of the architecture. Now. We are keep a token. This token is using by The Edge register to the system.
00:16:43 [W] Now we initiate a connection from Azure Cloud to register this Edge node to the system.
00:16:58 [W] We use this token and to verify your identity.
00:16:59 [W] Now we can go back to we can see the log at the edge core part is running properly.
00:17:09 [W] The architecture now we are keep a token. This token is using by The Edge register to the system.
00:17:15 [W] Now we initiate a connection from the edge of the cloud to register this Edge node to the system.
00:17:16 [W] use this token and to verify your identity.
00:17:16 [W] Now we can go back to we can see the log at the edge core part is running properly.
00:17:17 [W] Now, let's go back to the cloud lets you can see in the screen you the get node, you can see the agent that the edge node already registered as a worker node in the system.
00:17:27 [W] Now, let's do a quick deployment.
00:17:29 [W] Basically. We have a simple ngx.
00:17:31 [W] application we are going to deploy so you can see all the API and the CLI is the same as the
00:17:41 [W] it's all at the
00:17:48 [W] communities
00:17:51 [W] now we you see the we just do the deployment.
00:17:58 [W] llamo is deployed. You can see on the top of your ID darker PSC the system see the positive running now and at the bottom we from the cloud we access that nginx Port you can see
00:18:10 [W] when 80s
00:18:10 [W] now we you see the we just do the deployment.
00:18:11 [W] Llamo is deployed.
00:18:12 [W] You can see on the top of your ID Docker PS see the system.
00:18:13 [W] see The positron Ting now and the bottom we from the cloud we access that nginx Port you can see it's responding. The injects is running properly.
00:18:14 [W] Yep, that's the quick demo.
00:18:19 [W] So you can see from the demo is just a one combined. You can register the let me go back to my attack chat so you can see
00:18:37 [W] the you can register your Cloud Core connect to the kubernative then as just someone combined running on the edge you set up a connection from Edge to Cloud then register in the kubernative
00:18:52 [W] That time you can use that knative the same kubernative API to deploy the application from the cloud to the edge.
00:19:07 [W] Even the edges running behind some fire Ward is normally even don't have a public IP.
00:19:12 [W] So so in the future we are going to we in a good Trend so we are going to build our community even better.
00:19:27 [W] So we are welcome everybody contribute and participate in our community.
00:19:40 [W] We are going to achieve we are going to seek more a wider user adoptions and we are welcome and I hope more developers can participate and for the scenario we are going to
00:19:45 [W] Set up a two things one is a device iot one is Mac.
00:19:55 [W] It's a mobile Edge Computing or multi-access educate cloud computing.
00:20:02 [W] So we hope with these to 6. We have a more user cases and more user adoptions in this project and we are currently applying graduated from the sandbox stage
00:20:12 [W] Paige stage now it's in the middle of a Toc of voting right now.
00:20:21 [W] Hopefully by the time we play this video.
00:20:25 [W] We already formally be entered an incubation stage of cncf incubation state for more technical.
00:20:33 [W] We have a detailed project development roadmap. I will come everybody go to our a GitHub to see our roadmap and to give your feedback.
00:20:43 [W] And if you want to new features, you can put in here or issue a PR in the GitHub.
00:20:58 [W] So this page I'm going to give you are here as a the first one is our of official website kubeedge at I/O and the second is our code repo, so,
00:21:06 [W] Here you go there and issue your PR to re-do the feature requests or back report and any questions. You can also go to stack you all this you can I believe this
00:21:21 [W] Shared on the web site. You can come here and click here to draw an elastic Channel and to talk to have your questions or feature requests anything and also we have a Google group so you can
00:21:37 [W] Last question as well and we have our regularly meeting basically a biweekly one is a Europe friendly time. One is North America friendly time.
00:21:52 [W] You can pick up your more convenient to you all. This is in our GitHub repo and also in these slides you can click through and then we have a calendar as you can click in all
00:22:05 [W] Meeting according to a cncf policy. We are recorded and published in the YouTube so you can go to our YouTube channel to see all the meeting records.
00:22:18 [W] So if you have it.
00:22:19 [W] so if you miss a one meeting, you can always go to YouTube to see the recording and use the slag Mainland if any channel to ask our questions or send you a
00:22:32 [W] feature request
00:22:34 [W] so now it's the time for Q&A. I will be here to answer any questions you have.
00:22:46 [W] So now I'm going to thank you and waiting for you to ask questions.
00:22:53 [W0] Hi, how are you?
00:22:59 [W0] Oh, yeah. I got a few questions.
00:23:03 [W0] Let me just try to answer that in the other is okay.
00:23:14 [W0] The first one is the communication between the edge and Cloud Note Edge hop and the cloud Hub one is how the edge node among themselves.
00:23:21 [W0] the question. Yeah, we could put an net between Edge Hub and the cloud Hub. So
00:23:27 [W0] It doesn't matter.
00:23:31 [W0] Is it the goal? We do the websocket this way it to make sure even you don't have a net on your Edge on your firewall for your Edge.
00:23:42 [W0] You still can communicate the between the edge node and control control plane?
00:23:55 [W0] the if you have a net does that also works and also from websocket we have here TLS we can configure TLS to do the secure.
00:23:57 [W0] Communication and among the effect if you have or you don't have a net set up for between the edge node. We have a
00:24:09 [W0] small project corded Edge mesh to solve the problem between the communication between H nodes is still in the first stage.
00:24:21 [W0] And go to the GitHub.
00:24:29 [W0] There's a add to match folder.
00:24:30 [W0] You can take a look and also in the dock to the proposal for the edge mesh.
00:24:39 [W0] You welcome to give some feedback on the proposal.
00:24:42 [W0] We are going to update that proposal for more better solution.
00:24:45 [W0] The second question is about the state of kubeedge are currently we are still applying graduated from sandbox is in the middle of
00:24:57 [W0] Toc voting we got a 6-volt already we did eight to officially graduate from ground graduate from symbolic into the incubation.
00:25:13 [W0] So hopefully is in the next few days.
00:25:15 [W0] Technical companies are actually we got a few technical companies. I
00:25:24 [W0] Did they have a different pervert use of a kubeedge for example in the China Unicom? They have their own their Cloud offering using the kubeedge for their iot platform
00:25:39 [W0] Me see the Tactical if we stuff we have a me see Sig special interest group in our project.
00:25:55 [W0] So I'll discuss how we apply kubeedge into the life. We all these mecc scenario and
00:25:59 [W0] A few already a few technical company showed interest in the discussion. However
00:26:08 [W0] there now the in the production yet, but they are evaluating and prototyping the solutions hopefully in a few months. I can give you a more detailed update when they agreed to disclose their names and their
00:26:23 [W0] effort
00:26:25 [W0] the next question is
00:26:30 [W0] ask about the H node is the part of a cloud.
00:26:35 [W0] Yes from the point of view of control plan. You can see the edge node as a kind of a worker node.
00:26:50 [W0] The only different is The Edge node at the remote instead of in the same data center. So the as I said in the presentation
00:26:56 [W0] It's denote because it's in the remote that you probably connected through the ISP internet.
00:27:10 [W0] So the connection may not be reliable and it could and it could be a slow the latency you could be large, but the from control plane point of view is
00:27:16 [W0] Clip of system. So it's a just a kind of a worker node.
00:27:22 [W0] You talk to what kind of the same way you talk to the regular worker node.
00:27:32 [W0] I wear the kubeedge real proxy you are.
00:27:33 [W0] All the communication between that remote Edge node and the control plane.
00:27:39 [W0] The next question is about kubeedge.
00:27:44 [W0] Why should I use kubeedge and instead of a minikube so minikube is a full communities deployment.
00:27:58 [W0] So kubeedge won't is replaced with minikube because kubeedge doesn't include the old implementation of a kubenetes.
00:28:06 [W0] It's extended.
00:28:07 [W0] it's built on kubernative. So I probably the demo is very short. The demo is show is actually it's using minikube.
00:28:16 [W0] To we in the cloud node. We deploy a kubenetes. So to simplify deployment we use a minikube deployment. So the kubeedge is added on to the kubernative specifically
00:28:31 [W0] It's so quaint knative long replate minikube.
00:28:36 [W0] Minikube.
00:28:38 [W0] It's our kind of a very simplified deployment for kubernative kubeedge.
00:28:51 [W0] It's that I'd onto the minikube. So if you have a remote Edge node, or you want to control remote Edge node, you can use minikube + kubeedge as I show in the demo.
00:28:58 [W0] So the kubeedge is the goal is to control and to manage the
00:29:02 [W0] The Edge node in the remote site and to solve your network connection issues authentication or other deployment issues the regular kubernative including minikube
00:29:17 [W0] because they cannot tolerate the slow internet connection and reliable internet connection can also it may be
00:29:29 [W0] It is could be.
00:29:32 [W0] Disconnect - no could be disconnected from the internet.
00:29:41 [W0] You still need to handle the request another question about the demo. Oh, yeah the demo is that because time elated and emitted.
00:29:50 [W0] The question is why we show this kind of demo is the inject Polly Renning other. I don't know. Yeah, I don't have time but I can show you later is the inject
00:30:05 [W0] remote Edge node, so that the demo is show to purpose first one is very easy to deploy a kubernative a edge onto the existing kubeedge covid-19 deployment and
00:30:21 [W0] The second purpose is a oh, yeah, after deployment that you can easily using the existing kublr kubenetes API or kublr control the the way it's exactly the same as
00:30:38 [W0] All the the way you could exactly the same as kubenetes to deploy your workload to the remote Edge site and I didn't have time to show how we do the edge devices.
00:30:48 [W0] How we do the add devices?
00:30:49 [W0] However, I can if anyone interested. I can you can go to the our GitHub.
00:30:57 [W0] We have a example folder.
00:30:59 [W0] There's a kind of examples. If you have any questions, you can go to slack to ask and I'm happy to build more demo videos to show.
00:31:08 [W0] Let's skip the next one the question you can ask you here.
00:31:20 [W0] I suggest that if you have a more a technical question asked in the snack that you get a more detailed answer. If you ask here at get lost after this session, I won't have access happily.
00:31:28 [W0] Another question is about the the cube quick and the websocket.
00:31:44 [W0] We are evaluating the quick maybe replace websocket.
00:31:49 [W0] That's the just our technique that we are try to evaluate which one is better.
00:31:53 [W0] the last question about the
00:32:00 [W0] How was the best developer at application with kubeedge how to respond responsibilities between cloud and Edge so our principle is?
00:32:15 [W0] On your job Ray. So the ash cloud computing the the purpose the goal is to compute and process data near the location that data is generated.
00:32:33 [W0] that means if you have a lot of iot device, for example, you have a lot of iot devices you collect a lot of data. So in order to process
00:32:42 [W0] You so you don't want to transfer all this data back to your central Cloud to process that it's available bandwidth and is also the latency the response latency will be long.
00:32:58 [W0] So that's why you want to your processing job on the edge side. So you can have an instant result to process data. Also the data privacy, for example, if you are a
00:33:12 [W0] Manufacturer Factory, you don't want to upload your raw data back to the cloud in case there's a security issues.
00:33:21 [W0] You don't want to.
00:33:22 [W0] I mean the expose your data to the public.
00:33:29 [W0] So if you can mask the data on the edge, so then you can even this is something wrong with the card you won't have any issues.
00:33:39 [W0] Pre-processing for the privacy's do it in the active site if you want low latency and to then you do data on edge.
00:34:04 [W0] Also, you will want to sit bandwidth do it on the edge.
00:34:15 [W0] However, if you have a large machine learning or a job you have a energy consumption.
00:34:16 [W0] The evil comes from consume a lot of energy on the computer or you need a large computer resource that job should run on the cloud, but you can add add you to the low
00:34:32 [W0] To save the bandwidth and also to save your privacy.
00:34:40 [W0] I think that's all.
00:34:41 [W0] okay, that's a
00:34:48 [W0] There's a place to question is sorry that's allowed to question is what's the update the component?
00:34:56 [W0] one but we still working on that in the community. We have we try to produce a better upgrade plans.
00:35:06 [W0] And the last question is about can we manage a remote cluster node currently?
00:35:17 [W0] No, we are we have only one control plan. We compare if we want the remote cluster on the Node. So so we evaluate the the scenarios so
00:35:31 [W0] Well, we treat the now the individually, however, we are going to introduce Edge mesh.
00:35:38 [W0] To allow the node communicate between each other because if you allow the cluster in the note, you need to synchronize not only the node status but also standard class the status between
00:35:54 [W0] Send small.
00:36:00 [W0] I mean they are the remote cluster that one we evaluated. We think probably for example in the production example.
00:36:11 [W0] I show you my presentation to use a multi clusters.
00:36:14 [W0] always more like a Kuma fat to do the layer the cluster in the cloud side instead of in The Edge side, so that way we don't want to
00:36:24 [W0] We have a trade-off between the complexities and the and the simplest it is so so far. We only control the remote node.
00:36:37 [W0] However, you can allow the node to communicate to each other for your from your application.
00:36:40 [W0] Okay, I think that's all the questions I have today.
00:36:46 [W0] Thank you everyone.
00:36:48 [W0] Thank you to attend to listen to this presentation.
00:36:58 [W0] And yeah, if you have more questions, please go to the Google group and the slack.
00:37:03 [W0] I'm happy to answer more questions there and I hope everybody can I thank everybody showed interest.
00:37:08 [W0] I hope you can have a chance to try it and the probably too.
00:37:10 [W0] Dissipated in our community.
00:37:14 [W0] Thank you. Yeah. Thank you everyone.

Transcription for wordly [W0]

00:01:00 [W] Hi everyone.
00:01:04 [W] Thank you for coming to my session.
00:01:06 [W] The session is about a kubeedge the name is the kubeedge kubernative knative at cloud computing framework this day introduction session.
00:01:18 [W] My name is ending I work for futurewei and the one of the founding member of this project.
00:01:22 [W] So for my talk, I have this structure. I will talk about the background then a little bit architecture of a kubeedge then the communities that is following the
00:01:39 [W] Slides I'm going to give a user adoption example, and I also going to show a short demo to see how easy you can deploy your own kubeedge for your Youth and At Last I have
00:01:54 [W] Quest information to share with you, and I'm going to do the live Q&A after this recording.
00:02:04 [W] So please have your questions ready.
00:02:05 [W] I'm going to live to answer your questions online and or in person if I can so let's start background.
00:02:16 [W] So kubeedge kubeedge is a platform. We build upon of a community's so the purpose is provide the fundamental.
00:02:25 [W] The infrastructure to support network application development and meta data synchronization between the edge and the cloud so all we know cloud and Edge very different.
00:02:39 [W] So there's a lot of challenges if you want to resolve Edge Computing problems first is Network reliability not like a cloud you have a high speed reliable connection within the
00:02:54 [W] Rice with in your data center.
00:02:59 [W] So Cloud to add you may have unreliable a network connections and your network bandwidth will be limited between your cloud and Edge and also a lot of time the edge have only limited resource.
00:03:12 [W] We need to work within that the limitation and also when the network got disconnected we need a autonomous.
00:03:23 [W] operations on the edge so the The Edge can run independently without the connect to the cloud and also because we support a lot of iot a scenarios that's a highly distributed and he genius device management and
00:03:39 [W] He protocols we need to work with so that's all the challenges. So with this challenge kubeedge can provide like four major features. The first is seamless Cloud
00:03:54 [W] Nation so we do this for metadata and data seamlessly with other user interaction or intervention and the we also support
00:04:10 [W] On the me. So basically we support autonomous operation on the edge you will win the edge is disconnected from the cloud.
00:04:24 [W] And also we are low resource ready.
00:04:29 [W] That means if you have only a low config The Edge server the kubeedge has still work in this resource constrained the edge in this situation. Basically, you have a low memory low Network bandwidth.
00:04:39 [W] a lower real ondcp UI low computer power
00:04:44 [W] kubeedge can work in this scenario.
00:04:53 [W] And also we have strong support for the iot.
00:04:56 [W] So we simplified device communication.
00:05:00 [W] So it's very easy for the iot application to communicate between application of device in the iot scenario.
00:05:09 [W] So, this is our release Journey this project we enter as a Sandbox project of kubernative seek cncf in
00:05:26 [W] At that time we already support a combination coredns P eyes including a no depart complete map secret Etc.
00:05:41 [W] So in the June 2019, we have the official 1.0 release during this release.
00:05:47 [W] We highlight some features like ovhcloud coordination for devices. And also we verify the container integration.
00:05:53 [W] Then in 1.1 release we provide CSI integration for the edge and one point to release we a big feature. We release it account kubeedge componentconfig
00:06:11 [W] 1.3 really is we support log connect from pot add H. We also verify the cri-o integration in one point for release that's in the in August
00:06:26 [W] to have a we're going to support a community kubernative knative Matrix API, so you can collect performance data from Edge to cloud and there's a few more features because when I record
00:06:42 [W] Haven't have done release yet.
00:06:48 [W] I hope when this recording is played we are going to have this really so I gave the released log link here so you can click through when you see this video.
00:07:00 [W] So now we are released every three months then about a one month after official kubenetes released.
00:07:11 [W] We're going to have the compatibility issue to solve them.
00:07:13 [W] When we can upgrade the kubernative dependency follow the release, so we are in the same three months release cycle now architecture.
00:07:28 [W] So let me introduce the kubeedge architecture basically kubeedge is natively extend the kubernative.
00:07:37 [W] So we work with the communities we met in the majority. We have two components cloud and F5.
00:07:43 [W] So I'm going to elaborate each part in the following sighs. But now I will you introduce so mainly on the cloud. We have a clock or basically it's talk to kubernative and
00:07:59 [W] The request to the edge part The Edge have a edge Corps and it's a table to The Container engine and also the mqtt devices and I'm going to have this elaborated in the
00:08:14 [W] Jen and also the mqtt devices and I'm going to have this elaborated in the following slides.
00:08:16 [W] For that edge Cloud part. So basically we have the least watch to talk to the kubernative master.
00:08:32 [W] We have ADD controller basically the Shadow the management of for the know the part everything coordinated knative resources, and we have a device API device controller.
00:08:37 [W] That's for the iot devices modeling. Then we have a sync server that sinks over is basically
00:08:45 [W] We can detect inconsistent between the cloud and Edge and to solve this issues.
00:08:55 [W] Then we have the kubeedge CSI drivers does hook up the storage provisioning for the edge.
00:09:01 [W] And also we have the admission webhook.
00:09:05 [W] That's for the device cri-o.
00:09:06 [W] we can do the API validation and the best practice enforcement Edge. So one thing important
00:09:15 [W] Part is Edge. So in Edge, we have a job.
00:09:21 [W] Let's talk to the cloud.
00:09:24 [W] So the closed part of a kubeedge have also a clock Hub.
00:09:29 [W] So that's the we set up a web socket from Edge to Cloud so we can talk seamlessly from Edge to Cloud.
00:09:36 [W] Device cri-o we can do the API validation and the best practice enforcement.
00:09:45 [W] Edge so one of the important part is Edge. So in Edge, we have a job.
00:09:46 [W] They've talked to the cloud.
00:09:46 [W] So the cloud part of a kubeedge have also a cloud Hub.
00:09:47 [W] So does the we set up a web socket from Edge to Cloud so we can talk seamlessly from Edge to Cloud.
00:09:49 [W] So this way you when you add it behind some firewall or Gateway, even you don't have a public IP. We can initiate a connection from
00:09:50 [W] Add to the cloud so then the edge Cloud can talk through this websocket channel to to reach the cloud Edge communication and other part we have a metadata
00:09:57 [W] The can talk through this websocket channel to to reach the cloud Edge communication.
00:09:58 [W] And other part we have a metadata manager is a load level of metadata persistent and the HD is a more like kubelet but there's a light weighted and only do necessary
00:10:09 [W] And also is also responsible for the part of the life cycle and we have a device to in that's basically a synchronized device status between the cloud and Edge and the divides. The last part is eventbus dust is our
00:10:25 [W] It's basically a synchronized device status between the cloud and Edge and the device.
00:10:26 [W] The last part is eventbus dust is our mqtt client does synchronize the device status the from the device and the edge node, so to in this way you can control
00:10:36 [W] Thus synchronized device status the from the device and the edge node.
00:10:37 [W] So to in this way, you can control your iot device Community. As I said this project enter cncf sandbox and send power project
00:10:48 [W] Was on the 19th. So from now from that time, we grow very healthy and now we have more than from 30 to 300 contributors and the GitHub stars
00:11:04 [W] And from 30 to 300 contributors and the GitHub stars from 400 now, it's more than 2700 and the four Forks GitHub Folks at that time is
00:11:12 [W] And the four Forks GitHub Folks at that time is 100 now. It's more than 700 and the contribution organization is from beginning. Only one now is more than 25 and maintainers
00:11:23 [W] Healthy from 7 to 14 from five different companies.
00:11:31 [W] You can see the top contributors. The new contributors are from four different companies and they have a steady cam commit trend for the our repo
00:11:44 [W] Yeah, collaborating with other open source communities and they are we the communities iot Edge work group working group very support for this project and we have a very
00:11:59 [W] Some with them. Also. We work with LF Edge the Nick Foundation Edge a criminal project.
00:12:10 [W] We have a to blueprint project family. There one is called the Elliot.
00:12:19 [W] It's a mini for industry LT. The other one is kubeedge and serverless. BP is a blueprint that's for MLF loading and some AI framework a lot of a new
00:12:27 [W] rebuild
00:12:29 [W] Contributions so you can as I said, we have a lot of a contribution organizations, and also we have a lot of adopters contribution including armed son from China Unicom
00:12:46 [W] Adopters contribution including armas unsung China Unicom Etc, and that's all listed here.
00:12:52 [W] And also we have more than 20 adopters.
00:13:00 [W] You can click that's all listed in our GitHub repo you can see we have adopters list and we mentioned the wreath cam were clouded seen how iot chronosphere.
00:13:08 [W] fear hobby Club
00:13:10 [W] And a few others we need their combination be can before we can publish their name.
00:13:17 [W] So one user adoption examples I'm going to present here is a Highway DTC system.
00:13:28 [W] You can see thus we have a lot of taupe gate in the highway.
00:13:38 [W] So that's touchless contestant is so the car can drive through the gate so it automatically recognizes your plate number and charge on your account.
00:13:48 [W] So you can pass through the gate quickly without a stop and
00:13:50 [W] All and the pay and it can be obtained or something.
00:13:59 [W] So for this scenario, we have a lot of edge. So basically also the edge have a heated genius.
00:14:07 [W] However, the sum of have a 86 serverless some are using arm servers in their gate of them.
00:14:12 [W] So kubeedge, yeah in charge of deploy the application to the edge and manage the lifecycle all this stuff the kubenetes and kubeedge is deployed
00:14:32 [W] each of the life cycle all this stuff the kubernative and kubeedge is deployed in the public cloud and Edge is Gog to 0 this tributed across a lot of
00:14:40 [W] An edge is Gog Gog Gog distributed across a lot of places.
00:14:48 [W] So in this scenario, we have more than 50,000 at you know, the manager by the kubeedge and also the containers the application containers and more than half a million.
00:14:56 [W] So and also it will it's generator about 300 million data record ever.
00:15:02 [W] Today and it's improved the efficiency of this system as used to be 15 15 second to process a car now is only take two seconds the track you to take an almost
00:15:17 [W] Down to three second is improved the user efficiency.
00:15:23 [W] Now, let me give me a few minutes.
00:15:33 [W] I'm going to show you a demo to see how easy you can deploy your own kubeedge system and how is easy how easy you can use that the same communities experience deploy our application from cloudbees Edge, so you
00:15:43 [W] Even noticed is running on the edge. It's not in their Data Center.
00:15:48 [W] Now, let me show you a quick demo.
00:15:55 [W] So basically, I have a two windows.
00:16:10 [W] The upper one is The Edge. The lower one is the cloud.
00:16:11 [W] We already have a queen knative deployed.
00:16:13 [W] You can see there's a only Master node right now.
00:16:20 [W] Now we register our Cloud part is just one single.
00:16:23 [W] Single combined you can see the clouded wrath gesture.
00:16:30 [W] The cloud part of the clock or way I show in the first slide of the architecture. Now. We are keep a token. This token is using by The Edge register to the system.
00:16:43 [W] Now we initiate a connection from Azure Cloud to register this Edge node to the system.
00:16:58 [W] We use this token and to verify your identity.
00:16:59 [W] Now we can go back to we can see the log at the edge core part is running properly.
00:17:09 [W] The architecture now we are keep a token. This token is using by The Edge register to the system.
00:17:15 [W] Now we initiate a connection from the edge of the cloud to register this Edge node to the system.
00:17:16 [W] use this token and to verify your identity.
00:17:16 [W] Now we can go back to we can see the log at the edge core part is running properly.
00:17:17 [W] Now, let's go back to the cloud lets you can see in the screen you the get node, you can see the agent that the edge node already registered as a worker node in the system.
00:17:27 [W] Now, let's do a quick deployment.
00:17:29 [W] Basically. We have a simple ngx.
00:17:31 [W] application we are going to deploy so you can see all the API and the CLI is the same as the
00:17:41 [W] it's all at the
00:17:48 [W] communities
00:17:51 [W] now we you see the we just do the deployment.
00:17:58 [W] llamo is deployed. You can see on the top of your ID darker PSC the system see the positive running now and at the bottom we from the cloud we access that nginx Port you can see
00:18:10 [W] when 80s
00:18:10 [W] now we you see the we just do the deployment.
00:18:11 [W] Llamo is deployed.
00:18:12 [W] You can see on the top of your ID Docker PS see the system.
00:18:13 [W] see The positron Ting now and the bottom we from the cloud we access that nginx Port you can see it's responding. The injects is running properly.
00:18:14 [W] Yep, that's the quick demo.
00:18:19 [W] So you can see from the demo is just a one combined. You can register the let me go back to my attack chat so you can see
00:18:37 [W] the you can register your Cloud Core connect to the kubernative then as just someone combined running on the edge you set up a connection from Edge to Cloud then register in the kubernative
00:18:52 [W] That time you can use that knative the same kubernative API to deploy the application from the cloud to the edge.
00:19:07 [W] Even the edges running behind some fire Ward is normally even don't have a public IP.
00:19:12 [W] So so in the future we are going to we in a good Trend so we are going to build our community even better.
00:19:27 [W] So we are welcome everybody contribute and participate in our community.
00:19:40 [W] We are going to achieve we are going to seek more a wider user adoptions and we are welcome and I hope more developers can participate and for the scenario we are going to
00:19:45 [W] Set up a two things one is a device iot one is Mac.
00:19:55 [W] It's a mobile Edge Computing or multi-access educate cloud computing.
00:20:02 [W] So we hope with these to 6. We have a more user cases and more user adoptions in this project and we are currently applying graduated from the sandbox stage
00:20:12 [W] Paige stage now it's in the middle of a Toc of voting right now.
00:20:21 [W] Hopefully by the time we play this video.
00:20:25 [W] We already formally be entered an incubation stage of cncf incubation state for more technical.
00:20:33 [W] We have a detailed project development roadmap. I will come everybody go to our a GitHub to see our roadmap and to give your feedback.
00:20:43 [W] And if you want to new features, you can put in here or issue a PR in the GitHub.
00:20:58 [W] So this page I'm going to give you are here as a the first one is our of official website kubeedge at I/O and the second is our code repo, so,
00:21:06 [W] Here you go there and issue your PR to re-do the feature requests or back report and any questions. You can also go to stack you all this you can I believe this
00:21:21 [W] Shared on the web site. You can come here and click here to draw an elastic Channel and to talk to have your questions or feature requests anything and also we have a Google group so you can
00:21:37 [W] Last question as well and we have our regularly meeting basically a biweekly one is a Europe friendly time. One is North America friendly time.
00:21:52 [W] You can pick up your more convenient to you all. This is in our GitHub repo and also in these slides you can click through and then we have a calendar as you can click in all
00:22:05 [W] Meeting according to a cncf policy. We are recorded and published in the YouTube so you can go to our YouTube channel to see all the meeting records.
00:22:18 [W] So if you have it.
00:22:19 [W] so if you miss a one meeting, you can always go to YouTube to see the recording and use the slag Mainland if any channel to ask our questions or send you a
00:22:32 [W] feature request
00:22:34 [W] so now it's the time for Q&A. I will be here to answer any questions you have.
00:22:46 [W] So now I'm going to thank you and waiting for you to ask questions.
00:22:53 [W0] Hi, how are you?
00:22:59 [W0] Oh, yeah. I got a few questions.
00:23:03 [W0] Let me just try to answer that in the other is okay.
00:23:14 [W0] The first one is the communication between the edge and Cloud Note Edge hop and the cloud Hub one is how the edge node among themselves.
00:23:21 [W0] the question. Yeah, we could put an net between Edge Hub and the cloud Hub. So
00:23:27 [W0] It doesn't matter.
00:23:31 [W0] Is it the goal? We do the websocket this way it to make sure even you don't have a net on your Edge on your firewall for your Edge.
00:23:42 [W0] You still can communicate the between the edge node and control control plane?
00:23:55 [W0] the if you have a net does that also works and also from websocket we have here TLS we can configure TLS to do the secure.
00:23:57 [W0] Communication and among the effect if you have or you don't have a net set up for between the edge node. We have a
00:24:09 [W0] small project corded Edge mesh to solve the problem between the communication between H nodes is still in the first stage.
00:24:21 [W0] And go to the GitHub.
00:24:29 [W0] There's a add to match folder.
00:24:30 [W0] You can take a look and also in the dock to the proposal for the edge mesh.
00:24:39 [W0] You welcome to give some feedback on the proposal.
00:24:42 [W0] We are going to update that proposal for more better solution.
00:24:45 [W0] The second question is about the state of kubeedge are currently we are still applying graduated from sandbox is in the middle of
00:24:57 [W0] Toc voting we got a 6-volt already we did eight to officially graduate from ground graduate from symbolic into the incubation.
00:25:13 [W0] So hopefully is in the next few days.
00:25:15 [W0] Technical companies are actually we got a few technical companies. I
00:25:24 [W0] Did they have a different pervert use of a kubeedge for example in the China Unicom? They have their own their Cloud offering using the kubeedge for their iot platform
00:25:39 [W0] Me see the Tactical if we stuff we have a me see Sig special interest group in our project.
00:25:55 [W0] So I'll discuss how we apply kubeedge into the life. We all these mecc scenario and
00:25:59 [W0] A few already a few technical company showed interest in the discussion. However
00:26:08 [W0] there now the in the production yet, but they are evaluating and prototyping the solutions hopefully in a few months. I can give you a more detailed update when they agreed to disclose their names and their
00:26:23 [W0] effort
00:26:25 [W0] the next question is
00:26:30 [W0] ask about the H node is the part of a cloud.
00:26:35 [W0] Yes from the point of view of control plan. You can see the edge node as a kind of a worker node.
00:26:50 [W0] The only different is The Edge node at the remote instead of in the same data center. So the as I said in the presentation
00:26:56 [W0] It's denote because it's in the remote that you probably connected through the ISP internet.
00:27:10 [W0] So the connection may not be reliable and it could and it could be a slow the latency you could be large, but the from control plane point of view is
00:27:16 [W0] Clip of system. So it's a just a kind of a worker node.
00:27:22 [W0] You talk to what kind of the same way you talk to the regular worker node.
00:27:32 [W0] I wear the kubeedge real proxy you are.
00:27:33 [W0] All the communication between that remote Edge node and the control plane.
00:27:39 [W0] The next question is about kubeedge.
00:27:44 [W0] Why should I use kubeedge and instead of a minikube so minikube is a full communities deployment.
00:27:58 [W0] So kubeedge won't is replaced with minikube because kubeedge doesn't include the old implementation of a kubenetes.
00:28:06 [W0] It's extended.
00:28:07 [W0] it's built on kubernative. So I probably the demo is very short. The demo is show is actually it's using minikube.
00:28:16 [W0] To we in the cloud node. We deploy a kubenetes. So to simplify deployment we use a minikube deployment. So the kubeedge is added on to the kubernative specifically
00:28:31 [W0] It's so quaint knative long replate minikube.
00:28:36 [W0] Minikube.
00:28:38 [W0] It's our kind of a very simplified deployment for kubernative kubeedge.
00:28:51 [W0] It's that I'd onto the minikube. So if you have a remote Edge node, or you want to control remote Edge node, you can use minikube + kubeedge as I show in the demo.
00:28:58 [W0] So the kubeedge is the goal is to control and to manage the
00:29:02 [W0] The Edge node in the remote site and to solve your network connection issues authentication or other deployment issues the regular kubernative including minikube
00:29:17 [W0] because they cannot tolerate the slow internet connection and reliable internet connection can also it may be
00:29:29 [W0] It is could be.
00:29:32 [W0] Disconnect - no could be disconnected from the internet.
00:29:41 [W0] You still need to handle the request another question about the demo. Oh, yeah the demo is that because time elated and emitted.
00:29:50 [W0] The question is why we show this kind of demo is the inject Polly Renning other. I don't know. Yeah, I don't have time but I can show you later is the inject
00:30:05 [W0] remote Edge node, so that the demo is show to purpose first one is very easy to deploy a kubernative a edge onto the existing kubeedge covid-19 deployment and
00:30:21 [W0] The second purpose is a oh, yeah, after deployment that you can easily using the existing kublr kubenetes API or kublr control the the way it's exactly the same as
00:30:38 [W0] All the the way you could exactly the same as kubenetes to deploy your workload to the remote Edge site and I didn't have time to show how we do the edge devices.
00:30:48 [W0] How we do the add devices?
00:30:49 [W0] However, I can if anyone interested. I can you can go to the our GitHub.
00:30:57 [W0] We have a example folder.
00:30:59 [W0] There's a kind of examples. If you have any questions, you can go to slack to ask and I'm happy to build more demo videos to show.
00:31:08 [W0] Let's skip the next one the question you can ask you here.
00:31:20 [W0] I suggest that if you have a more a technical question asked in the snack that you get a more detailed answer. If you ask here at get lost after this session, I won't have access happily.
00:31:28 [W0] Another question is about the the cube quick and the websocket.
00:31:44 [W0] We are evaluating the quick maybe replace websocket.
00:31:49 [W0] That's the just our technique that we are try to evaluate which one is better.
00:31:53 [W0] the last question about the
00:32:00 [W0] How was the best developer at application with kubeedge how to respond responsibilities between cloud and Edge so our principle is?
00:32:15 [W0] On your job Ray. So the ash cloud computing the the purpose the goal is to compute and process data near the location that data is generated.
00:32:33 [W0] that means if you have a lot of iot device, for example, you have a lot of iot devices you collect a lot of data. So in order to process
00:32:42 [W0] You so you don't want to transfer all this data back to your central Cloud to process that it's available bandwidth and is also the latency the response latency will be long.
00:32:58 [W0] So that's why you want to your processing job on the edge side. So you can have an instant result to process data. Also the data privacy, for example, if you are a
00:33:12 [W0] Manufacturer Factory, you don't want to upload your raw data back to the cloud in case there's a security issues.
00:33:21 [W0] You don't want to.
00:33:22 [W0] I mean the expose your data to the public.
00:33:29 [W0] So if you can mask the data on the edge, so then you can even this is something wrong with the card you won't have any issues.
00:33:39 [W0] Pre-processing for the privacy's do it in the active site if you want low latency and to then you do data on edge.
00:34:04 [W0] Also, you will want to sit bandwidth do it on the edge.
00:34:15 [W0] However, if you have a large machine learning or a job you have a energy consumption.
00:34:16 [W0] The evil comes from consume a lot of energy on the computer or you need a large computer resource that job should run on the cloud, but you can add add you to the low
00:34:32 [W0] To save the bandwidth and also to save your privacy.
00:34:40 [W0] I think that's all.
00:34:41 [W0] okay, that's a
00:34:48 [W0] There's a place to question is sorry that's allowed to question is what's the update the component?
00:34:56 [W0] one but we still working on that in the community. We have we try to produce a better upgrade plans.
00:35:06 [W0] And the last question is about can we manage a remote cluster node currently?
00:35:17 [W0] No, we are we have only one control plan. We compare if we want the remote cluster on the Node. So so we evaluate the the scenarios so
00:35:31 [W0] Well, we treat the now the individually, however, we are going to introduce Edge mesh.
00:35:38 [W0] To allow the node communicate between each other because if you allow the cluster in the note, you need to synchronize not only the node status but also standard class the status between
00:35:54 [W0] Send small.
00:36:00 [W0] I mean they are the remote cluster that one we evaluated. We think probably for example in the production example.
00:36:11 [W0] I show you my presentation to use a multi clusters.
00:36:14 [W0] always more like a Kuma fat to do the layer the cluster in the cloud side instead of in The Edge side, so that way we don't want to
00:36:24 [W0] We have a trade-off between the complexities and the and the simplest it is so so far. We only control the remote node.
00:36:37 [W0] However, you can allow the node to communicate to each other for your from your application.
00:36:40 [W0] Okay, I think that's all the questions I have today.
00:36:46 [W0] Thank you everyone.
00:36:48 [W0] Thank you to attend to listen to this presentation.
00:36:58 [W0] And yeah, if you have more questions, please go to the Google group and the slack.
00:37:03 [W0] I'm happy to answer more questions there and I hope everybody can I thank everybody showed interest.
00:37:08 [W0] I hope you can have a chance to try it and the probably too.
00:37:10 [W0] Dissipated in our community.
00:37:14 [W0] Thank you. Yeah. Thank you everyone.
