in-toto: Securing the Entire Software Supply Chain: QBLM-9946 - events@cncf.io - Tuesday, August 18, 2020 8:27 AM - 70 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:02:25 [W] Hello, everyone. I am Santiago.
00:02:29 [W] I am a PhD recently graduated DT student from and what you and I are going to talk today about in-toto a way to secure this off their supply chain that it's a cncf handbook project.
00:02:36 [W] Maybe it's in creation by the time you see this video.
00:02:38 [W] don't know yet. Then the main goal of in-toto is to protect the everything that happens at the left of your software delivery pipeline. That is version Protestant.
00:02:49 [W] Farms The Gravely scanners anything before admission on your Cloud today?
00:02:58 [W] I'm going to talk a little bit about the problem.
00:03:00 [W] I think it's a upcoming problem.
00:03:02 [W] It's a something that's been taking anything by surprise and it's something that's cost a lot of damages.
00:03:12 [W] So for the reason I think it's not only important to know what the problem is, but also to know how to tackle it and how to fix it.
00:03:18 [W] it. So after I talk about what it is what the problem is.
00:03:21 [W] I'm going to talk about in-toto and how you can use it today to protect their platforms and your specific companies for your projects.
00:03:30 [W] So with that aside I wanted to get it to talk about how software is me again when we're talking about copper Supply chains. We usually think need to answer yourself.
00:03:43 [W] Important to know what the problem is, but also to know how to tackle it helps fix it. So after I talk about what I do, well, the problem is I'm going to talk about in-toto and how you can use it today to protect their platforms your
00:03:51 [W] Opportunity to make things clear.
00:03:57 [W] Here's a very GitHub generation type of software supply chain a very minimalistic suffers budging in which you may have their code live in a Version Control System.
00:04:08 [W] Maybe you send it somewhere if you're feeling fancy to have a deal for you on a bill far if you're caring about the quality of the software.
00:04:14 [W] Maybe you have a continuous integration service such as Travis running tests on door.
00:04:18 [W] On every single commit that you make and finally some somebody even yourself again this packaging this piece of software to eventually get it out into the consumers the user software software.
00:04:34 [W] So I know this is a very simple first black check but it's a it's a perfect place to start a conversation about the security of it of the whole ecosystem.
00:04:44 [W] Yourself again is packaging this piece of software to eventually get it out into the consumers that users of your software. So
00:05:23 [W] I know this is a very simple first black chain, but it's a it's a perfect place to start a conversation about the security of it of the whole ecosystem.
00:05:25 [W] So again, this is security talk so you wouldn't be surprised if I told you that Salt Air Supply chains can't get hacked and that's exactly what has happened time and time again hackers have been able to break into your say the version control system and
00:05:28 [W] Optimize means of every single user of your product is affected.
00:05:28 [W] Now this was just for the version control system the same thing can happen in your compiler their bill far.
00:05:42 [W] There has been instances such as the very academic and consulate attack in which somebody introduces a back during compiler into the pipeline such a way that every single product of this compiler is a introducing the back door and software.
00:05:49 [W] There's been more realistic the best scenarios like to xcode ghost in which somebody made a counterfeit version of xcode that resulted in every single iOS application being compiled with xcode.
00:06:03 [W] how the back of the big piece of malware very popular applications such as Angry Bird were actually occur affected by this attack and we're computer scientists.
00:06:13 [W] So we're good interpolating things.
00:06:15 [W] This is not an isolated incident. This has happened time and time again, is that the opens well,
00:06:18 [W] Now speaking of interpolation.
00:06:25 [W] I assume that you can also have that the packaging infrastructure is a very very good Target for attackers attackers can break into the into the distribution or the packaging structure and they can exert factors.
00:06:35 [W] There's a case of a backdoor Linux Mint tags know that ended up being
00:06:40 [W] Building a more than 800 host of nothing less than 24 hours which was it was a very very small profile attack that ended up creating a lot of a medium-sized botnet small to medium sized bottle came very very
00:06:55 [W] Distribution or the packaging structure and they can expect factors.
00:06:56 [W] There's a case of a back door or Linux Mint tags know that ended up being building a more than 800 hostpapa. Nothing less than 24 hours, which was it was a very very small profile attack than that
00:06:58 [W] There's other examples like kingslayer.
00:07:03 [W] There's there's cases which I like to hide like to pretty much illustrate the problem and the nature of his taxes phpmyadmin.
00:07:13 [W] It was hacked only in the South Korean mirror server this gave the attacker a very particular fingerprint of the type of victims that they would find was not only a very good example of
00:07:23 [W] Instinct sponsor or something that may have been
00:07:28 [W] just
00:07:30 [W] able to attack a single country at once. So there were fingerprints. There was think finger pointing going on some people of course link North Korea, but there's a there's many good explanations as to why somebody would want to Target a particular population.
00:07:46 [W] Of course. This is not an isolated incident that this is not the only time that somebody has taken Geographic approaches to software psychic attacks.
00:07:56 [W] And finally, there's also questions about compliance.
00:08:00 [W] They're very many things that are happening in your pipeline.
00:08:04 [W] The may cause a even a not malicious action to affect all of your users.
00:08:16 [W] There's a case in Dell external and there's cases with a for example Microsoft Windows in which a Windows update was able to break every single computer that installed it and it was originally believed that some hackers broke into the Microsoft
00:08:22 [W] A very very damaging attack, but it turned out that somewhere in the pipes.
00:08:29 [W] Somebody didn't do their job better at this window something properly, of course window launched an internal investigation.
00:08:35 [W] They were great darling.
00:08:37 [W] They were trying to figure out exactly what happened and I'm sure that they fix this problem, but it was already a little like work abusers.
00:08:44 [W] And I'm afraid to point fingers at anybody.
00:08:48 [W] It's just a just a state of affairs.
00:08:57 [W] our
00:08:59 [W] Are pieces of software?
00:09:02 [W] We need to be more thorough and more conscious about the way that we are producing and we are delivering software, especially now that most of the critical infrastructure relies on.
00:09:07 [W] So here's here's a point at which I want us all to reflect on the nature of what I like about this little example. Is that even though it's a very
00:09:15 [W] Minimal very cartoonish at with their say suffers a bike chain many of you that are working in the industry.
00:09:26 [W] They have seen that and say like, oh that's just ridiculous. This is so simple. Like we don't we do things way way more complicated and more elaborate than this even in this case.
00:09:39 [W] There is a eight points of compromise and on six of those eight points of compromise a complete software supply chain subversion happens if any of those six points fail,
00:09:48 [W] Under security security story and the final product will be completely subverted.
00:09:55 [W] This means that the end user is this hacked the hunter company loses a meal has millions of dollars or whatever the it depends on your budget, but you get the idea.
00:10:03 [W] now
00:10:05 [W] I hope I even my I did my job and convincing you that this is a this is a problem. And this is something that we need to fix the goal. The goal of this is to understand that suffer supply chain compromises are anything that's not in
00:10:21 [W] By many different factors to do so many many different types of damages to many different data streams.
00:10:32 [W] And even though there's a lot of things that we can do today expect things. We need to think a little bit more holistically.
00:10:41 [W] I'm going to go over a little bit of things that you would probably like aha. I know that I can use a
00:10:45 [W] Get signing to protect the version control system, or I can use this technique on the real farm.
00:10:52 [W] I am going to show how all of these things can be need to be put in place to foster a good software supply chain security story. Now again, there's many good points Solutions.
00:11:06 [W] There's things like a becoming signing or push certificate for State log can help you protect a version for Austin. So there's other things like TPS and if you send server if I do
00:11:16 [W] Pilar is there something such as Brazil bill that can help you protect the your real farm and there's also things such as the ls + BG and tough for the delivery mechanism that can help you secure and protect a The Last Mile
00:11:29 [W] Spiking so we those all those in place.
00:11:41 [W] I took the liberty of removing a some point of compromise and we still have a couple of questions on the answer.
00:11:44 [W] The first one is that we don't know anything about the gaps between two steps.
00:11:48 [W] that is even though you may be following the software version control system delivery mechanism property.
00:11:57 [W] You don't know if the person after you that's going to be able to force it. It's actually checking that your follow best practices.
00:12:02 [W] It's the letter and the same can happen to the packaging and so you can have it to the CIA testing testing and compliance.
00:12:09 [W] Mechanisms in place at the end of the day.
00:12:13 [W] It's a it's not a question of security Personnel compliance.
00:12:17 [W] Its everybody following things the way they should and is everybody following the write through policy.
00:12:24 [W] And that's exactly the type of problem that we're at war against when we're talking about the software supply chain security and politics cuteness of the terms of the supply chain, so to make things
00:12:36 [W] Summarized or easier to understand is we want to follow three goals.
00:12:44 [W] We want the first Define in a verifiable way.
00:12:47 [W] What is supposed to happen in a suppl supply chain Define the steps on yourself?
00:12:52 [W] By a ci/cd mmm.
00:13:02 [W] After that, we also want to find the off the actor from cobblers the actors that are participating in the you're in the supply chain. This means we know the version control system is going to be
00:13:17 [W] being carried out by a team within my software engineering team and we know that the version that does packaging and delivery is probably a software reliability Engineers or I don't know any other role within your organization and finally
00:13:33 [W] It is a series of point-to-point links.
00:13:40 [W] We want to make sure that every single step is properly connected to each other.
00:13:46 [W] We want to guarantee that everything happens with definition and that there's no gaps between the stories on each individual step.
00:13:51 [W] So now I'm going to tell you how you can use in-toto to provide this property's on top of the other security properties that I was talking about earlier to do this. We used to things and in-toto. The first one is called a layout.
00:14:00 [W] Layout is a piece of policy that project owner or a security engineer at an organization. Will Define and it will describe things on on your supply chain.
00:14:14 [W] It's going to put this aside what needs to happen and how it should happen.
00:14:16 [W] So through that it will have a series of steps to find so I will say I have a vision process term.
00:14:27 [W] I have a bill for my have a packaging infrastructure and I have a ci/cd open place then it will create or allow you to define a series of functionaries which are the factors that will partake in the operations in the supply chain.
00:14:38 [W] It will say Bob the Version Control System person will be taking care of the version control system. And Carol will be taken care of the built on it will say
00:14:49 [W] It is the third party that's taken care of the CIA. And that's an errand will be the one that we did in fact.
00:14:53 [W] Talk about proper art facts. We know that involve will be talking in a language of making version control system files say source code or or like build tool chain definitions.
00:15:19 [W] We know that Carol will be talking with in the same terms with the medical holding producing binaries that our executable files.
00:15:32 [W] also know that Aaron may be talking on binaries and also packages. So all of this type of software artifacts will be defined and will be
00:15:35 [W] Assigned to an individual step. And in order to prevent this security stories to be separated from each other. It will use artifact rules which are describing how this artifacts will be connected between each other and we'll say
00:15:48 [W] Both lists, the files will be the ones that will be input to both to ci/cd sternum and Bill Farm on both the me to agree on that. They're using think artifacts and Carl will say what is the resulting binary of the build and Erin will
00:16:04 [W] Weather Service often packaged up there. Let's see created with this and the signature to make sure that this is the right file created by the right person.
00:16:18 [W] exactly what needs to happen now.
00:16:22 [W] Now that we know that what needs to happen. We need to carry to collect information about what happened.
00:16:30 [W] This is generating evidence of the operations as they were carried out in the supply to so in the in-toto world to do this we have another type of file. That is the layout it's called a link.
00:16:44 [W] This link files are essentially a series of applications created by each individual actor or functionary in the supply chain. So Bob
00:16:53 [W] Create a little rubber stamped version of their other operations that they will say, I actually check that greater. This gets tagged and are in which will be doing the package will say hi to Carol's primaries, and I
00:17:08 [W] This package and here's my rubber stamp saying that I was the one that did it and nobody else did.
00:17:15 [W] so when we do this we are able to verify and we turn the conversation into the this is my definition of what I need it to happen my policy to find in the layout of say this is the way that
00:17:31 [W] This is my definition of what I needed to happen my policy to find in the layout of so this is the way that my supply chain needs to be carried out the see agree with the evidence that I collected in this series of
00:17:38 [W] but the evidence that I collected in this series of other stations created by all of the actors in the supply chain, and with that we can basically turn the whole conversation into following a cryptographic paper trail
00:17:48 [W] Matching it against the policy all the way from the package and back into the version control system or as far left as you want to take it.
00:18:04 [W] You can include the conversations about the decision making the sign legal review unit.
00:18:08 [W] It doesn't mean to be an automated step. You just need to create the up stations yourself.
00:18:11 [W] So just the rubble in-toto is a framework that allows you to Define how the things in your pipeline should have been carried out and then to collect evidence of how the things in your pipeline where carried out
00:18:27 [W] You can describe precisely the way that you wanted your software to be made and you can enforce on each individual step of your pipeline that it was carried out to the letter now something I'm very excited about the in-toto is that it's a
00:18:43 [W] Is that a supply chain is only as secure as its weakest link is that we need everybody in the ecosystem and the community to be involved and to participate so in-toto has been working alongside a lot of different
00:18:59 [W] Until the participate so in-toto has been working alongside a lot of different communities out there to to create Integrations to be able to provide the security properties that we need
00:19:07 [W] Be able to provide the security properties that we need to make a stronger software supply chain.
00:19:10 [W] One that I'm particularly proud about and excited about this tekton and in-toto.
00:19:19 [W] It's project called chains. You can use it to track a each of the operations that
00:19:24 [W] that are being carried out by tekton and great in-toto linkerd stations with it. So you can verify them at the end of the at the end of the process now, I'm going to drop a link at the bottom of chatbots. You can use that
00:19:39 [W] That all of the project and also get involved if you want to take a partaking to developing chains.
00:19:47 [W] And for that I want to conclude just to just to wrap up securing the software supply chain is important.
00:20:03 [W] It's an up-and-coming problem that that it's a being that's causing a lot of Damages or across the industry and I think it would be important for everybody here to start taking a look at it in-toto.
00:20:13 [W] us all so the first tool that allows you to holistically protect the self-reflecting there's many simple but stuff around projects.
00:20:20 [W] Totally say project that took us five years angle you develop and to make sure that it can use to both protect your supply chain and to protect any supply chain out there.
00:20:30 [W] And we also want to invite you to try out in-toto.
00:20:42 [W] I normally try out in-toto. But if you want to join a thriving open source community of security enthusiastic wants to protect this very important aspect of software then please reach out to all square and basically cncf slot and in many other channels list on our website and
00:20:45 [W] Five years angle use development to make sure that it can use to both protect your supply chain and to protect any supply chain out there.
00:20:47 [W] And we also want to invite you to try out in-toto.
00:20:48 [W] I know we try out in-toto, but if you want to join a thriving open source community of security enthusiasts that wants to protect this very important aspect of software then please reach out to all square and basically the cncf slat and in many other channels list on our website
00:20:49 [W] Look forward to hearing from you. Thank you so much.
