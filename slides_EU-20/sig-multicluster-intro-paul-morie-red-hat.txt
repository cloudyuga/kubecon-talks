SIG Multicluster Intro: FPOQ-2332 - events@cncf.io - Thursday, August 20, 2020 11:09 AM - 205 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:05:24 [W] Hi everybody.
00:10:29 [W] I am Paul Maury.
00:10:33 [W] I'm an engineer at red hat and a chair of Sig multi cluster and kubernative.
00:10:34 [W] And I'm Jeremy Olmstead Thompson.
00:10:39 [W] I'm an engineer at Google and I'm also a chair of Sig multi cluster. And this is the Sig multi cluster intro at Cube con EU 2020.
00:10:47 [W] So thanks for joining us a little overview of what we're going to cover first.
00:10:56 [W] We're going to talk about what the Sig is about and how you can contribute and they're going to talk about the history how we got here the evolution of kubeflow Edward VII one and two and the cluster registry and then we go into what's happening. Now. We have a multiplexer Services API.
00:11:08 [W] have a new work API project kubeflow I'd be to is still evolving and we're going to talk about a cluster registry rethink.
00:11:14 [W] Hi everybody.
00:11:24 [W] I am Paul Maury.
00:11:24 [W] I'm an engineer at red hat and a chair of Sig multi cluster and kubernative and I'm Jeremy on said Thompson. I'm an engineer at Google and I'm also a cherub Sig multi cluster.
00:11:25 [W] And this is the Sig multi cluster intro at Q Khan EU 2020.
00:11:28 [W] So thanks for joining us a little overview of what we're going to cover first.
00:11:30 [W] We're going to talk about what the Sig is about and how you can contribute and they're going to talk about the history how we got here the evolution of kubeflow g 1 and 2 and the cluster registry and then we'll go into what's happening. Now. We have a multiplexer Services API.
00:11:33 [W] We have a new work API project.
00:11:34 [W] project keep that V2 is still evolving and we're going to talk about a cluster registry rethink.
00:11:35 [W] So this sig deals with an extremely broad topic it touches a lot of different problem domains.
00:11:39 [W] It's hot touches a lot of different functional areas the best definition that we can give for the for what the Sig is about is that it's about making multiple
00:11:40 [W] It's hot touches a lot of different functional areas the best definition that we can give for the for what the Sig is about is that it's about making multiple clusters
00:11:43 [W] Several years into the work of the Sig but we're really still working to identify what the best and most durable Primitives are in this very complex domain and we need your input
00:11:59 [W] Stories and use cases are extremely valuable to figuring out what the best problems to solve our and how best to solve them many of the projects that we have going now are still in the alpha stage and there's still very
00:12:15 [W] The first project that we can really attribute to the Sig is a project that many people have probably heard of called kubernative Federation. The Federation project is about spreading
00:12:35 [W] Of a resource to multiple clusters and possibly overriding those those resources or parts of them for certain clusters.
00:12:51 [W] The original Federation project was implemented as a special set of controllers that backed something.
00:12:57 [W] that was very close to the normal. If you can perceive my air quotes kubernative API server plus a new resource called cluster that
00:13:06 [W] modeled which clusters Federation should spread resources to you can see on the right hand side of the screen a example of a replica set that is intended to be used with Federation.
00:13:21 [W] Straw everybody's attention to a few key things here because they express some of the things that we ultimately found to be limitations with Cube.
00:13:34 [W] That would be one or Federation be one.
00:13:39 [W] The first is that you might notice if you look at the API version and kind that this is the exact same API version and API surface as for a typical replica set.
00:13:48 [W] That means that they present the same way.
00:13:52 [W] In the Federated API surface and the normal API surface, you might also notice that there are some annotations on here that Express different Federation features.
00:14:07 [W] This is something that we ultimately found to be hard to support and evolve and some other limitations that may not be evident from this example resource our that the Federation
00:14:20 [W] Some code for each resource and did not support cri-o.
00:14:27 [W] He's at all.
00:14:28 [W] We got to a point in the the cigs lifetime where Federation V1 hadn't really been widely adopted.
00:14:43 [W] It wasn't supported by any major vendor and and there was also not a consensus in the community about exactly what the right problems to solve were the the folks
00:14:55 [W] and there was also not a consensus in the community about exactly what the right problems to solve were the the folks that were contributing at the time all got together and tried to
00:15:00 [W] At the time all got together and try to determine where there might be areas of overlapping interest and where there might be some consensus about perhaps some
00:15:11 [W] Consensus about perhaps some individual problems to solve that.
00:15:19 [W] We're part of a greater whole and the the most agreement that they could find was basically that there need to there needs to be a way to track multiple clusters when you are dealing
00:15:27 [W] Esters and that's how the cluster registry concept came about and the purpose of the cluster registry was to try to solve the problem of tracking multiple clusters,
00:15:43 [W] Problem and tracking multiple clusters, but will find as we talk through the history further that the cluster registry concept is perhaps a little bit more difficult to describe than you
00:15:55 [W] The cluster registry concept is perhaps a little bit more difficult to describe than you might think.
00:15:56 [W] Let's talk about kubeflow to similar to cube. The one the API surface of kubeflow. B2 is really all about a template resource being pushed to some clusters that have been
00:16:12 [W] Cute fed be too similar to kubeflow B1 the API surface of kubeflow. B2 is really all about a template resource being pushed to some clusters that have been joined.
00:16:14 [W] With the posture the cluster that host kubenetes.
00:16:41 [W] API resources, and the ones that had a meaning in Federation another challenge that we had to solve in kubeflow B2. Is that when Confederate V1 was created.
00:16:58 [W] There was no concept of extending the control plane and dynamically creating new API surface. And of course today one of the things that was that is Central to how people use kubernative.
00:17:13 [W] Is that users can Define their own types using CRTs? So a key challenge that we tried to solve was too.
00:17:24 [W] Was to build a federation project that was usable with types that we didn't know in advance.
00:17:34 [W] So the the way they keep that V2 end up handling. This is that there is a API for Kube fed itself that you use to create new API surfaces
00:17:50 [W] Four resources that you want to spread around with Federation.
00:17:54 [W] And you can see on the right hand side of the screen and example of a resource like that.
00:18:04 [W] Let's take a look at this really quick and we'll see if we look at the spec for this Federated resource will see a template field that contains the definition of the template resource will see also a
00:18:22 [W] that contains the definition of the template resource will see also a placement section which contains information about which cluster is this resource should be spread to
00:18:27 [W] and we'll also see at the bottom overrides where when this resource is placed into cluster to the replicas field is overridden to the value of five instead of three.
00:18:44 [W] So we solved one set of problems and address some of the limitations of V1.
00:18:50 [W] The solution ultimately turned out to introduce a new problem, which is that having a distinct API surface for Federation means that existing resources and normal resources require transformation to be used.
00:19:06 [W] which is that having a distinct API surface for Federation means that existing resources and normal resources require transformation to be used with kubeflow to so for example, if you have a
00:19:10 [W] She fed me too.
00:19:11 [W] So for example, if you have a Helm chart that you're using to deploy something in order to use that with Federation V2, you would have to transform the content of that Helm chart and
00:19:23 [W] using to deploy something in order to use that with Federation V2, you would have to transform the content of that Helm chart and what we found is that for many users this introduces
00:19:29 [W] Is that for many users this introduces an extra barrier to entry?
00:19:32 [W] We'll come back to what we think might be more durable for some users when it comes to the API regime of how to model spreading resources on to external clusters, but I want to call
00:19:50 [W] also to the question of the cluster registering
00:19:54 [W] we attempted in a couple different ways to integrate kubeflow to with the cluster registry and to pull functionality that we had originally
00:20:10 [W] That we had originally implemented in kubeflow B2 for joining external clusters to the cluster hosting Federation up into the cluster registry, but the correct boundaries between
00:20:23 [W] And the cluster registry and the cluster registry were never really apparent.
00:20:29 [W] So we can probably see by now that one of the central challenges that we have in this area is exactly how we should track clusters that software that works with
00:20:47 [W] Is interested in working with the the real challenge that that is one of them anyway that is part of creating the cluster registry is that it's really easy to talk about conceptually
00:21:03 [W] is that it's really easy to talk about conceptually a lot of you that may be watching that maybe haven't seen this content before might be kind of nodding your heads that it makes sense that you should have a list of clusters or
00:21:14 [W] Track but it turns out to be really kind of difficult to frame up exactly what that means and how that translates into software that accomplishes something.
00:21:30 [W] Translates into software that accomplishes something useful to users but is is focused on that registration type of primitive the other tricky thing about that about the cluster registry
00:21:42 [W] We think about that about the cluster registry problem is that it's very tempting to try to build a cluster registry first because it seems easy we have kind of gotten to
00:21:54 [W] The Sig where I think we recognize very well that it's a bit of a strange attractor.
00:22:04 [W] It seems like something that you can kind of knock out.
00:22:06 [W] It's proven not to be though. And the feeling in the Sig currently is that we want to rethink the concept of registration and tracking clusters starting with the most essential use cases and this
00:22:20 [W] The areas where we really really need your help in the Sig because we don't want to over fit a solution for a small number of use cases and ignore ones that people have out there that we just don't know.
00:22:35 [W] So I'll just make I'll make a plea here for you to help us by telling us what's important for you to get from the community in our current efforts that that we're going to talk about
00:22:52 [W] Get from the community in our current efforts that that we're going to talk about in sort of the second logical part of this talk.
00:22:57 [W] I want to make it clear that we're trying to avoid characterizing a registry as a first step instead.
00:23:10 [W] We want to focus on the most essential parts of the problems that we're trying to solve and kind of work backwards to the registry concept.
00:23:13 [W] So let's talk about the multiplexer services API. So first services are a multi cluster building block.
00:23:22 [W] They solve a specific problem, but everybody kind of needs to solve this problem.
00:23:30 [W] No matter how you want to have your clusters working together.
