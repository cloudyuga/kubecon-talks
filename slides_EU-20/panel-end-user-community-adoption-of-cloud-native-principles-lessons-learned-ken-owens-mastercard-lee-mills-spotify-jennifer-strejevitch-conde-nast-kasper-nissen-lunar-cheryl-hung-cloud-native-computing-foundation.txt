Panel: End User Community Adoption of Cloud Native Principles & Lessons Learned: CEAK-6547 - events@cncf.io - Thursday, August 20, 2020 6:56 AM - 55 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:03:18 [W] Hi everyone, and welcome to this Cube concession. Today. We're going to have the cncf and user Community.
00:03:31 [W] Tell us a bit about their experiences and challenges with adopting Cloud knative.
00:03:37 [W] So, my name is Cheryl.
00:03:40 [W] I'm VP of ecosystem at the cncf and I apply my really work with the cncf end user community.
00:03:47 [W] This community is a group of nearly a hundred and fifty companies who are all talking about and discussing.
00:03:57 [W] what are the challenges that they're facing with Cloud native and the idea behind this community is to have a vendor neutral safe space where people can share their honest opinions.
00:04:09 [W] So today I'm very honored to have for guests who are joining this panel who are representing different companies within the
00:04:17 [W] the end user community.
00:04:21 [W] So let's introduce ourselves.
00:04:26 [W] So to start with as I've already said, my name is Cheryl and I'm at the cncf.
00:04:28 [W] I am Jennifer strategy, which I work for Conde Nast time aside to reliability engineer.
00:04:39 [W] Hi, my name is Casper. I work at the company called lunar also as a site reliability engineer.
00:04:47 [W] Team different companies within the end user community. So let's introduce ourselves.
00:04:48 [W] So to start with as I've already said, my name is Cheryl and I'm at the cncf.
00:04:48 [W] I am Jennifer strategy, which I work for Conde Nast. I'm a site reliability engineer.
00:04:49 [W] Hi, my name is Casper. I work at the company called lunar also as a site reliability engineer.
00:04:49 [W] Hello, my name is Ken owns. I work at master car and I we Cloud native engineering and platform teams.
00:04:55 [W] And hi, my name is Lee.
00:05:00 [W] I'm an engineering manager at Spotify. Awesome. So Jennifer Casper Ken and Lisa. Thank you so much for joining.
00:05:11 [W] So I'm going to start with some questions and we'll just have a chat or just discuss what your thoughts are.
00:05:19 [W] So let's start with which Cloud native principles that you adopted with the most beneficial and which ones cause the most concerns for your organization.
00:05:27 [W] And Lee do you want to kick us off?
00:05:30 [W] Sure, so, I guess the the most important one going back a few years ago.
00:05:43 [W] I was working at a company called frog and we were basically migrating from on-prem service service to Cloud native design and the most important thing
00:05:53 [W] Service service to Cloud native design and the most important thing I think for us was designing old from with Automation in mind.
00:06:01 [W] So that allowed us to like improve our monitoring obviously ci/cd came with that decoupling of concerns and basically improved security from that aspect so
00:06:13 [W] Stop thinking about how we can automate for example the the monitoring.
00:06:25 [W] So then resize stuff if things start filling up or monitoring like CPU performance or all different kinds of aspects and being able to react to it really quickly.
00:06:34 [W] It was also a little bit of a double-edged sword to be fair. I think that there was a level of trust that we have to gain in doing that my graphql.
00:06:44 [W] Raishin, some people used to kind of big long deployment processes allowing us to do like lots of manual testing that side of stuff.
00:06:58 [W] So there was that was there also the kind of the concern if you will from the same aspect.
00:07:03 [W] Yeah, I can definitely relate to that so back when I joined Luna in 2016.
00:07:12 [W] We will call to know at that time.
00:07:23 [W] We had a concept where we were sort of starting building microservices and we were sort of forgetting how to actually do the infrastructure so they will still deploying everything as one big.
00:07:27 [W] Yeah, basically all all all the Microsoft has in one go. So we got none of the benefits and all the complex stuff and doing that.
00:07:34 [W] We've also had a concept of actually baking the infrastructure.
00:07:41 [W] For us in our transformation from from that state to where we are now running communities and hundred microservices has been definitely to come to a place where we can have independent Deployable services and sort of
00:07:59 [W] Get out of each other's way and stop coordinating across the what version do we need to run and all of these Microsoft it is it's impossible to do when you run out of Microsoft offices.
00:08:11 [W] Yeah magic.
00:08:13 [W] I really do you the abstraction of these services and how over time the simplification of abstractions as a lot of results in a much faster and more agile
00:08:29 [W] I think some of the concerns that that you know, we ran into a massive. I had a lot to do with sort of up leveling, uh skill sets and helping, you know teams.
00:08:44 [W] We're not really thinking and Abstract ways and not take advantage of the microservices concepts, you know, like you were talking about Casper as well.
00:08:55 [W] And so we sort of had to kind of help, you know, train up the different teams both on the infrastructure side, but also on the development side to really understand how to do this well,
00:08:59 [W] Yeah, you can come and ask her.
00:09:03 [W] I was I was more a I think I just a short question for Casper in that shift from kind of people being used to deploying like big monolithic product if you will and switching to microservices did you have to
00:09:25 [W] Any kind of like did you have to do anything special to help build up the trust between all of the different squads that like, you know service a is fine to deploy.
00:09:37 [W] I don't know what's in it kind of thing.
00:09:40 [W] It's that other team over there or was it fairly straight forward shift.
00:09:52 [W] It was actually a fairly straightforward. We however in cock counted a lot of concerns when sort of moving a lot of sort of the shifting left in the sense of having our developers do a lot of more
00:09:58 [W] structures of we basically went the completely sort of the opposite way of having you know back then we are before we had this big mono just one repo everything was in there and they started to split everything up and now we sort of got in a direction of now we
00:10:10 [W] everything needs to be sort of centralized in their own repository all each service need to own everything kubernative manifest all of the stuff which was a big concern for our developers because they really didn't want to
00:10:26 [W] which was a big concern for our developers because they really didn't wanna learn all of these things and we struggled a lot finding sort of the right abstraction as can also mentioned that it's yeah,
00:10:36 [W] I mentioned that it's yeah, it's been kind of hard to find sort of the right balance of how much do you want to to hide for your developers?
00:10:42 [W] how much or how can you present some sane defaults that they can just get out of the box when they're building their services and deploying them.
00:10:50 [W] Yeah, it's definitely a similar thing with these learning curve of the developers and the shift of responsibilities as well and developer having to they have the benefit of being
00:11:08 [W] Ability, they can change the versions of their packages, but then they get the responsibility to secure their containers case and security scanning things like that.
00:11:23 [W] So they have to worry about those things that they didn't worry before.
00:11:28 [W] So that's definitely a concern but among the benefits in Conde Nast case, for example, now we are migrating various clusters across two different companies that
00:11:38 [W] Are emerging so it's massively beneficial to have infrastructure as code and running on containers with communities.
00:11:47 [W] Awesome.
00:11:51 [W] Thank you Jennifer.
00:11:55 [W] So let's go to the next question.
00:12:01 [W] So in this question is what were your multi-region challenges and trade-offs that involved Cloud native principles and Jennifer. Do you want to start with this one?
00:12:07 [W] Sure.
00:12:09 [W] Yes.
00:12:11 [W] Well in our case one example that I can refer to is centralized the logging.
00:12:24 [W] it is a big challenge to replicate or centralized in a global sense your logs and that is was definitely a trade-off that we had to do
00:12:32 [W] And Jennifer do you want to start with this one?
00:12:33 [W] Sure.
00:12:33 [W] Yes.
00:12:33 [W] Well in our case one example that I can refer to is centralized the logging.
00:12:34 [W] it is a big challenge to replicate or centralized in a global sense your logs and that is was definitely a trade-off that we had to do
00:12:35 [W] It's choose to remain within our region level. And the reason for that preferences that our local I/O web sites are more localized and the troubleshooting
00:12:48 [W] It's of the times is done within a region level. So for example, if you have a problem for Japan, it is most likely that we would be troubleshooting within a one AWS
00:13:03 [W] Likely that we would be troubleshooting within a one AWS region context and in one sense.
00:13:08 [W] I would like to know what others have like thought of and what were their the benefits and trade-offs it had to do with that too.
00:13:20 [W] It's like I think I've in the past. I've experienced a similar thing where when I was working at Amazon. We expanding out our across regions and
00:13:37 [W] One of the things that hitters was basically restrictions are licensing around certain data that we could that we could share and that's everything from like media information. If you will through two things like GDP are impacted in the similar way
00:13:53 [W] It to the shift out kind of regionally there was it was easier and more observable to kind of scan across all of those but all of that data sets, but then as we started to go into more regions we started to
00:14:09 [W] Licensing and restriction Regional restrictions data metadata out. So it's a similar trade off. We ended up with like one central place where you could go and and for stakeholders easily search through
00:14:25 [W] How old are you search?
00:14:31 [W] How did you search through them? Dude? You have a different portal to search each region, or did you could you do it from one place?
00:14:42 [W] But actually scanning different.
00:14:47 [W] Yeah, so it's basically we some of the made metadata we ever elevated up and created a centralized tool that basically you could go to one place and then
00:14:56 [W] Sleep select the region or area that you were looking into and then that would then go and pull data from a different source and escalates that once all but again, it was kind of similar to what I do now at Spotify.
00:15:10 [W] It was kind of productivity engineering if you will so is providing those internal tools to help help the stakeholders through that that process
00:15:19 [W] Casper careful you haven't yeah, just for our case at Luna.
00:15:31 [W] Region or area that you are looking into and then that would then go and pull data from a different source and escalates that one song. But again, it was kind of similar to what I do now at Spotify. It was kind of productivity
00:15:41 [W] And so we have you're not sort of sending data across the regions.
00:15:47 [W] So I have a don't have anything sort of to to add to that.
00:15:50 [W] You don't have that issue yet.
00:15:53 [W] And how about Ken?
00:15:56 [W] Sol you know magical we have a lot of multi-region deployment and I think our biggest trade-off was trying to manage the upgrade process across the Moor for different regions and in sort of the Rolling update that we were trying to
00:16:14 [W] Chain that all of the different independent, you know Michael service components.
00:16:25 [W] We will support the rolling upgrade type of model and that was that was a challenge in and of itself you all experience.
00:16:27 [W] Okay, great.
00:16:33 [W] Let's go to our next question.
00:16:41 [W] So what is something that you've experienced that could have been avoided if you adopted Cloud native and Casper?
00:16:49 [W] Why don't you go first?
00:16:51 [W] Yeah, sure.
00:16:54 [W] So it coming back to what I was talking about earlier about so when you go microservices, don't don't forget about the infrastructure that
00:16:59 [W] You need to support all of these microservices and think that in from the beginning. I think that was one of the the big things that I learned that at lunar when I joined this that we really need to think about the infrastructure and just
00:17:15 [W] Microservices I heard this is a way to do stuff and just fill it out of Microsoft has and then just forget about the the runtime and the infrastructure that needs to support all that.
00:17:30 [W] I think that's that's a thing that I would recommend people really understanding before getting into to doing microservices.
00:17:37 [W] Was there a specific story or experience that you had Casper?
00:17:47 [W] We just had a you know, just a lot of coordination between teams needing to ensure that all the different versions of these microservices were sort of aligned and could run together and and then just you know the
00:17:59 [W] And 45 50 minutes to bake a new sort of version of our infrastructure and that was just a pain.
00:18:12 [W] So I really like that quote if it hurts dude often and that was one of the reasons why we sort of rip that thing apart and add adopted kubernative and and that was primarily the main reason why we adopted a
00:18:23 [W] one of the reasons why we sort of ripped that thing apart and add adopted kubernative and and that was primarily the main reason why we adopted a communities as a platform was to to sort of find a way for us to
00:18:29 [W] As a platform was to to sort of find a way for us to get independent deployed Deployable Services, basically.
00:18:32 [W] Jennifer I saw you smile a moment ago you had the same experience. Well, we in Condon has to either project that we started we had
00:18:49 [W] Mind but despite practicing those techniques like using infrastructure as code with tools such as terraform.
00:19:03 [W] Helm and we still had issues with not practicing fully. For example, when we had to do some an upgrade of traffic Ingress controller.
00:19:18 [W] we had some cleanup tasks that were done manually and the environments weren't mirrored as a saying this way
00:19:34 [W] When we deploy to production, we had an incident that was an issue with the deployment, but we couldn't see that on staging because of these some bits were not cleaned up and in some environments and the
00:19:50 [W] Is that even though it may take longer comparatively to for a cleanup tasks to be done via doing a pull request a review and then you put out through the pipeline which is the way that we have set up.
00:20:06 [W] By sticking to their version declarative changes.
00:20:12 [W] We are avoiding this these human errors that are normal.
00:20:17 [W] So there is this cultural side as well some practices that we have power to do.
00:20:30 [W] But if we stick to the transparent way the pipeline we will avoid them and the reward is much higher in that case.
00:20:32 [W] Lee do you have anything to add?
00:20:38 [W] Yes, I guess the the the thinking back to the question. I guess the one that Springs up for me was I once managed to take out most of our instances we were in so the example that I mentioned up at the top around we were going through this
00:20:56 [W] Kind of on-premise to Cloud made it and we deployed a new region we done, you know all in each containerized and and all of this cool stuff and I was migrating some code from our old system.
00:21:11 [W] He's done and and all of this cool stuff and I was migrating some code from from our old system.
00:21:14 [W] And the thing that Springs to mind is managing State and our old system.
00:21:24 [W] There was parts of it that were super tied to for example the box it was running on how many threads were available and all of this stuff and moving that into kind of the cloud native setup that we got.
00:21:32 [W] I hadn't checked what this this code was dependent on.
00:21:35 [W] And it basically took a few instances.
00:21:41 [W] So I learned the hard way.
00:21:45 [W] So I guess the big learning for me was yeah at that time be be mindful about like if it's stateful or trying to be stateless.
00:21:53 [W] Whoo and Ken do you have any experiences that could have been avoided through Cloud native?
00:22:07 [W] Yeah, we got massacred definitely has learned some good lessons.
00:22:12 [W] I don't know trans transformation towards cloud knative and I think the probably the biggest one, you know, it's kind of what we talked about already today, but a little bit different in that a lot of the different new excitement that's of authors have and some of the
00:22:22 [W] all trying to be stateless
00:22:23 [W] Whoo and Ken do you have any experiences that could have been avoided through Cloud native?
00:22:24 [W] Yeah, we massacred. Definitely.
00:22:24 [W] It has learned some good lessons.
00:22:26 [W] I don't know trans transformation towards Cloud native and I think the probably the biggest one, you know, it's kind of what we've talked about already today, but a little bit different in that a lot of the different new excitement that developers have and some of the
00:22:28 [W] It the canonical mention that were you know in the culture that needed to kind of change was supposed that once it was adopted.
00:22:38 [W] Some of the old habits could have back in right like hard-coding to services and not understand but anymore the service team that developed the new service and in this example, I'm thinking about they didn't, you know, quite understand how to kind of make sure that the
00:22:45 [W] Example I'm thinking about they didn't quite understand how to kind of make sure that the doing release management with the version you correct, right?
00:22:52 [W] And so, you know, you can you can take down another team's set of services by not, you know correctly doing version of your service. And so I think I will get that times to make sure that you improve and understand
00:23:03 [W] He's management and versioning as you roll out the new Services because that otherwise if you have kind of a new way of rolling something out, but trying to manage it the old way you're going to run into issues for sure.
00:23:17 [W] Yeah, I can't really have a lot to that as well.
00:23:26 [W] So we adopted a gitops year and a half ago or something like that and in the process of we so just to give some context Luna is sort of a fanatic transitioning into a bank and all of the
00:23:36 [W] With that really sort of required us to be very declarative and just see all the changes coming into our environments and having sort of a concept as gitops where you declare all
00:23:52 [W] reconciling running in your environment sort of Reckoning reconciling the state and in that repository has been sort of a really aha moment for us that we can get all the dirt and all of that and get a really nice
00:24:07 [W] Well, just doing some small tweaks to our pipeline basically.
00:24:14 [W] Yeah, absolutely.
00:24:24 [W] So let's go and now talk about a different direction.
00:24:25 [W] So how does membership in the cncf end user Community factoring your factor into your ladder or professional development paths for the participants from your organization?
00:24:39 [W] And Lee but you start sure can do so actually this is something that we for me particular I guess and my team try but Spotify we're really kind of
00:24:54 [W] In particular, I guess and my team try but Spotify we're really kind of trying to focus in on at the moment. So Spotify obviously been involved in open sourcing all sorts of different shapes and sizes over many years.
00:25:04 [W] Sighs it's over many years, but right now the teams that I'm in a super focused on that. We're trying to open source of the main products that we're doing and
00:25:16 [W] that we're trying to embrace the community more and and kind of learn from that and incorporate that back in and that's doing things like we're looking to like open source internship programs to help
00:25:32 [W] in like open source internship programs to help kind of newcomers into Spotify and gain experience working in open source and working with the community and
00:25:41 [W] Fi and gain experience working in open source and working with the community and and how that kind of differs from the way the ways that we've worked internally and we're also kind of trying to bring in obviously
00:25:50 [W] All that kind of differs from the way the ways that we've worked internally.
00:25:51 [W] We're also kind of trying to bring you know, obviously things like new trainings.
00:26:01 [W] We're trying to incorporate more and more of kind of Open Source into kind of recognition internally for people, you know, and include that when we start to talk about progression and
00:26:06 [W] for people, you know and includes that when we start to talk about progression and next steps and things like that and basically celebrate people taking part in it and be super interested to hear what other people are doing
00:26:15 [W] I'd be super interested to hear what other people are doing to.
00:26:17 [W] Jennifer Rogers, go ahead.
00:26:24 [W] Okay, so I okay well to me I Echo everything that Lee said as well and I add that also being a member and attending the meetings and
00:26:39 [W] Dealing with the decisions for new projects also help people who are interested in advancing their technical leadership skills and exercise their ability to look ahead.
00:26:54 [W] and for the organization to have someone that comes and proposes new things and it's always listening to the community out there and the comes with fresh ideas encourages us also to push them forward
00:27:10 [W] Ization that we have a more confidence by listening to the community and I think also there is something to learn from the processes used how you share the ideas and how you make sure everyone
00:27:26 [W] Yeah, we haven't been that structured in our sort of set up yet.
00:27:39 [W] We as mentioned we coming from a start-up we are not that many people yet.
00:27:45 [W] However, we have been from from the get-go been very sort of involved in the community, especially around the local community and in the city where we were located because we knew that this was you were pretty early adopting
00:27:55 [W] Sort of involved in the community, especially the around the local community in the city where we were located because we knew that this was you were pretty early adopting communities back then and we wanted some some
00:27:58 [W] and you wanted some some local people to start talking about these things and just share experiences and ideas and later joined the the end user Community as well also trying to
00:28:11 [W] also trying to from our learnings try to do blog post open source, whatever we can open source, of course, we can and cannot do open source some of the banking stuff and some of the
00:28:23 [W] Stuff we have running but of all of our infrastructure tooling and whatever we do sort of in that area fall platform.
00:28:35 [W] That's something that we try to to publish and talk about as much as possible because I think there's a lot of value in sharing our experiences and that's hearing other people talk about how they are doing it.
00:28:47 [W] It's been really really valuable and and and and and just as significant to just coming up in the Forefront and knowing
00:28:53 [W] what's going on in community and bring that back into your own organization to yeah to see if that's a new project for us to adopt to gain some more velocity or whatever. It might be.
00:29:07 [W] and that's really I think important, you know, I had massacred we really tied into that end user community and engagement we have with us 10 years to really help each shape and form what we kind of call a training Pathways and you know
00:29:24 [W] Pathway to the cloud knative and you know for how to develop and kind of modified development for more Cloud native models.
00:29:37 [W] We also have used the cncf Landscapes a lot.
00:29:46 [W] So as we look at filling gaps and our technology portfolios, we bring in the landscape and talk about the different projects.
00:29:53 [W] Not just the ones that are in the you know, cncf sandbox and activating efforts, but also the ones are just listed as
00:29:55 [W] projects that may be of interest to us to engage in and I kind of had this interesting side effect of a lot of I developers you can excited about these different, you know project and what they're working on which then in turn will create we developed a you open source
00:30:10 [W] Was I just listed as a project that may be of interest to us to engage in and they kind of had this interesting side effect of a lot of I developers getting excited about the different, you know project and what they're working on which then in turn
00:30:12 [W] Kind of get you know developers engaged with the community and then they started, you know, providing, you know contributions back to the community, which then has led to, you know to more open source.
00:30:23 [W] Miss.
00:30:23 [W] Nome é methodology. It's being enforced and coming until immunization which has been awesome to see the other thing we do is we also like to do a lot of recruiting.
00:30:35 [W] Thank you Khan and you know, sweetie.
00:30:37 [W] we always looking for great full-time employers and employees and internships and we are hiring
00:30:43 [W] So let me know it's been working and there's another good reason to be part of the cncf piece of community to right you. Can you are you are out there? You put your name out there and talk about what
00:30:56 [W] And now you're attracted the talent that's interested in that too.
00:31:00 [W] So.
00:31:01 [W] It's a win-win.
00:31:05 [W] Yeah, for sure and I love to hear that the your companies are actively encouraging open source contributions because that's how everything works within Cloud native.
00:31:21 [W] So, let's go to the next question.
00:31:23 [W] So did your developer experience and satisfaction change after the adoption of cloud knative and Casper? Do you want to talk first?
00:31:32 [W] Yeah.
00:31:33 [W] Yeah.
00:31:33 [W] Yeah sure.
00:31:35 [W] So but back when we
00:31:36 [W] Sort of started this we had a lot of discussion around.
00:31:44 [W] What is the right abstraction for our developers how to do they develop these microservices locally.
00:31:49 [W] How do they build that containers?
00:31:50 [W] Do they need to run the environments on their machines in the beginning?
00:31:55 [W] We try it out with running in the beginning 6 microservices and minikube and that was fine. Then we had 20 Services then it became a little bit harder and let me just give up at some point because yeah.
00:32:07 [W] We couldn't run all of these services and locally, so we needed to find a another way to sort of, you know, have a good developer experience when building microservices in a cloud knative Eco system or platform.
00:32:22 [W] That containerless do they need to run the environments on their machines in the beginning.
00:32:23 [W] We try it out with running in the beginning six microservices and minikube and that was fine.
00:32:24 [W] Then we had 20 Services then it became a little bit harder and then we just gave up at some point because yeah, we couldn't run all of these services and locally, so we needed to find a another way to sort of, you know, have a good
00:32:25 [W] And I don't think we really found the good solution yet.
00:32:27 [W] We try to sort of minimize the time it takes to deploy to one of our development environments.
00:32:35 [W] So it's for developer to to get that changes out there.
00:32:37 [W] It's about three minutes or something like that.
00:32:42 [W] we have focused a lot in on writing tests and having our developers testing a lot more locally and write as much as possible that they can do locally and then they can of course push to to a development environment to just it fairly quickly, but I'm
00:32:56 [W] I'm kind of interesting too interested to hear how how you sort of addressing developer experience and how your developers are sort of seeing this adoption of time knative and what they think of it.
00:33:05 [W] So I can talk a little bit about what we're doing right now and Spotify.
00:33:21 [W] So we've had a we kind of have that we've kind of built alongside as we've been added opting more and more like Cloud native
00:33:29 [W] Homes and things like that.
00:33:41 [W] We've actually been trying to build a platform alongside of it focusing on onto so when it comes to like developer productivity, you know, maybe we can deploy everything all on one person's laptop, but we can provide
00:33:45 [W] Of other kind of productivity optimizations through like a centralized plug-in framework that that might in producing at the moment where everyone can plug in like various bits of tools be that something to do with kubernetes
00:34:01 [W] It's a smooth that process all the way through to ci/cd tooling and everything else in between and that the the internally within Spotify that that gave us a really good
00:34:17 [W] I think in like developer engagement and if you will happiness from their day-to-day and that's what we're now working to to open source and try and support the rest of the community doing the same type of thing.
00:34:33 [W] And I think that the the thing that that kind of lines up along side that is adopting like cncf Technologies or looking at the landscape there.
00:34:49 [W] It gives developers a Common Language if you will so rather than working on specific Frameworks are of projects to Spotify, you know working on kubenetes is
00:35:01 [W] Always something that like other engineers and other companies can relate to and there's a bigger wider Community there that they can engage with so kind of the adoption of those and then trying to supplement that alongside and seems to have really improved and help
00:35:16 [W] sort of
00:35:19 [W] Jennifer how about accompanist?
00:35:26 [W] Yes, well the organization an organization started with Cloud native in mind the new connect International and there was a change in developer experience because we had a new teams coming from different
00:35:42 [W] And most people didn't have these devops mindset cemented in their minds, but they were very welcoming. But of course we had to we are still
00:35:57 [W] Together and it's meant for us to all work together and similarly to lie building tooling and that will help people across the board not individually supporting teams.
00:36:13 [W] So it's thinking ahead of accelerating for everybody.
00:36:19 [W] And yes now the teams are more mature after about three years that the project started and appreciative of bof.
00:36:28 [W] Being able to have more flexibility with their applications. So it's been very positive. And now with the merger that I mentioned there is a another interesting challenge because the other
00:36:42 [W] Had a different way to deploy systems.
00:36:48 [W] They had a more self-service click button system that did much more. So we are looking now at the benefits of having more flexibility and having less ownership,
00:37:02 [W] One thing to merge and having giving this option if someone just wants to throw that application and deploy really quickly a small thing or and or if someone wants to be able to write their own that Docker file, so we are
00:37:17 [W] Challenge right now into creating one deployment system that will satisfy these two culturally different sides, but benefiting everyone.
00:37:30 [W] Awesome.
00:37:33 [W] Thank you.
00:37:39 [W] And I think we can finish up now, but I just like to give everyone the chance to say any last thoughts.
00:37:43 [W] So for me, I found this really interesting conversation and I'm really happy to see more companies are incentivizing their Engineers to work with the open source community.
00:37:52 [W] Jennifer well, well, thank you for everyone and I believe that we should yes fight trust to follow the guidelines that we have from the community.
00:38:07 [W] But at the same time listen to you to your team's to your developers, they always have different challenges to share and the yes like to keep learning.
00:38:18 [W] Yes.
00:38:26 [W] Yeah and for me, it's I think a juror experiences. It's really valuable.
00:38:30 [W] Just hearing the good the bad whatever you can share with the community. It's really a great experience to learn from each other and just get some feedback. So I really encourage people to whatever they have out there open source, or just write a blog post or whatever.
00:38:44 [W] Everybody Community because we all learn from it.
00:38:48 [W] Yeah, definitely just 10 gauge with the a music Community Forum from the cncf if you can and keep learning and adopting and iterating don't give up.
00:38:58 [W] Last word to you lie.
00:39:07 [W] Yeah, and just to Echo what everyone else has been saying like the community is really really special and you'll you can give a lot and you can learn a lot from from the community.
00:39:15 [W] So keep up that communication and and I think as well keep up the communication internally within your own company bring bring everybody else along.
00:39:23 [W] Thank you so much to all of you. Really appreciate you chatting with me today. If you're interested in joining the end user Community.
00:39:33 [W] Please go to this URL.
00:39:34 [W] you can see on the screen cncf dot IO / people / end user Community.
00:39:40 [W] Thank you so much.
00:39:41 [W] Hi everyone, and thank you for joining the Q&A session.
00:39:59 [W] So just to let you know we're going to continue this in slack afterwards into - que con - case studies.
00:40:07 [W] So let me start with one of the questions we've got from Daniel Houston. So how have you felt your team structures and Communications have changed as you've gone towards Cloud native Casper want to go first?
00:40:14 [W] Yeah storageos as I mentioned in the recording in the beginning, we had a lot of coordination between teams before sort of our topic of native and our and now when we now have some you
00:40:29 [W] Maybe it's all that running we can do a lot of teachers without things getting in the way. They can go we're gonna be here for a couple of weeks and the car that independently most Farms without our that from
00:40:44 [W] It's very involved. And which is awesome to see them filled pasta products pretty fabulous food processor company and make that Apostle Paul.
00:40:54 [W] Great.
00:40:58 [W] Thank you D or Jennifer or can do you want to respond about tissue structures and Communications?
00:41:06 [W] I think I can say that like it's the switch like two more micro microservices and kind of knative and that side of things and eventually that allows the teams to be more impact orientated.
00:41:23 [W] So rather than kind of having to keep up with kind of as Castro saying that the like the whole stack we can focus in on our own impact areas and really own that end to end and then Communications I think communication is still key,
00:41:37 [W] But the type of communications kind of shift a little bit more kind of like information blast more keeping the stakeholders up-to-date that maybe you've got dependencies are extremes that are based off your services
00:41:51 [W] Systems so you can be a little more targeted with those comments.
00:41:57 [W] Excellent.
00:42:01 [W] How about I go to you Ken?
00:42:02 [W] Yeah, I mean, you know imagine that we felt the same the same thing.
00:42:12 [W] We've got some of the same things that match the code makes the really interesting thing for us was around the sale of being broken down teams working a lot closer together a lot more competitive.
00:42:24 [W] Listen Jennifer about a communist.
00:42:32 [W] Yeah, well, we aiming towards breaking those tires and sometimes it's difficult people see it as I still not a team like let's say they Cloud for me for structure teen and
00:42:47 [W] Developers but we are trying to make like a to one Community. We attended the same meetings.
00:42:55 [W] We are the engineering teams, but there are still a lot of challenges to make it seem like a single practice that is not aimed at the same goal, but he has like it says improved a lot we are.
00:43:09 [W] Supported with Terror with them we have channels for communications to support it, but we are not a support seamless say yeah. It's like it's a constant learning and iteration outside.
00:43:25 [W] Pathetic.
00:43:32 [W] I know we have a time limit here.
00:43:33 [W] So the rest of the questions I'm going to put into slack so we can follow up on it.
00:43:42 [W] But let me try and get one more in so I just saw a long Tony wildish.
00:43:43 [W] Did you find any cultural resistance to change in Cloud native?
00:43:47 [W] And how did you address that?
00:43:48 [W] The in can I push that to you first?
00:43:57 [W] Sure any cultural resistance to going with Cloud native?
00:44:05 [W] I think I think maybe it's not necessarily specific to going Cloud native.
00:44:20 [W] But I think the biggest thing was kind of just change and risk of that change in the in the like the core product.
00:44:21 [W] that was that was out there. So kind of being able to take that in stages and take it in smaller steps and then related to that. I guess the the change in process people will used to work in a certain way particularly like thinking about
00:44:37 [W] Unlike the way we used to QA stuff back in front and that was just a again a small like holding hands and working with people to make sure that the new stuff worked in a way that was
00:44:51 [W] For that.
00:44:53 [W] Yeah.
00:44:54 [W] So Ken, how about a MasterCard?
00:45:01 [W] And we had a very good law school and I think the process pieces something to not you know lose track of because it does because definitely involve a lot of change and a lot of work to get that
00:45:24 [W] Okay Casper, let me ask the question to you.
00:45:35 [W] So did you get any cultural resistance to changing to carve knative I think the most resistance we got was from when we sort of pushed everything out to developers and that one
00:45:48 [W] I think we might have lost your audio at the end Casper.
00:46:01 [W] So.
00:46:02 [W] Sorry about that.
00:46:06 [W] Let me go to Jennifer ask you the same question.
00:46:09 [W] I guess a similar thing.
00:46:14 [W] It's a bit scary to have from one point. You were just focused on thinking of the feature.
00:46:23 [W] you have to deliver and then you are suddenly responsible. If you count if you come from what you need to monitor your application you need to secure if you are responsible for it, and there is sometimes an assumption
00:46:35 [W] And that's how you will and infrastructure team will build the dashboards.
00:46:41 [W] They will and then you are like well and they have to have a discover Sation of like cooperation as in and sell the idea that it's better that they have the whole power because they then don't depend on another team and
00:46:56 [W] There is it and it's more of like a collaborative thing.
00:47:02 [W] Yeah, these are challenges.
00:47:07 [W] It's like I said before the teams are more mature now and we are more used to this communication, but it's still with specially with merging and I'm going to different teams this is happening and you will keep
00:47:17 [W] Coming across that with new teams and but but I think it's for better now and I think they appreciate after after they get to learn more and see that they are like Now understand
00:47:32 [W] Tamar and for their careers as well like the knowledge of the whole lifecycle and supporting when you told your applications is really good.
00:47:44 [W] Yeah, definitely think it's a little bit easier today than it was a few years ago when Cloud native was newer I think more people know about kubernative now. So it's easier to persuade them that this is the right way to do things.
00:47:58 [W] And I think that we should wrap up there and then we will take the rest of the questions to slack.
00:48:12 [W] So again Casper Jennifer Ken and Lisa. Thank you so much for joining us today and everyone else.
00:48:13 [W] Thank you for listening.
00:48:16 [W] cluster Jennifer
