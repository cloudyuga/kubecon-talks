Tutorial: Getting Started With Cloud Native Security: UJJB-5046 - events@cncf.io - Monday, August 17, 2020 9:01 AM - 285 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:03:48 [W] Hi, I believe we are live with our Cloud native security tutorial.
00:03:58 [W] And yeah, so this is the first time we've used this platform. So I hope we're going to be able to find our way around on this today.
00:04:02 [W] And if you haven't met me before my name is Liz rice my called you want to say hello.
00:04:05 [W] Hello there everyone.
00:04:08 [W] My name is Michael house someplace great.
00:04:13 [W] So thanks everyone for joining us today on this tutorial now. I hope that you got the message beforehand about preparation.
00:04:22 [W] going to be running through lots of different exercises today lots of Hands-On demos and if you want to run through those demos with us as we go along you'll you would probably want to have already done that preparation. So
00:04:37 [W] Hopefully being able to do that the other bit of housekeeping I wanted to mention is we're going to be using the slack channel for QA.
00:04:49 [W] It's number 2 Cube con tutorials security Saudi jump in there at any time when I'm speaking Michael will also be looking at the slack Channel and then later on when Michael speaking I will be looking at the
00:05:01 [W] We'll try and answer questions as we go along this afternoon.
00:05:17 [W] And if we don't if there's anything we don't get to while we live today, we'll try and answer it later on today or even later on during the week. Then that also means that if there's anything while you're if you want to try out the exercise is
00:05:20 [W] Do come and ask us questions in the site Channel and we will try to help you out.
00:05:26 [W] All right, so I'm just going to try to share my screen now, see if I can get that going.
00:05:35 [W] Alright, so hopefully you can see my web browser and my terminal window. So we're going to walk through some practical lessons on how to defend yourself
00:05:53 [W] Against attacks and this diagram which comes from our book we hold that up in front of the camera and an appropriate way.
00:06:08 [W] So this is a book that Michael and I wrote about kubernative security and this diagram comes straight from we can to your crew. The country is cool.
00:06:14 [W] You can't see my screen Rook week from nope.
00:06:18 [W] Not yet.
00:06:21 [W] There is a delay.
00:06:23 [W] I don't know.
00:06:24 [W] I've still got soaked.
00:06:27 [W] Okay, I'm gonna you can see this group.
00:06:30 [W] Some people can see the screen. Okay. Okay.
00:06:37 [W] I got a message saying we can be. Okay.
00:06:41 [W] The majority says they can see you.
00:06:42 [W] Okay, good.
00:06:45 [W] It's eventual consistency, right?
00:06:46 [W] Yeah, so this diagram came from the book and there is a typo in the book If the first person in that snyk channel to point out what the typo is and what it should say.
00:07:01 [W] I will send you a physical copy of the book.
00:07:05 [W] So have a quick look at that diagram.
00:07:10 [W] It leaps out at me, but I've seen it a few times now. So anyway, so this diagram is showing.
00:07:13 [W] A variety of different ways that an attacker might choose to try to compromise your keep Nettie's cluster or applications.
00:07:29 [W] We're not going to have time to go through all of those in the session this afternoon, but we are going to look at some of the most important tools that you can use to defend yourself.
00:07:38 [W] So I'm going to start by talking about vulnerabilities in application codes and how you can defend yourself against known vulnerabilities.
00:07:43 [W] then I'm going to move on to talking about securing your cluster according to the best practices basically, so that will is how to configure your nose your ci/cd settings your
00:07:59 [W] Things and so on to make it harder for attackers to compromise through those Reeds and then I'm going to hand over to Michael.
00:08:11 [W] He's going to talk about using policies to protect yourself against for example, misconfigured container images and then he's going to move on to talk about how you can use
00:08:22 [W] Gitops to secure your cluster or to kind of add an extra layer of Defense around what you're doing in your communities cluster. So we have got a ton of exercises practical demos and
00:08:37 [W] I want to to get through today as I say do ask questions as we go along.
00:08:42 [W] We will try to answer those.
00:08:47 [W] I think without further Ado.
00:08:49 [W] I'm going to go on to the first of those exercises and we will talk about running a compromise pot.
00:09:02 [W] So if you've been through the preparation section, you should have a kubernetes cluster running. I'm using kind some of the
00:09:06 [W] Apple's I'm using will assume that we're using kind it's kubenetes in Dhaka.
00:09:16 [W] And what I'm going to do is run a vulnerable application in my cluster.
00:09:21 [W] I'm just going to copy this.
00:09:23 [W] Run, I made a Helm chart to make it very easy for you to install this vulnerable web server application is running with the chauchat vulnerability.
00:09:37 [W] Do not run that in a production cluster. If you just copied and pasted that while you hand your kubernative context pointing to your production cluster and install it now don't don't don't do that.
00:09:50 [W] that. It's kind of okay to run on your laptop and that's pretty much it because this is a pretty bad.
00:09:52 [W] Our ability as we're about to see say shell-shocked is just one of many thousands of known vulnerabilities that can exist in packages
00:10:08 [W] That you might have installed on your servers or in your container images and if you're running with those vulnerabilities because there no attackers will look for them to see if they're available see if they can be
00:10:23 [W] waited on your system shell shock is a pretty old vulnerability is from 2014, but it's quite a nice example of something that's pretty easy to exploit and you know pretty powerful
00:10:37 [W] so now that I've run that Helm chart that will have run deployments and I've got a instance of a pod of annoying with this shell shock vulnerability in it
00:10:53 [W] And I'm going to want to send Weber kettle is to that web server.
00:11:00 [W] So I'm just going to run port forwarding. So this inner command is is getting hold of the the name of this pod.
00:11:13 [W] And then I'm going to put forward so that my Local Host Port 8081 maps to Port 80 in that in that container running in that pod.
00:11:22 [W] So if I click on that?
00:11:27 [W] Live demo issues.
00:11:31 [W] Why is that going to work?
00:11:34 [W] Okay got there in the end.
00:11:37 [W] Maybe my port forwarding wasn't quite up or something.
00:11:41 [W] So this is the default page being served by that application running on my in my vulnerable poddisruptionbudgets.
00:11:55 [W] That just looks like a regular apache2 webpage.
00:12:00 [W] So if I go back to my tutorial, yeah, I also have a script. So actually let me just curl too just so you can see curl
00:12:15 [W] Case you want and we'll see a bunch of HTML.
00:12:23 [W] That's the same as the page. We just looked at so I can make requests to that address and get responses and I can also make requests to a script so this CGI
00:12:33 [W] Ben product reruns scripts and all this script files is returned some text.
00:12:43 [W] It's regular expected output.
00:12:44 [W] That's what we expect to see when we make a request to this address.
00:12:49 [W] So now we get into the fun part we get into the bit where we can exploit shell-shocked.
00:13:00 [W] So what shell-shocked is is a vulnerability that means bash will when it expands environment variables.
00:13:10 [W] can be made to run arbitrary bash commands when you send a web request if he's passing user agent string that gets zettabytes.
00:13:20 [W] as an environment variable so you can cross that environment variable very easily in a way that includes some commands that then get executed by Bosch because of this vulnerability
00:13:36 [W] So here's my command that I'm going to that I'm going to run and just copy that and paste it before I hit return on it. The - A is saying I'm sending a user agent string.
00:13:51 [W] So I'm adding to my HTTP request.
00:13:56 [W] and
00:13:58 [W] That's the agent string that I'm sending in and as you can see, I've included some arbitrary code. I've asked it to cat the contents of the etcetera password file and it's going to send that back to me
00:14:13 [W] Set off the normal response to that page.
00:14:16 [W] So there we go. I have essentially hacked into the web server running in that container image and I've got the contents of the password file and I can very easily change that to run
00:14:33 [W] some other come on, maybe I just
00:14:36 [W] list the contents of the root directory.
00:14:40 [W] Pretty nice thing to be able to do as an attacker, right?
00:14:48 [W] It's a very powerful exploit.
00:14:50 [W] So as someone operating this web server, I really want to know that it doesn't include that vulnerability.
00:14:59 [W] And the way we do that is with container image scanning.
00:15:05 [W] All right, any questions that we should do with before I move on at this point Michael.
00:15:14 [W] I haven't seen anything like content-related was mainly in terms of how to access the tutorial page itself paste it in there and it's also pinned on our slack channel. So if
00:15:29 [W] Get there on the cncf Select Community to keep control Carol's security up there.
00:15:38 [W] It's pinned tutorial Quality Security of info. Most of the feedback so far was around difficulties in browser. So apparently Chrome Firefox behaves differently.
00:15:51 [W] seen a Content related question yet.
00:15:54 [W] So I would say let's continue and we're good in time. So, okay kids.
00:16:01 [W] All right. So we've shown how running with a vulnerable image can potentially be exploited and
00:16:12 [W] The question now is how can you make sure you're not running with one of these known vulnerabilities?
00:16:23 [W] There are literally thousands of vulnerabilities that have been published.
00:16:27 [W] They all get given a CV identifier will see some examples of that shortly and they exist in packages that you install
00:16:38 [W] Your operating system that can also exist in other dependencies like language-specific dependencies.
00:16:45 [W] There are lots of vulnerability scanning tools that you can use to look at include any of these known vulnerabilities.
00:17:01 [W] Well, that really means is what packages are installed.
00:17:06 [W] what versions of those packages are installed and then for each version of a particular package looking up whether it contains any known vulnerabilities, so there are a few different scanners
00:17:19 [W] Valuable the one I'm going to use is a tool called trophy.
00:17:25 [W] If you don't already have this installed and you want to do so, it's very easy to install with your Brew or with this installation script other scanners are available.
00:17:38 [W] There are open source Scanners from Angkor and red Hat's Claire.
00:17:40 [W] There are also several commercially available scammers, then largely doing a similar job.
00:17:46 [W] They may have different data sources and handle or have
00:17:49 [W] port for different operating system versions or different programming languages, but they're all essentially doing the same kind of thing trivy is developed by my team.
00:18:04 [W] So I'm biased and I think it's the best one out there, but I'll leave it to you to compare and contrast difference on ability scanners.
00:18:14 [W] So if you've got it installed now, let's have a look at the
00:18:19 [W] I hope that I'm running and let's describe this.
00:18:28 [W] Todd and we can see that the image is running.
00:18:36 [W] is this shell shockable image?
00:18:43 [W] Should be doing the same kind of thing trivy is developed by my team.
00:18:51 [W] So I'm biased and I think it's the best one out there, but I'll leave it to you to compare and contrast difference on ability scanners.
00:18:51 [W] So if you've got it installed now, let's have a look at the table that I'm running and let's describe this.
00:18:53 [W] And we can see that the image is running.
00:18:58 [W] is this shell shockable image?
00:18:58 [W] So if I want to see whether there are any vulnerabilities in that image, actually, I should copy and paste Nats quicker.
00:18:59 [W] All I need to do is run trivy open image. Let's apply the image name.
00:19:00 [W] You'll see it downloading a database.
00:19:00 [W] This is the database of which vulnerabilities exist in which versions of which packages and you'll see there.
00:19:09 [W] It's come back with a few different vulnerabilities here.
00:19:11 [W] But the interesting ones at the top here are see the twenty fourteen sixty to seventy one and 7169.
00:19:24 [W] So actually when shell-shocked was fixed well when it was first published there was a fix for it and then it was discovered that that fixed wasn't complete. So a second vulnerability was published.
00:19:37 [W] want to run a container that uses bash without the shell shock
00:19:43 [W] It needs to be this fixed version or newer in reality. If you install bash today, you will get a newer version your you have to jump through some hoops to get an old vulnerable version.
00:19:57 [W] Image name you'll see it's downloading a database.
00:19:58 [W] This is a database of which vulnerabilities exist in which versions of which packages and you'll see there.
00:19:59 [W] It's come back with it.
00:19:59 [W] different vulnerabilities here.
00:20:00 [W] But the interesting ones at the top here our CV 2014 sixty to seventy one and 7169.
00:20:01 [W] So actually when shell-shocked was fixed well when it was first published there was a fix for it and then it was discovered that that fixed wasn't complete. So a second vulnerability was published.
00:20:03 [W] So if you want to run a container that uses bash without the shell shock vulnerability
00:20:05 [W] It needs to be this fixed version or newer in reality. If you install bash today, you will get a newer version your you have to jump through some hoops to get an old vulnerable version.
00:20:11 [W] Shogunate so just think of it as an example.
00:20:11 [W] So if you wanted to run a not vulnerable version or not vulnerable to shell-shocked you'd need to make sure that the version of mash you have is is newer than this version typically do that by doing some kind of
00:20:17 [W] Get install a newer version or yam or whatever your package manager is your version of Linux.
00:20:26 [W] Okay, so let me move that back to the right so trivy has shown us some high some mediums from low vulnerabilities in that particular example,
00:20:44 [W] might want to only show vulnerabilities above a certain severity threshold because in reality there are a lot of low severity vulnerabilities and you may not consider it
00:21:00 [W] the trouble to go and fix them all so you may choose to just show for example critical high and medium vulnerabilities
00:21:17 [W] Flag we should just see the high in the medium, but no low severity Gunner abilities.
00:21:26 [W] the fixed version of this image is I happen to know is 0.3 dot 0 and if I run on that we should see there are no in fact, I don't think there are any
00:21:43 [W] Any low no vulnerabilities known that different version of the image.
00:21:59 [W] So if I were running this image in production, I very quickly want to go and update all my running pods to use the fixed version of that container image.
00:22:08 [W] So go ahead run trivy on your favorite images find out whether or not they've got any severities and any vulnerabilities
00:22:13 [W] You and see what you can do to fix them this we've got a couple of questions now, maybe to give people a little bit of time to catch up on the hands on we could maybe take a question or two
00:22:29 [W] At whether or not they've got any severities and any vulnerabilities and see what you can do to fix them this we've got a couple of questions now, maybe to give people a little bit
00:22:30 [W] Good work.
00:22:33 [W] We have Danny bassam's here containerd which scanning seems illogical remedy.
00:22:39 [W] But when I test my images I get 70 plus warnings medium errors.
00:22:42 [W] How do I know which one ability are acceptable? Excellent question there, right? So a lot of in practice a lot of people will say we do not want to run with
00:22:55 [W] With any High severity or critical vulnerabilities some organizations will also include medium severity vulnerabilities in that in that list.
00:23:09 [W] So that's a very sort of simple broad-brush way of deciding whether they're important or not.
00:23:14 [W] If you do find a vulnerability, you can look them up in What's called the nvd the national vulnerability database and find out more about exactly what the vulnerability is and you might
00:23:24 [W] decide that individual vulnerabilities maybe aren't important for your particular use of that dependency. Ideally just upgrade to the
00:23:39 [W] A just don't great to the newest version.
00:23:40 [W] What?
00:23:42 [W] You were breaking up a bit there for not going to publish a fix and so you will get different distribution specific answers about family.
00:24:02 [W] Using different or the support that you get from different from abilities scanners can be important you want to make sure that your scanner to Ports your distribution of Linux.
00:24:17 [W] I'm we have another one here.
00:24:27 [W] I think that that's something that people are interested in as well in general. I said on slack and here how does true be compared to Claire? Right?
00:24:37 [W] so as I say, I am somewhat biased here, so fortunately there are a few Google there have been a couple of people who've done some comparisons. They have found.
00:24:47 [W] And from from from what I believe to be the case trivia supports a wider range of data sources. So more distribution specific database vulnerability
00:25:02 [W] Databases databases or vulnerabilities.
00:25:06 [W] I'll get there in the end and supports more kind of language packages as well.
00:25:21 [W] There are also sometimes there is more than one source of data for a particular distribution and you need to make sure you're using the up-to-date one and it's also
00:25:27 [W] Another comparison point is how frequently those vulnerability databases are updated trivia actually updates everything twice a day.
00:25:41 [W] So and the reason for that is that new vulnerabilities get discovered in existing software all the time. So you can scan your image from vulnerabilities today if you scan it again tomorrow, it may find
00:25:49 [W] National vulnerabilities have been discovered even though the software itself didn't change.
00:25:53 [W] I think we might have time for one more question before we move on.
00:26:02 [W] I see this pattern couple of times and I don't know to what extent it is covered in the tutorial.
00:26:10 [W] So maybe you want to put that on hold the question around how to use it in a ci/cd fiber especially. Yeah, let's let's move on to this. Let's go back to the exercises and I will talk a little bit about using it in ci/cd.
00:26:24 [W] ICD it's the screenshare still on is that still good?
00:26:32 [W] I'm going to assume it is. All right. So one of the reasons why trivy is nice is that you can use a small version of the vulnerability database
00:26:48 [W] Because when you're running vulnerability scanning and part of your ci/cd Statum you want it to be like wait, you don't want to have to go through a giant installation process and then a giant process of installing the vulnerability database.
00:27:03 [W] So trivia is designed to work. Well in that scenario and there is a link here to a lot of examples that actually come from the tribute page with example configuration for
00:27:16 [W] Various didn't see eye-to-eye tools.
00:27:18 [W] If you scan your images in the ci/cd system, it means your image never gets pushed your registry if it contains vulnerabilities over whatever threshold your setting.
00:27:33 [W] Then at the point where you're about to deploy workloads.
00:27:59 [W] Time and then the last thing I wanted to show you in this section is a new tool that we've been working on called starboard and the idea of starboard is that you
00:28:14 [W] Use it to run variety of different security tools trivias one of them. It also works with some other different security tools.
00:28:28 [W] The results are stored in Cube. Nettie's custom resources.
00:28:31 [W] For example, there's going to be I'll show you shortly a vulnerabilities custom resource and then you can retrieve security information across the cougar Nettie's API.
00:28:41 [W] So if you don't already have it installed you can install starboard as a crew plug-in. So I already spok type list
00:28:56 [W] Guys, I already have starboard install. If you hadn't come across true.
00:29:01 [W] It's a really nice way of extending your Kube control functionality with a bunch of different plugins are some really really nice and Powerful plugins out there.
00:29:12 [W] Having installed it you can just run the starboard as a few controls of sub-command and you can see here.
00:29:24 [W] There's a few different tools that you can run through starboard.
00:29:31 [W] But before you do that, you need to initialize starboard and rack creates some custom resource definitions.
00:29:38 [W] And for our purposes right now, we're interested in vulnerabilities.
00:29:46 [W] We're going to be able to store vulnerabilities in this custom resource type.
00:29:52 [W] So I still have let's just check that.
00:29:55 [W] It's still there. I still have my shell shock deployment running.
00:29:59 [W] running. So I'm going to run.
00:30:00 [W] Starboard find vulnerabilities over that deployment what starboard is doing is creating a job that runs trivy.
00:30:12 [W] It looks like that deployment finds the Pod spec finds any container images and in that job runs trivy over any container images related to that deployment. She takes a few seconds.
00:30:29 [W] I've used this deletes can job equals false so that or if I haven't said that when the job completed it would get deleted and cleaned up. But by leaving it there we can we can look at it
00:30:43 [W] After the event. So now that I've found the vulnerabilities I can get them using a cute control command.
00:30:53 [W] And it's basically yeah mlops being the vulnerabilities that are related to that deployment.
00:31:01 [W] If I were to show you how those are related to we use labels to show how they're related the vulnerability of portrait lates to deployment
00:31:19 [W] Michelle shockable in the default namespace
00:31:22 [W] and I can because I set that delete job equals false. We can look at the job that ran.
00:31:37 [W] And we can see here that it's a job it ran trivia command.
00:31:45 [W] Over that image that we identified earlier is the the image that was running as part of that that deployment this we have a couple of questions which all are
00:32:01 [W] More or less the same topic in that is does trivy do non operating system related scanning.
00:32:14 [W] So, you know in various forms like travel or whatever is like anything that is not OS level.
00:32:18 [W] Yeah, so trippy does support a number of different programming languages.
00:32:27 [W] If you check on the trophy read meter to get exactly the right list, but certainly python Ruby node.
00:32:31 [W] A range of languages that I don't want to get Wrong by I don't want to mislead you by forgetting one. So so check it out on the the Trib you read me.
00:32:39 [W] Yes. Yes, it does cool and the related question or also came up a couple of times in terms of frequency.
00:32:53 [W] How often the vulnerability database is updated.
00:32:57 [W] think it was not entirely clear like some people asking is tribute really
00:33:02 [W] Twice more they divide he's like, you know, yeah. Yeah, so
00:33:07 [W] trophy or some kind of background components in what we might call the trivia ecosystem twice a day go around to all of the different data sources that that it uses and
00:33:23 [W] Updates with any newly published vulnerabilities or any changes to the vulnerabilities from that data source that gets built into the Trevi database that is actually stored on GitHub. Then when you run trivy
00:33:39 [W] If I run it again.
00:33:43 [W] Let's run it again.
00:33:56 [W] Didn't do the image the database downloading because it was already cached. But I think you might recall right at the beginning of the first time. I ran it it had to download a database which will cash for a certain period of time
00:34:04 [W] Then we'll check for any database update so happened since the last time it was updated.
00:34:13 [W] So if for example you were in an offline scenario where you're not internet-connected you would need to update that
00:34:27 [W] our ability database
00:34:28 [W] as often as you feel it's important to be up to date with the latest known vulnerabilities.
00:34:38 [W] Hope that answers the question.
00:34:41 [W] That's good.
00:34:44 [W] Yeah, I think there are many more like low level and I think we will based on the volume.
00:34:52 [W] We will not be able to answer all of them. It's like at least 15 that I cut can count here. And that's just one of the many topics that we have here. So I guess we will
00:34:59 [W] To answer them off slide in this lecture.
00:35:03 [W] I'm sorry.
00:35:03 [W] That's great.
00:35:04 [W] We're here all week.
00:35:08 [W] Right so we can we can check out those questions in slack later.
00:35:11 [W] So if we didn't get to your question today, don't worry. We will try and get back to you later.
00:35:16 [W] Okay, and there is one of the interesting thing about about starboard which is that we have it. We have some and octant plug-in if you haven't come across Upton.
00:35:29 [W] And it's a really nice dashboard for kublr Nettie's not as you're going to show this right now.
00:35:36 [W] I am going to show it for another example shortly. But if you want to check out starboard in octants, you'll see that there's a
00:35:47 [W] We've written this plug-in that enables you to see the vulnerabilities right there in front of you in the top ten dashboard alongside the resource that it applies to.
00:36:00 [W] Okay, so that so far all everything I've talked about so far is about vulnerable application code dependency vulnerable dependencies that exists inside your container images
00:36:18 [W] Now I'm going to switch to a completely different topic which is about setting up your Kube Annette. He's configuration securely.
00:36:32 [W] So when you install a Kuma Nettie's cluster, there are lots of lots of different configuration settings several of which.
00:36:37 [W] The can potentially affect security.
00:36:42 [W] Some of them are really obviously going to affect security like whether you're running with a an insecure Port that lets Anonymous uses make requests across an API other settings are maybe a little bit more subtle in how they affect security
00:36:56 [W] And there is an organization called the center for Internet Security publishes benchmarks that describe recommendations on how to configure lots of different pieces of
00:37:10 [W] for one of which is Kuma Nettie's so there's a CIS kubenetes Benchmark with recommendations for how you're keeping that is cluster should be configured and it's
00:37:25 [W] It's something like 200 Pages.
00:37:28 [W] It's there's a lot there.
00:37:31 [W] So rather than having to manually check every single node in your cluster and do that repeatedly to make sure that the settings are still as expected.
00:37:44 [W] We built a tool called kubenetes to automate that process.
00:37:47 [W] I'm going to show you automate or running key Benchmark in a kubenetes cluster.
00:37:56 [W] So I'm going to do another really really bad example something you should never do particularly against a production cluster.
00:38:08 [W] I am going to download some llamo from the internet and run it.
00:38:10 [W] There we go. Look at it before you apply.
00:38:17 [W] And that job should have run keep in touch on my SQL node kind of cluster that I'm currently running and let's look at the
00:38:32 [W] Put from that she goes into the La Crosse.
00:38:35 [W] There's loads of it there's pages and pages and pages and pages and pages of results from kubectl.
00:38:58 [W] And then we get to another section. So I hope you get a little summary telling you the previous section.
00:39:06 [W] Say I'm going to show you an example of remediating a test. And the one that I'm going to pick on here is for top 2.6, which is about protecting
00:39:22 [W] And Colonel defaults and this is basically the Keebler it will I believe it errors it certainly complains if the some tunable parameters
00:39:36 [W] Which is in the kernel are not set to what the kublr expects to be set.
00:39:44 [W] So this is currently failing because protect Colonel defaults is not set to true in my kind cluster in the moment.
00:39:54 [W] Now if you're using a different kind of cluster, if you're using minikube, you're running keeping a c's nodes in a virtual machine or you're using a managed service. You won't be able to
00:40:10 [W] This is a kind specific way of getting into the control plane and then remediating the problem, but because I'm running kinetics in docker.
00:40:24 [W] My control plane is running as a container so I can exact into that container and run bash inside it.
00:40:40 [W] So now I'm inside my Cuban eti's control plane containerless kind of equivalent to a node that is a node in my communities cluster.
00:40:51 [W] I have already installed my editor into this.
00:40:54 [W] Killer running version so I can already go ahead and look at the keyboard configuration on this node.
00:41:04 [W] And we can see that there is they're in alphabetical order and there is no protect Colonel defaults line here.
00:41:17 [W] So I'm just going to go ahead and add it to be set to true.
00:41:25 [W] I thought they hated the kublr configuration file. The kublr will spot that that file has changed. It will reload the configuration and it will change its settings.
00:41:42 [W] exit that I now need to delete the previous kubenetes job.
00:41:51 [W] And then I can run it again.
00:41:56 [W] This is exactly the same as what I ran before.
00:42:02 [W] And we gonna get the logs.
00:42:13 [W] logs. Let's just check the job has completed has remember it was 4.2.2 six that we remediated.
00:42:20 [W] And there it is.
00:42:25 [W] It is now passing.
00:42:28 [W] So that really just goes to demonstrate that if you change the configuration setting kubenetes will spot at and tell you whether or not you've passed it passed or failed when you next rebound
00:42:43 [W] Bench in reality.
00:42:47 [W] Maybe you're not going to do that on your running notes your it's we're supposed to be treating our deployments as cattle not pets.
00:42:56 [W] We're not supposed to go in and manually lovingly reconfigure them while their life. We're supposed to change the configuration that we use employment and automate this process.
00:43:10 [W] process. So this is more of a demonstration of what's Happening you
00:43:14 [W] Don't go into your communities clothes and manually reconfigure them. Like I just did there but hopefully that shows the kind of thing that kubenetes testing for the kind of tests.
00:43:28 [W] that the CIS Benchmark is recommending and demonstrating some what kubenetes results look like.
00:43:36 [W] There's you have a few questions.
00:43:39 [W] Okay.
00:43:40 [W] Yep, just to make sure that we catch up a little bit with the backlog.
00:43:46 [W] We want people at least to hear a quick one.
00:43:48 [W] Can you bench be used with k3s yet?
00:43:51 [W] That's something that works with ches.
00:43:52 [W] That's a really great question.
00:43:58 [W] I am sure that some of the tests are let's say not appropriate on k3s, for example, there's a whole section of STD tests and k3s doesn't use it.
00:44:06 [W] So those would inevitably fail there is I talked about there being a CIS kubenetes Benchmark.
00:44:15 [W] There's actually a few different versions.
00:44:22 [W] There's a version for eks Amazon's Managed IT service. There's a version 4 GK there is I believe a version under development for open shapes.
00:44:30 [W] It might make sense at some point for k3s if there was demand for it. Maybe there should be a k3s /
00:44:36 [W] Pacific version of those tests, but I think if you were to run kubenetes right now on on k3s, you'd have to use some judgment about whether which set of tests were relevant.
00:44:51 [W] The last thing I wanted to show you related to kubenetes was how we can use starboard to run kubeedge and store the results in another custom resource definition.
00:45:09 [W] I actually ran it quickly while I was being asked a question because I thought it might take a minute or two.
00:45:13 [W] So that's what Iran I'm just going to run the second half of that to get the bench reports.
00:45:21 [W] That's given basically the same information but in yeah more form rights run exactly the same job.
00:45:35 [W] Just starboard ran it for me rather than me applying down or directly.
00:45:42 [W] But I will show you this in opt-ins now. This is the octant UI.
00:45:52 [W] And notice there's a note.
00:45:58 [W] and here's my single node, and because we have this opt-in plug-in associated with starboard the the plug-in will grab hold of this
00:46:15 [W] Information from that c is cloudevents reports and show the outputs here in the dashboard.
00:46:25 [W] Let me also show you.
00:46:26 [W] The output for deployments because that's still running right? So hopefully we can see the vulnerabilities.
00:46:36 [W] And there's our shell-shocked vulnerability that we discovered earlier.
00:46:45 [W] So this is the the reason why I'm really excited about starboard.
00:46:47 [W] It's showing the security information related to running workloads and related to the running state of the communities cluster.
00:46:54 [W] Okay, so and we doing for any we have one question that I think makes sense that we address it right away. And that is it's on the slack and
00:47:12 [W] And that is around how do you address newly discovered series after workloads has been started open doesn't seem to be the right answer.
00:47:20 [W] Right.
00:47:23 [W] Yes, so.
00:47:23 [W] The the scenario here is you're running some software.
00:47:30 [W] Maybe it has a dependency a new vulnerability gets discovered in that dependency.
00:47:38 [W] It's good practice to regularly rescan all your
00:47:41 [W] all the images that relate to running workloads and you could be doing that with something like starboard or you could be using scanning that hooks into a registry. A lot of commercial scanners will hook into a
00:47:56 [W] History and regularly scan. Also if you're using Harbor as your registry that can re scan images within that that are stored in that registering. So it's basically the case of
00:48:11 [W] You know, you have to be regularly rescanning to find out which images are vulnerable. And then if you discover that you are running with an image that has vulnerabilities you need to rebuild that image with updated dependencies.
00:48:28 [W] Whatever fixed version of packages are needed to address that vulnerability.
00:48:39 [W] So you rebuild the image and redeploy your containers based on that new image.
00:48:48 [W] That's excellent. And we have one question which is really interesting. And to be honest. I have no really good answer for that. But maybe less know something that's a little bit of this with no CV details.
00:48:54 [W] What district Malaysian for this to report tool vendor to fix that warmer, right? So if
00:48:58 [W] Reason findability that doesn't have a CV e basic means it's not published yet.
00:49:08 [W] So if you found something you discovered a new vulnerability a lot of tools projects vendors will have some kind of security reporting process.
00:49:19 [W] So for example for keeping Nettie's, it's an email address.
00:49:27 [W] I'm pretty sure it's Security Act kubenetes dot IO something like that and you can the responsible thing to do is to tell the project or the vendor or whoever is responsible
00:49:37 [W] It's more for that code and say hey, I found this from the busy.
00:49:46 [W] and then typically what happens is the person reporting the vulnerability and the project maintainers or the vendor agree a date on which they'll publish information about that.
00:49:55 [W] I'm ability. Typically at that point you go to the tourist cve.
00:50:03 [W] there's a term for this it's like a numbering or authority that can give out new cves. So you might grab that number before you publish the
00:50:09 [W] Tales of the vulnerability but the idea is you give the vendor or the project maintainers enough time that they can come up with a fix.
00:50:22 [W] I think I mentioned earlier that typically the cve details and the fixer published at the same time and that's because of responsible disclosure behavior on the part of the person who found the vulnerability.
00:50:31 [W] Cool, we have tons of questions.
00:50:36 [W] But as I said, we are pretty much like a little bit over over time in terms of schedule. So I'm excited that there are lots of questions.
00:50:47 [W] I think this is a good time for me to stop my screen share so that Michael can take over and about policies.
00:50:56 [W] Yeah and good luck and have fun keeping up with the what cute.
00:51:01 [W] I would say Chris ending is nicer is less stressful.
00:51:07 [W] About that. So can you see my screen?
00:51:11 [W] Or at least the audience.
00:51:16 [W] Yes, I turned off my audio.
00:51:19 [W] But yes awesome.
00:51:22 [W] Cool.
00:51:23 [W] All right, so did you yeah, we could secure setting so we are moving onto policies and just to make sure you can also see.
00:51:37 [W] I don't know.
00:51:44 [W] you right policies.
00:51:46 [W] Everything that we saw so far if you think about defense in depth is is awesome. And you should be doing that's like, you know, the the 101 as image scanning Etc
00:52:03 [W] No doubt about that.
00:52:04 [W] What did talking about now policies might be depending on what you're looking at might be considered a little bit more advanced.
00:52:17 [W] So don't feel bad if you don't do everything right away, but at least you should be aware of what's going on in terms of these privileges, which is you know, throw out no matter where you're looking at it and enforcing it super important and
00:52:28 [W] Eat at least be aware of what's going on in terms of network.
00:52:36 [W] What's the default behavior of communities there and what have you got there in terms of network policies at your hands and then last but not least in this section.
00:52:47 [W] We're going to talk about Opa the open policy agent and have a look at that in action. So first things first least privileges, this is really something super important to consider in the sense of give
00:52:56 [W] Whatever person or process only the the rights to permissions to carry out this talk and not more right exactly what it needs but not more.
00:53:08 [W] And we're going to have a look at that in the context of the security context security context was one of I think the first contribution Spire directed openshift team that was Upstream accepted. So
00:53:23 [W] A lot of terminology around security context that that context no pun intended is is actually Kudo stew redhead regretted for expected.
00:53:37 [W] So we're going to use kind again from scratch.
00:53:43 [W] So I'm gonna create a kind cluster there do that takes a moment. And what we're going to do then is picked a example from the quality stocks.
00:53:53 [W] If it can your own time and dig deeper there and agreed upon the context there that has a security context defined.
00:54:03 [W] So let's have a look at the security context.
00:54:06 [W] I hope you can see that we are the intention here is with the security context first observation there you can see it is hot white. So it is it applies to all of the containers in that part and this
00:54:19 [W] Two Runners user the ID 1001 is group the group of three thousand FS group mm.
00:54:26 [W] Right? This is the intention that you isn't a developer. Whoever whatever role you putting together the pots back you want you to find the policy s is and then we're just gonna have a sleep there so that we can do we can execute that partner to
00:54:41 [W] Expect container. We have a volume here data volume, which is mounted under /data and on that container. We digitally this allow privilege escalation.
00:54:55 [W] So that is our setup here.
00:54:58 [W] If you want to follow along create the kind cluster depending on if you've done it fresh you're not it might take a moment.
00:55:11 [W] And once we have the kind container add a kind cluster, sorry up we can launch that pod with the security context set. So copy that here.
00:55:21 [W] and
00:55:23 [W] using this one and
00:55:29 [W] So if we have a look at it.
00:55:37 [W] Pot that is running takes a little bit to pull the image.
00:55:49 [W] So in a moment or so it will be running and as soon as it's running we can get the equivalent of a good old SSH into a VMware exiting execute in into the
00:55:58 [W] Container once it's running running are right.
00:56:07 [W] We are exiting into the country as you can see from the shell prompt.
00:56:07 [W] Here. We are now in the container.
00:56:09 [W] And we're gonna create a file data / content and something like literally something in there and then have a look at the ID right now as you can see you
00:56:25 [W] Eat 1,000 GID group ID 3000 and if it's group mm that is exactly and we're obviously always go there they let's go.
00:56:39 [W] This content file here.
00:56:43 [W] This is exactly what you define in the security context over here, right? So, that's awesome.
00:56:50 [W] But it kind of depends on your developers or whoever is in charge for creating these this pot specs to you know to play along to actually think about
00:57:06 [W] Bad and even be an expert in what is the right thing to do here?
00:57:12 [W] So this is nice.
00:57:18 [W] This is a good control but as it depends on the cooperation on, you know control this plus this good but control is whether you want to have a policy cluster wide policy that actually enforces that kind of pain and that is where
00:57:28 [W] Peace peace or part security policies coming so you can Define that kind of behavior on the cluster level. So for example, if you say, you know, you cannot run something as rude or whatever then you can use
00:57:43 [W] Peace be to enforce the trust of item.
00:57:47 [W] I will point out that if you think about investing to PSP be aware of there is a cab could this enhancement proposal kept five that talks about the current state and
00:57:59 [W] Peace peace in at the current point in time. There is no decision yet made in terms of where PSPs with go.
00:58:08 [W] Will they they will very likely not the current point in time graduate. So you might want to keep an open mind. For example Opa gatekeeper at the bottom of this section later on might be a good option
00:58:23 [W] To invest but in general having something like PSP in place is certainly recommended going to pause here for a moment just to give people time to catch up. And also maybe we have a question or two
00:58:38 [W] Did you want to address right away?
00:58:41 [W] Anything that pops out lists.
00:58:48 [W] Yes.
00:58:52 [W] So one question is about whether or not you can Define security context at the namespace level.
00:58:55 [W] The way the security context is defined. It is in the context of a pots back so I can imagine that if you have that use case that you are very likely happy with a
00:59:12 [W] something like over gatekeeper or doing something yourself with Opa with a custom controller, but no the answer is long and short of it is no other than the world another
00:59:27 [W] Thing that may be worth sort of clarifying.
00:59:35 [W] saying that gatekeeper should be preferred over PSPs moving forward.
00:59:36 [W] all I can really say let me share the
00:59:44 [W] the proposal and handsome proposal campfire
00:59:48 [W] the question in the chat and we have it. I think it was five.
01:00:02 [W] yummy
01:00:07 [W] all I can say
01:00:18 [W] to to slow here.
01:00:29 [W] I'm gonna post the link to that keeping it keeping it easy to you about basic user with. Yeah.
01:00:36 [W] There it is.
01:00:39 [W] is. All I can see if you look at it at the very bottom is that the only thing that is clear is that the current point in time the
01:00:50 [W] These will not graduate to GA which means it's some like 1.2 into whatever peace peace will not be part of it will be deprecated.
01:01:05 [W] So if you think again I encourage you to have something forces security context if you going forward want to look at something you might already have PSPs in
01:01:16 [W] Production usage or you're considering it thinking about should I invest into PSP you to something else then I would think that going forward it would make a lot of sense to look into Opa gatekeeper.
01:01:28 [W] es.
01:01:30 [W] anything else
01:01:37 [W] Right now I can't hear you.
01:01:45 [W] Listen. You're muted to me at least.
01:01:49 [W] Yes. I think we're good to carry on. Okay.
01:01:54 [W] Alright, so that was the simple case of a runtime enforcing a runtime policy containerd runtime depending on how much space
01:02:08 [W] You have to be liable.
01:02:09 [W] I'm going to do that.
01:02:15 [W] They got 16 gigs, or we could be careful here.
01:02:17 [W] You want to delete the cluster think of each of those into a darker running on your local machine being something. So you want to make sure that you have enough
01:02:35 [W] policies by default you might not know that but by default all the communication path is every part every namespace cetera et cetera are open and that is something
01:02:50 [W] That especially if you have a security network background click little bit scary right to come to Google is like, oh wow, everything can talk to everything. Maybe maybe it's a good idea if you actually
01:03:06 [W] Behind and enforce the network policies. The weaveworks is very often when you get to that you cri-o right?
01:03:17 [W] I know how to do it right?
01:03:19 [W] I'll take the network policies whatever they are here come there and I keep covered apply them and everything works not so fast turns out that just because he defined the resource that work policy resource. It's not enforced. You need something
01:03:33 [W] Horses it now case we are using Calico here.
01:03:41 [W] Feel free to in something else calculus is about Improvement and what used some using that but again, if you just Define the network policy to Resource to come to apply the resource. Nothing happens, right the API, so we will happily take it and
01:03:51 [W] Generalizing for Unity but nothing happens because there is no controller nothing that looks after the creases actually enforces it through this, you know, right?
01:04:05 [W] So we're going to create the kind cluster we gonna install Calico Patchett to make it work with kind and then we're going to define a sequence of these.
01:04:15 [W] All right. Let's let's start with the actual question back here creating the cluster.
01:04:22 [W] Little bit faster than last time once the cluster is up. As I said, I'm going to install Calico that will essentially set up Calico Critter couple of custom
01:04:36 [W] This controls Etc to make sure that Calico sent you can do its job as this, you know, I plug in there and once that's done we as I said, we need to patch it up.
01:04:51 [W] That's just you know the way how we setup using kind so you can if you're not using kind of can ignore this next part here and once we have that then we can actually Define the
01:05:05 [W] You mixed it for we do that because as an example, we're using Ingress. We want to assess a workloads.
01:05:15 [W] It runs in the cluster from outside.
01:05:16 [W] This kind clusters. We can install ambassadors in which controller and should be working there.
01:05:23 [W] right.
01:05:25 [W] almost there and
01:05:33 [W] Let's see if there is anything in between.
01:05:37 [W] Yes booked on list posted to kept five on the selection.
01:05:44 [W] Zabbix agent interesting.
01:05:55 [W] That's a cool one Rodrigo if you want to put that on the slack as well.
01:05:59 [W] Not sure if the Q&A with the speakers, that's why I'm inviting everyone to go on this lecture because that one for sure is you know subject to public record.
01:06:12 [W] How easy is it to implement gatekeeper? They install the I put a link to a video tutorial. There is very straightforward, I think.
01:06:20 [W] More matter of operational issues keeping it hamb everything but it doesn't video does a good job to walk you through that.
01:06:29 [W] All right kind is there so let's install Calico.
01:06:34 [W] Boom, I'm scared. He's there and now the patch again ignore it.
01:06:42 [W] That's really just for our case because of kind and now we should see just to verify.
01:06:49 [W] the three pots their Crystal things a little bit my experience the dry runs, maybe 30 seconds to a minute and once the Calico
01:07:05 [W] Everything is set up their denotes a fine.
01:07:11 [W] We can install Ambassador here.
01:07:14 [W] So this is One commands. You can literally take everything it can see here this one command just take that and you know once you see that up and running
01:07:29 [W] Walk me things.
01:07:31 [W] Ouch.
01:07:34 [W] Well, I'm waiting watching and waiting. I'm gonna
01:07:36 [W] if there is
01:07:40 [W] something new here
01:07:44 [W] anything that pops up for you lose anything that I might not see because
01:07:52 [W] At least half of my child.
01:07:57 [W] I don't see Duffy was talking about.
01:08:02 [W] Well, first of all saying good +1 on this. Aw.
01:08:05 [W] Yes.
01:08:07 [W] Yes.
01:08:09 [W] Yes, which is all good.
01:08:12 [W] Also shout-out for network security testing tool bar control plane called net assert.
01:08:18 [W] Sounds good.
01:08:19 [W] Oh, yes.
01:08:20 [W] Oh, yes.
01:08:20 [W] Oh, yes control been great.
01:08:24 [W] Yeah that is how it is.
01:08:25 [W] Absolutely. Perfect.
01:08:29 [W] We're gonna stuff you. Do you want to PR that on our tutorial?
01:08:33 [W] GitHub would be awesome. I think it's worth it.
01:08:37 [W] Well does Kelly could perform a large cast with thousand Parts?
01:08:45 [W] I wouldn't say that thousand parts and depends on the density is a large cluster necessarily.
01:08:49 [W] I haven't seen any any issues couple of hundred nodes at all.
01:08:56 [W] You know not authoritatively speaking for Calico.
01:09:04 [W] So feel free to share your experiences there and that's in general. If you have a great suggestions for our tutorial.
01:09:11 [W] Please be our it right.
01:09:13 [W] We're not it's running. We are not limited to just to see the two things that listened in myself and all right, so kind of kublr is up and now we can actually
01:09:24 [W] Install Ambassador boom. Boom. There you go.
01:09:30 [W] And with that we should have everything right.
01:09:37 [W] So, let's see if we look into it, but it's not too bad.
01:09:44 [W] It should be fairly quick.
01:09:45 [W] Unless you're doing some maintenance there, please then you don't put tell you don't think this tip that looks Som not there you go.
01:10:00 [W] Perfect.
01:10:03 [W] All right, let's have a look at.
01:10:05 [W] So you can have a look at the workloads yourself.
01:10:17 [W] It's just a very simple nginx that you know, it's available made available through the Ingress there. So
01:10:24 [W] I'm stoked.
01:10:39 [W] With that we should be able that was all just a setup.
01:10:56 [W] We should be able to do that.
01:10:56 [W] Right so curl since we have two Ingress. It is available. / API is just the default nginx.
01:11:03 [W] Welcome page so we can do that for now.
01:11:07 [W] Remember what I said early on by default.
01:11:11 [W] Everything is open Super scared, right?
01:11:18 [W] So first thing you want to do is to denial and so we're going to launch a
01:11:20 [W] We did kind of Define a network policy that it's called glial and it literally does exactly what it says Unitas all traffic.
01:11:33 [W] So let's do that.
01:11:34 [W] So you do this one here deny all now anyone gets an idea if we do.
01:11:46 [W] It's again.
01:11:50 [W] What would we expect?
01:11:50 [W] A timeout right curl time's up.
01:12:00 [W] We don't get to it anymore.
01:12:01 [W] Right? So we shut down all the traffic from the outside.
01:12:06 [W] Everything is it's okay, but at the end of the day, we do want to have traffic to that front, right?
01:12:18 [W] if we look at how front-end Network policy and we say here whatever is linkerd.
01:12:23 [W] Labeled with front end is allowed to get them not to get nervous.
01:12:33 [W] So we gonna Define that you network policy.
01:12:37 [W] Remember the component in the kind of cluster that is actually enforcing it is calico and then we're going to label our let's do it in two steps right first you can do it together again one quantity just come but
01:12:49 [W] Break it up.
01:12:51 [W] Why because I want to show you that just because you have defined that policy does not mean yet at you actually get traffic light it is still look at it.
01:13:04 [W] The pot the front-end part of the nginx workloads has not been labeled yet with fondant.
01:13:18 [W] So it's like I'm not gonna not going to apply that right now.
01:13:18 [W] I'm going to apply the policy.
01:13:19 [W] So let's apply and let's label that pod.
01:13:22 [W] Oh it hopefully should work.
01:13:27 [W] And then you open up the communication part is one by one that you need expensive.
01:13:44 [W] Cool, how we doing? TimeWise?
01:13:49 [W] I think I'm a little bit behind but that's not too bad.
01:13:54 [W] So that's great.
01:13:57 [W] As I said always do do the network policies, but if you think about that, we've seen two cases not just to where we kind of like have to deal with custom specific
01:14:10 [W] Policies that we have you find it, we how we enforce it what we need to install for the cetera et cetera.
01:14:18 [W] So what if there was a way in a generic way to define policies and that does not mean necessarily only, you know technical things like Network policy. Is this part can
01:14:31 [W] Talk to this part or parts in this namespace have to run with this user.
01:14:38 [W] whatever but in general any kind of policy.
01:14:45 [W] For example think of thing. I'm going to talk at the very end gitops where you need to want to enforce a policy that at least two human reviewers need to look at every commit,
01:14:56 [W] Republicans you can do that.
01:15:01 [W] That is the open policy Edge projects. Oh, okay.
01:15:05 [W] That means we'll be okay going to wrap up Opa super powerful and rather than talking lengthy about that.
01:15:17 [W] I just point it at the end.
01:15:18 [W] There are a number of great resources that you can watch and read in your own time. I just going to walk you through an example here in the very awesome Rico playground.
01:15:29 [W] So what we have here is two parts the one hand you have input tekton and that input data input data is chasing and nowadays. You can pretty much create or generate convert everything to chase.
01:15:44 [W] It shouldn't be a problem.
01:15:48 [W] So in our case we have these time-stamped payload doesn't matter what whatever it is. The important thing are these types of see we have three regular rules and what we want to know.
01:15:58 [W] Oh is if a certain event, for example, that liquid message could be the trailer whatever doesn't matter. The question is is an entry within a certain
01:16:14 [W] Hey tweek, you head over to the Rigo a playground.
01:16:20 [W] It's linked from here.
01:16:23 [W] Make sure that taking the correct link up its generic one and I'm not gonna zoom in for now.
01:16:32 [W] We have the input data here.
01:16:35 [W] That's shown you we have the rules here. And if you just hit evaluate you would get this this output down and that really is the
01:16:43 [W] Simplest case this is really all that you need to know about about re you have your input data. You need to provide it as chasing. Obviously you have your rules here things like within a weeks a year time.
01:16:58 [W] To check in this case without requiring for this one up lever one here.
01:17:04 [W] that might involve others and I also wanted to show off awesomeness in terms of some build in functions this case. It's just simple time related data.
01:17:16 [W] There are many many more things crypto and many many more built-in functions that they can use in a very high level so definitely lends itself for security purposes, but you can represent any kind of general purpose.
01:17:28 [W] Policies and you have a very generic way how to enforce it. Now I can imagine that you'd say whoa, you know riding these these rules that that looks not very easy and unless you have a
01:17:43 [W] Background in prologue or exit said he might not find it very easy.
01:17:49 [W] So good news in the context of communities.
01:17:51 [W] You don't have to write those things yourself.
01:17:58 [W] You can use Open Gate Keeper Opa gatekeeper essentially does the separation of concerns or separation of Duties approach here.
01:18:07 [W] It allows you as the end user who want just wants to apply these kind of policies to use good old custom resources.
01:18:13 [W] Has essentially just apply cuticle apply something like this here and then someone else an expert in writing these regular rules writes these templates and opic a gatekeeper will take
01:18:28 [W] That input and enforce it so you don't even need to learn Rico rules in order to benefit from that.
01:18:37 [W] I see we're running out of time.
01:18:40 [W] So I will quickly wrap it up. You just pointing out that we have gitops the main point if you want to try it yourself.
01:18:47 [W] That's why we put it at the end because we're not sure how can we get through all of that depending on your questions go to this getting started and and again, it's using kind such as we both teams.
01:18:57 [W] Straightforward.
01:18:59 [W] All right, I guess that's pretty much it.
01:19:10 [W] Would we have in terms of time? So we do want to do the wrap up so conclusion fed up. So heading back to to this.
01:19:13 [W] Do you want to just take a minute to say why get gitops is a good thing from a security perspective.
01:19:20 [W] Sure.
01:19:20 [W] Absolutely.
01:19:21 [W] Absolutely.
01:19:22 [W] Absolutely.
01:19:23 [W] Absolutely. Yeah.
01:19:29 [W] So the basic idea here is that rather than letting people developers whatever the role is a pops that change the cluster state in the sense of you know,
01:19:39 [W] Launching deployment service in Ingress is just volume, whatever giving them direct access to the coolest cluster your interface as a developer is get very often these demonstrations and see get help.
01:19:54 [W] We're in addition to your application.
01:20:08 [W] Whatever that might be written in Java or PHP you whatever you now also have all of your infrastructure related Yemen manifest, for example, Helm charts or whatever you have in get and if you want to do a change if you let's say
01:20:15 [W] Example want to change something in your deployment. You would issue a pull request to a git commit then something combination of boards and and human reviewers would look at that and say, yep.
01:20:30 [W] Okay.
01:20:32 [W] I'm going to accept that and merge it and then there is an ancient in the communities cluster that looks as an eye on the git repo and synchronizes the state indicate repo with what what is going on in the classroom. So that separation of concerns.
01:20:45 [W] S is a good security practice here very clear boundaries there.
01:20:54 [W] It's very clear, you know who requested a change who review it and approve the change also thinking in terms of auditing right? And it Point time you can go back into a previous good State and also in terms of if you think about the controls
01:21:07 [W] Has controls Etc.
01:21:12 [W] You have pretty much already in your environment setup, you know the excess to get and your workflows there who is reviewing at how we can use assigned to assist doing that.
01:21:23 [W] So it really lends itself to in the club knative set up to enforce good practices with communities.
01:21:32 [W] I strongly recommend to to have a look at that and if the surveys was very recent intermediate Surrey.
01:21:37 [W] The results are true half of the people asked so far as saying they're already practicing gitops.
01:21:44 [W] Oh, that's that's great.
01:21:45 [W] Keep it up.
01:21:45 [W] Amazing. So I think we just have a couple of minutes left if that and so yeah plenty more questions came into the psyche channel. So we'll work our way through that today and perhaps later on during the week
01:22:04 [W] And let's keep on the conversation with you know, it's always fun to have this have this kind of interaction.
01:22:15 [W] So yeah, keep using the that channel will be there all week. So do keep keep using it and you can get hold of the electronic copy of the kubernative security book that it's linked to
01:22:26 [W] You on the conclusion page with the tutorial website, which is pinned.
01:22:33 [W] Hopefully you've all found it by now.
01:22:34 [W] It's pinned in the channel.
01:22:37 [W] I think one last order of business.
01:22:43 [W] I believe the person who won the typo competition is Thomas Crispin.
01:22:44 [W] Hope I pronounced your name, but I hope that I am sorry.
01:22:49 [W] It's not natural.
01:22:54 [W] You'll be getting a physical. Thank you.
01:22:56 [W] Everyone for your time today and for your great questions and yeah, enjoy the rest of your week.
01:23:02 [W] Thanks a lot.
