Panel: Tales from the Edge: Is the Edge More Important Than the Service Mesh?: HCQH-5632 - events@cncf.io - Wednesday, November 18, 2020 3:52 PM - 37 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Why don't each of you tell us a little bit about what you do with the edge and servicemeshcon.
00:00:05 [W] We get a little bit of background for those people who aren't familiar with three famous faces.
00:00:10 [W] We've got on the screen and listen.
00:00:12 [W] Why don't you start because your name starts with a okay.
00:00:50 [W] Why don't each of you tell us a little bit about what you do with the edge and servicemeshcon.
00:00:55 [W] We get a little bit of background for those people who aren't familiar with the three famous faces.
00:01:00 [W] We've got on the screen and listen.
00:01:02 [W] Why don't you start because your name starts with a okay.
00:01:05 [W] So hi. My name is Alyssa.
00:01:06 [W] I've been at Google for about 13 years working on the GFE, which is Google's front line proxy.
00:01:11 [W] It takes in all Google's web traffic everything from Gmail to ads to web search.
00:01:15 [W] So it's pretty critical, but of Google's infrastructure, so I worked on that for
00:01:20 [W] A decade I launched htv-2 at Google.
00:01:22 [W] I launched hv3 at Google and thank you co got interested in this proxy called Envoy and I was kind of like why are you know, we spent a decade working on the GFE?
00:01:31 [W] you know why Envoy and started playing around with it and got really interested.
00:01:35 [W] It's just a beautiful architecture.
00:01:37 [W] It's super pluggable.
00:01:38 [W] And so I spent the last three years working on Envoy both trying to get it up to you kind of the Google level cloud reliability standards and also adding features and becoming a singer maintainer along
00:01:49 [W] away
00:01:52 [W] Fabulous.
00:01:52 [W] Thanks.
00:01:53 [W] So Lynn alphabetically will roll around to you and we'll let matte blush with with pride about Envoy as the last speaker soul in why don't you tell us a little about yourself and what you do?
00:02:04 [W] Okay. Great.
00:02:06 [W] Yeah, so I worked on sto for almost gosh a little bit over three years now, so that's my primary interaction with the edge.
00:02:18 [W] So you guys all know is too.
00:02:20 [W] Your has Ingress Gateway and egress Gateway for the part of the edge.
00:02:26 [W] So my primary role is still is contributing to Upstream.
00:02:31 [W] So I'm a maintainer on the project.
00:02:35 [W] You know, we spent a decade working on the GFE.
00:02:37 [W] you know why Envoy and started playing around with it and got really interested.
00:02:42 [W] It's just a beautiful architecture.
00:02:44 [W] It's super pluggable.
00:02:45 [W] And so I spent the last three years working on Envoy both trying to get it up to you kind of the Google level cloud reliability standards and also adding features and becoming a singer maintainer a long way.
00:02:58 [W] Fabulous.
00:02:59 [W] Thanks.
00:03:00 [W] So Lynn alphabetically will roll around to you and we'll let matte blush with with pride about Envoy as the last speaker soul in why don't you tell us a little about yourself and what you do?
00:03:11 [W] Okay. Great.
00:03:13 [W] Yeah, so I worked on sto for almost gosh a little bit over three years now, so that's my primary interaction with the edge.
00:03:25 [W] So you guys all know it still has inquest Gateway.
00:03:29 [W] And egress Gateway for the part of the edge.
00:03:33 [W] So my primary role is co is contributing to Upstream.
00:03:38 [W] So I'm a maintainer on the project.
00:03:41 [W] I contribute primarily to like user experience and also environments.
00:03:47 [W] I also serve on the technical oversight Committee of is still so it's been an interesting ride Vegas and so Matt
00:03:58 [W] Alphabetically last in a set of three I want you to reduce yourself. And of course probably everyone knows you but you should still say something for those few people who are watching who don't actually know of course.
00:04:12 [W] Thanks for having me.
00:04:13 [W] My name is Matt.
00:04:14 [W] I'm a software engineer at lift where I've been for five and a half years these days I spend about half of my time leading our infrastructure team at lift. So things like networking and kubernative. He's and deploys and all of those types of things.
00:04:29 [W] And then I spend about 50 to 60 percent of my time working on Envoy in the open source domain prior to lift. I was a Twitter where I built Twitter's Edge proxy. So that was actually my first main experience with the edge and you
00:04:44 [W] It's back at Twitter was what let me to build Envoy.
00:04:47 [W] And of course Envoy is used in a whole different number of domains from servicemeshcon stems to API gateways.
00:04:54 [W] So my experience spans all those domains.
00:04:57 [W] So do you three have some some real-world stories of putting these into practice to talk about how some of these things went?
00:05:08 [W] They went well or some of the places where maybe there were some things that you had to think some more about as part of that.
00:05:14 [W] yeah, I mean, I would say that that any migration comes with migration pain my new hire project at Google was lunching GF e 2 which was taking the proxy handling all of our traffic and hot swapping it to haproxy which of course, you know a thousand small differences
00:05:30 [W] Bunch of interesting debugging examples and Envoy has is no exception. Right like one of one prime example that we had early on was that because Envoy was written for each to be to it lower cases.
00:05:15 [W] Prime example that we had early on was that because Envoy was written for each to be to it lower cases all had her keys. Right which is hvt standard but we're dealing with Legacy traffic Legacy traffic often expects a ch3 1 1 style capitalization, right? You have a Content length header.
00:05:22 [W] It starts with a Capital C.
00:05:23 [W] It has a capital l and theoretically if you're following the spec which no one does you should be able to handle either casing but no one does right. So when you have say 20,000 Cloud customers, it's guaranteed that not all of them do it, right?
00:05:37 [W] Right. And so, you know, for example, there were a lot of internal debates as to how that Google should handle that an Envoy which were preempted by someone else running into it first and writing the camel case each b11 option so you can you can kind of work around that particular issue,
00:05:52 [W] for any migration there's going to be dozens of little impedance mismatches oub ordered the headers differently or I expected a space here between commas which with we hit internally and it just takes time to bug and we've done a lot of work in the last year for Envoy
00:06:07 [W] Easier and easier to debug what is actually flowing through the system what your data actually looks like when things are rejected why they are to try to at least ease the pain of that migration.
00:06:19 [W] Yeah, that's the really key point is that you know all of these systems theoretically exist on standards. But as a list of said, it's pretty pretty fuzzy, right, you know, it's and I think everyone runs into these issues and
00:06:34 [W] Tapping back to Envoy itself. And in terms of one of the original value propositions least at least compared to its open-source competitors is Envoy has really focused on the observability side of things.
00:06:42 [W] So so trying to better understand what's going on through metrics logging tracing things like that.
00:06:47 [W] And I think just given that you're going to hit not only all of these migration problems, but even apart from migration just trying to roll out a system just just a servicemeshcon.
00:06:59 [W] Measure any other component where you're dealing with a polyglot code base with 10 different languages and Frameworks, it gets super super messy.
00:07:08 [W] So I think that that is really the underlying Crux of it is understanding the things are going to break and actually is Lissa was saying focusing on the tooling and the observability and the Diagnostics to allow you to understand it is
00:07:23 [W] Heart so my guess is that the audience is listening to the panel.
00:07:25 [W] It's all of a sudden excited like give us some specific examples from the three of yous work so far of where this debugging sort of thing has worked or maybe not worked as well.
00:07:36 [W] I'll start by just saying that I'm going to be honest.
00:07:43 [W] It's very hard for me to remember the one exciting thing and by that, I mean I've just
00:07:50 [W] Just I've dealt with so many different problems and different bugs that they just they just kind of blur together that that that's that's just the way that it is and I would I would answer a slightly different question, which is going to be
00:08:05 [W] The end probably but these systems as we're talking about right now.
00:08:00 [W] They're so complicated like any time that you you don't have a service oriented or micro service architecture.
00:08:06 [W] It ends up becoming very tricky very quickly because of different languages because of bugs just just because of faults, right?
00:08:15 [W] I mean, it's just so many things can go wrong that my advice to people typically is don't don't do any of this unless you actually have to because it's very very painful, right so
00:08:25 [W] I think that to the extent that folks can look at the problems that they're trying to solve in terms of if they can limit. The number of application languages do that. Right? If you can limit the number of services do that if you can use a
00:08:40 [W] Grass do that right?
00:08:33 [W] It's like don't just don't Implement any of this.
00:08:35 [W] I think at a certain organizational sighs, you know that becomes unrealistic and you end up with Services you end up with an API Gateway and you end up with all of these things, but the problems in my experience and I'd be curious to hear from others. They're just
00:08:50 [W] They just never ends.
00:08:44 [W] I mean, it's just a never-ending array of bugs and it'd be hard hard for me to come up with anyone in particular.
00:08:52 [W] I mean, I would say go for it linbit. Well, go ahead.
00:08:55 [W] They're the kind of two classes of bugs are going to be you know controlled plane or did a plane right and and we've done a lot of work to make them easier to diagnose, right? So a lot of the time for control plane bugs you have especially for as Lynn said the configuration
00:09:11 [W] At least explains what you're doing wrong.
00:09:11 [W] Hey, you have filled a that means you need field b or this is out of bounds range.
00:09:15 [W] You're not setting a reasonable value, you know, maybe look at the docs for data plan again. I've personally done a bunch of instrumentation over the last year.
00:09:23 [W] So this morning I got into a bug report saying hey, you know connect isn't working when I try to do domain registry, you know, if I say match all wild card to means it passes through and if I say match Local Host it bounces and I'm like, oh no I didn't test this.
00:09:37 [W] Let me go.
00:09:38 [W] Let me go debug what's going on?
00:09:40 [W] And so I wrote an integration test and ran it and the debug detail said about not found. So that's great.
00:09:47 [W] I know that they're out match failed and the log said, you know that host: 80 didn't match and I'm like, oh, yeah, I wrote I copied what they did. I did localhost or host and the matter should be colon 80, right? It took me five minutes to debug it basically between
00:10:02 [W] And response card details, right?
00:09:58 [W] And so as you know, you ask kind of what are the common gotchas and what we've done because the unvoiced the actual core Envoy maintain our community is quite small.
00:10:07 [W] There's a group of devs who aren't maintainers, you know, who are who are awesome and really good at answering questions.
00:10:13 [W] But when we see questions like this happening over and over wires Envoy sending this response, you know, why is my config not working?
00:10:19 [W] We'll put up an example.
00:10:20 [W] So people can copy paste edit or you know, what we wrote a fact, you know, why is Envoy sentence response? Here's how you turn on these logs.
00:10:26 [W] Here's how you get the details here.
00:10:28 [W] Here's how you turn up Trace logging that that tend to at least give the common debug tools and hopefully, you know reduce confusion and or out of time.
00:10:38 [W] Yeah, I want to act on some of the what's just been said, I mean, it's definitely hard.
00:10:44 [W] I remember even early this year just the history of the project itself, right?
00:10:50 [W] We actually went back to from microservices to monolithic and because of some of the challenges are hard right some of the we had like four five six control plane components and we Consolidated into one single component because we find
00:11:05 [W] I want to act on some of the what's just been said, I mean, it's definitely hard.
00:11:04 [W] I remember even early this year just for Israel project itself, right?
00:11:10 [W] We actually went back to from microservices to monolithic and because of some of the challenges are hard right some of the we had like four five six control plane components and we Consolidated into one single component because we
00:11:46 [W] Enjoy the benefit of microservices.
00:11:49 [W] We don't have multiple languages and we had a lot of communication issue among our own microservices, which could be solved.
00:12:00 [W] They were just communicate through localhost and we would deliver and release all these components always together.
00:12:06 [W] So we actually went back to say, you know, we don't need microservices.
00:12:11 [W] We don't need to consume our own servicemeshcon.
00:12:16 [W] Now just having one single control plane componentconfig said I mean if you don't actually need it at the best might be just avoid it in factored form of our project perspective.
00:12:29 [W] We will amazed how many issues we have and how many issues we discover with Envoy?
00:12:37 [W] Oh, so it's just like, you know, we think you know the project like it still is almost 4 years and if you count the pre incubation, it's almost 5 years.
00:12:46 [W] An Envoy also being along around for a long time.
00:12:50 [W] But like Matt said I you know, it's just deep people have different scenarios and someday, you know people going to discover something new and this also regression and all that.
00:13:02 [W] So it's super complicated.
00:13:03 [W] I know one thing I would highlight is someone from all the street Trader costs Tony wrote a really good blog. You know when you have service a talk to service be do.
00:13:16 [W] Connection pool array the moment you inject the sychar.
00:13:22 [W] you're worried about like three connection pool.
00:13:24 [W] So you actually increase your chance of things might be going wrong and the most common problem in servicemeshcon 503 arrows or any of the timeout configuration if they conflict, you know, all these
00:13:39 [W] Men problem in servicemeshcon five or three arrows or any of the timeout configuration if they conflict, you know, all these tissue from your connection pool. You may just get a generic 503 and it could take a long time for you
00:13:44 [W] Simple you may just get the generic 503 and it could take a long time for you to troubleshooting and realize what might be wrong.
00:13:51 [W] Yeah, that's a great point. And actually if you were to push me to one of the most common issues that comes up over and over and over again is that in these architectures you wind up with this chain of proxies right?
00:14:05 [W] Just like Lynn was saying I mean you can have an edge proxy a second layer Edge proxy a service the sidecar some intermediary and often it's the timeout config.
00:14:14 [W] That ends up getting really messy and confuses people a lot.
00:14:18 [W] I'm particularly with protocols like HTTP 1 1 which don't deal with those timeout races very well that was solved and initially be too but we have a constant stream of issues that comment on bow and two other projects about why is it
00:14:33 [W] Other projects about why is it disconnecting and you have to explain that?
00:14:37 [W] Well, you have to actually configure the timeouts correctly across all the different layers.
00:14:42 [W] It's just it's very complicated avoid instead of a void because we're speaking to a knowledgeable audience out there.
00:14:50 [W] I want to poke at this little bit more and maybe learn a few lessons from the three of you about how to find those timeout problems the details. I mean I added this into Envoy, but I added it because it's one of our most powerful.
00:15:02 [W] Powerful debug tools for the GFE. So every single time Envoy sends a local response. It tags a specific detail that is unique across the code base. So you can literally set is a detail a maps to this line of code in this file, right so you can see exactly
00:15:17 [W] and if you chain those and headers, so in your in your response headers, you always say the details of this response was forged by the backend and the details of this one was whatever then either by looking at access logs are response headers if they make it to you, you can see exactly which proxy in the chain failed and
00:15:32 [W] Then you still have to the bug. Wait. Why did this one time out of these two not time out, but at least you've root caused, you know where it happened now why it happened?
00:15:39 [W] And I want to add you know, thanks to Armboy and servicemeshcon eject. These problems are actually surface a lot easier than used to write because now you can observe what's going on with your Microsoft.
00:15:53 [W] This is a lot easy so you can actually see maybe you have this problem I add tonight at just 0.5% while before if it's zero five percent.
00:16:03 [W] You may not even know and you may just leave with it.
00:16:06 [W] It's just because of the servicemeshcon and
00:16:09 [W] Platform like olive oil is issues as if it's to the user right away, so they actually have the chance to debugging and troubleshooting like a Lisa said, you know having like the debugging tool to figure out what Michael.
00:16:24 [W] And so that you can tweak that time out and maybe tweaked-out retry and to further configure your system to be to be more tolerant.
00:16:33 [W] What I would add to which is which is super interesting.
00:16:36 [W] is that when we when we raise a bunch of these issues to the user what I found personally and and this is there's a fair amount of irony here is that issues that a user may
00:16:51 [W] Previously, like very low rate issues. They now notice and they think it's a severe problem right and then they'll spend a bunch of time debugging it are asking questions and that's fine. I mean there's there's nothing wrong with you know, having all of this all of
00:16:59 [W] I'm trying to figure out what's going on.
00:16:56 [W] But the thing that I would add is with I would say with great observability comes great power and great responsibility. And what I've seen sometimes that people can get hyper focused on very small issues and
00:17:11 [W] Big picture in terms of the overall system reliability. So I think as operators of the system this is where what I was saying before I don't mean to keep saying don't use this technology.
00:17:21 [W] I'm just saying that it is a powerful system as you add on all of these layers becomes more and more complicated and I just think it's important to realize that there's a lot of intuition here. Like there's a reason that Alyssa has been
00:17:36 [W] 15 years, right?
00:17:34 [W] It's because there's a lot of experience that you gain from the way the patterns that things break and then being able to look at the big picture and try to understand is that really a big issue or not?
00:17:45 [W] So I would just add that it gets really complicated not even just the system but just trying to take in all of the inputs and understand should you even action on them?
00:17:57 [W] Right?
00:17:57 [W] It's like what you do alarm on should you care about this and that's where there's no
00:18:03 [W] My experience there's no there's no substitute for operational experience here and getting a team together who can operate these things whether it be something like sto or some other servicemeshcon API Gateway and just getting a feel for how
00:18:18 [W] They're it matters. And that just takes time.
00:18:15 [W] Yeah, I actually want to add on to that because that that is a huge problem. And that's not one that any proxy can self, you know, is that says you often have these really low rate of Errors right and low rate of error?
00:18:26 [W] That's not a big problem unless it's consistent a hundred percent error for some user on some platform in some country, right and it and it gets really hard to figure out.
00:18:35 [W] this a low rate of error but a hydrate for some class of users are some classified networks, and that is an art where rsr.
00:18:42 [W] You're amazing at that are a reliability Engineers the operations people just have developed that experience over time.
00:18:49 [W] I've picked up some over, you know, debugging some number of Google adages over some of them are decades. But but yeah, there's there's no, you know, there's a science to the basics. And the rest of it is all art and intuition that you develop over time.
00:19:04 [W] Other sort of key measures or thought processes might you imagine or I'm not imagine that you've seen for success or not success on going to servicemeshcon.
00:19:33 [W] Hey.
00:19:33 [W] We'll look at is what programming languages are they using, you know, they really have multiple programming languages or are they just primarily using one single programming languages like we have in is still with over control plane. We
00:19:40 [W] Primarily using one single programming languages like we have in is still with over control plane.
00:19:41 [W] We have six seven components while using the same language you so it didn't make sense for us. The third thing I would look at is, you know, are they actually operating the services by different people?
00:19:55 [W] They actually release the services on different schedule because that helps you make the decision to because the purpose of my chronosphere.
00:20:04 [W] Oh Services, go faster right release on different schedule. But if you are not really doing that, then you're not really enjoyed the benefit of microservices.
00:20:15 [W] So that's definitely a key criteria to also look at and then the first thing I think is important is, you know, are they partner with somebody or are they actually consume open source directly? How much you experience the
00:20:30 [W] Have to consume open source Technologies.
00:20:33 [W] They're just consume our boy and it's still another open Technologies out there because it does room require a lot of experience in adopting open source technology. So hopefully they have some experience in
00:20:48 [W] I would have them easy the transition to adopted these Technologies.
00:20:52 [W] I guess one thing I would add is not just considering team size but also from larger companies considering where you can join forces LED mention the control plane.
00:21:02 [W] Well, if you know, if you're one team of five people, yeah, it doesn't make sense to renewed Vigor services and run your own control play like that.
00:21:09 [W] that would take all of your people. But if you have a bunch of different small teams across a company right where you could join forces and have you know, one operations team that that kind of handled that and had an escalation path and build those muscles and a bunch of small teams lenses.
00:21:22 [W] Drink it that can be a really powerful model.
00:21:25 [W] We tend to have a very strong infrastructure teams at Google and I've been surprised kind of repeatedly working on the other way side.
00:21:34 [W] How many companies kind of our more siloed right and have different teams kind of all rolling their own? And again, it's harder it's harder to work together right to be able to coordinate, you know, what rollout schedule make sense and what you know what the security release
00:21:49 [W] Infrastructure teams at Google and I've been surprised kind of repeatedly working on the other way side how many companies kind of our more siloed right and have different teams kind of all rolling their own and again, it's harder
00:22:22 [W] Team, but if you can do it you can avoid a lot of repeated work and you can really build up those the strong teams with deep expertise.
00:22:30 [W] It can be really helpful.
00:22:32 [W] Obviously not relevant to the small startups that don't have teams to actually do that. But but for you know medium and large companies for sure.
00:22:39 [W] sure. It's something to think about.
00:22:42 [W] Yeah, those are both super answers. The only the only other thing that I would add is that when it comes to the API Gateway side of things North South or the servicemeshcon asked I would also ask people to really look at a what what
00:22:57 [W] Trying to solve and by that. I mean is your system actually actually real time, right? It's like do you have to have low latency?
00:23:04 [W] Right?
00:23:04 [W] It's like do you have to have synchronous API calls and sometimes stepping back and trying to understand could you develop your system on top of pub/sub? You know, could it be lossy, right?
00:23:16 [W] It's like there can be many other architectural patterns, which you're just much simpler than trying to get a giant micro service. Call Grafton.
00:23:26 [W] A work it's a very complicated technical thing.
00:23:29 [W] that is not theirs not easy to do.
00:23:31 [W] So my advice from people even apart from the you know, stay on your monolith don't adopt microservices if you can you know is is to look at the actual application use case and say
00:23:47 [W] Just much simpler than trying to get a giant micro service call Grafton actually work. It's a very complicated technical thing.
00:23:50 [W] that is not theirs not easy to do.
00:23:52 [W] So my advice from people even apart from the you know, stay on your monolith don't adopt microservices. If you if you can you know is is to look at the actual application use case and say do I
00:24:35 [W] Communication does it have to be synchronous? Are there simpler ways that I can actually do this the tend to be easier to debug a bit more reliable.
00:24:43 [W] So that would be my other main high-level piece of advice.
00:24:49 [W] Fabulous.
00:24:50 [W] Well, I think that that that bit of advice that the three of you have just offered is is great for the the audience who's been listening to us to go away with about the size and the expertise and the looking at the architecture issues.
00:25:04 [W] I'll give you all a final chance to say anything that you wanted to say other than thanks and you know so long and thanks for all the fish.
00:25:12 [W] But and then we'll what we'll call it good and answer questions from the audience during.
00:25:18 [W] During the actual panel broadcast. So is there anything you'd like to like to sum up with their listen?
00:25:27 [W] Um, I guess I would say that if if you have done the analysis Matt suggested and decide that that Microsoft has is the way to go or Envoy for your Ingress traffic or you decide to adopt sdu is a recommendation to just really try to get involved in the community.
00:25:42 [W] It's open source has an amazing thing because you can be like, hey, I don't have to write my own proxy.
00:25:46 [W] I'm just going to take this one and you can just take it and use it and that's great and many many people like go with that model and it works fine for them.
00:25:54 [W] I've seen a lot of people kind of come in late in the game and be like wait, I need help figuring this out or how to add this thing or I want to do this flourish. And if you get involved in the communities early both is T an Envoy have really strong developer communities.
00:26:07 [W] We've got a great maintainer team there is, you know active slack channels and if you get involved,
00:26:11 [W] The more you get involved in the community the faster get your questions answered.
00:26:14 [W] The easier it is to get your features landed the easier it is to basically get everything working the way you want to work.
00:26:20 [W] So it's it's this kind of boot strapping thing. We're like you put in that initial effort and you get way more out so it's an option not everyone has the time to do it.
00:26:28 [W] not everyone has a Cycles to do it, especially if you're early on in a start-up, but once you get to the point where you have some Breathing Room, it really is valuable to be proactive and just reach out and be like, hey, let me help out with a little bit of tech dad and then I get my brownie points and now people answer my
00:26:42 [W] Investor because it's all volunteer work, right and and the more you volunteer to help the more people are going to volunteer to help you and you know, we always love him too.
00:26:54 [W] How about you Linda?
00:26:55 [W] I would say, you know definitely spend time to understand whether you need servicemeshcon.
00:27:04 [W] Which project you are going to land?
00:26:59 [W] I definitely agree with Alex.
00:27:01 [W] I you know spend that time to work with community and don't be frustrated because we are all volunteers to so sometimes it might take a little bit patients take a little bit P. You may need to attend the community meeting or even a workgroup meet him.
00:27:14 [W] So don't be shy we would definitely welcome contributions.
00:27:21 [W] Yeah, I don't have a ton to add other than those two two statements which are great.
00:27:26 [W] I think the only thing that I would add is that I've talked about it during this panel is that I think as an industry, we're not that great evaluating what I call total cost of ownership, you know, and that's looking at how much would it cost if I'm going to pay a vendor or how
00:27:41 [W] Cause if I use this open source, and and I have to actually maintain it myself or if I'm going to make my own control plane or all of these things.
00:27:43 [W] So I just really encourage people to when you're trying to solve your problems to look at the entire menu of options, you know from using open source directly to paying a vendor to hiring people internally and
00:27:58 [W] And you have options, you know from using open source directly to paying a vendor to hiring people internally and try to be realistic about what the cost actually are. And that's where I think things
00:28:05 [W] Realistic about what the cost actually are and that's where I think things will wind up in a much better place for most work most organizations if they spend more time doing that because then they'll have less surprises later
00:28:21 [W] Well, I'm going to summarize your three final points with I'm going to say that Matt said look for simpler options, which I like as a general life philosophy. And definitely when you're writing software lenses Ed carefully consider your requirements which again I think
00:28:36 [W] Thing when you're doing software and Alyssa said make friends early, which I think we all learned when we were in kindergarten.
00:28:40 [W] And with that. I thank all of you for being part of this panel.
00:28:44 [W] I think it's going to be great when we finally do broadcast it and keep gone.
00:28:48 [W] And so thanks so much for being part of it.
00:29:07 [W] So there are some questions over in the Q&A section and just sort of why priority if you could start maybe at the top maybe linbit few could see them and looks like the first one looks like something you can answer.
00:29:24 [W] Yeah, so the first question is I read it out loud.
00:29:27 [W] Is it best to plan for company-wide servicemeshcon cluding the traditional infrastructure like virtual machines at the start of cloud your knee or after it's getting complicated
00:29:43 [W] Interesting question over the say, I mean you really have to look at your requirements is a back to what we were discussing. Right? So you have to look at whether you really need servicemeshcon.
00:29:55 [W] And what is servicemeshcon lining for you what benefits are you getting out of servicemeshcon determine that right?
00:30:05 [W] So you have to look at is there any function of servicemeshcon? For example, many of our users are adopting.
00:30:11 [W] Servicemeshcon cuz they want to secure the communications doing the encryption.
00:30:18 [W] They don't want to worry about the rotation of that key and certificate that's when they have a strong case.
00:30:27 [W] So you really have to look at your scenarios and the benefits out of the servicemeshcon.
00:30:41 [W] Like is co dot supporting vm's and Cuban Daddy's. So definitely I think at the early stage it would be good to get a feeling of the servicemeshcon of wise and some of the challenges
00:30:57 [W] Encounter and I think that would also help you make the decision whether you know service specialist the right way for you.
00:30:58 [W] Great so Matt, why don't you take the next one?
00:31:02 [W] Which starts with the is there one place?
00:31:08 [W] Let's see.
00:31:09 [W] Is there one place to see all the issues The Operators face that next adopters can come by and look and understand what just happened.
00:31:18 [W] Well, I really wish that was true.
00:31:20 [W] I don't I don't think there is and I you know, I think this is one area where we could do better from for a project and open source perspective. And I know you know, lots of people have tried different
00:31:35 [W] Can come by and look and understand what just happened.
00:31:29 [W] Well, I really wish that was true.
00:31:32 [W] I don't I don't think there is and I you know, I think this is one area where we could do better from for a project and open source perspective. And I know you know, lots of people have tried different
00:32:02 [W] In terms of GitHub search and stack Overflow and you know, it's a slack and it's a pretty endless problem in terms of how people can figure out what issues people faced in the past and and how to avoid them.
00:32:15 [W] So I honestly wish there were a better answers here.
00:32:19 [W] I don't think we have great answers.
00:32:21 [W] would always encourage people to obviously search for existing issues or look for previous conference talks, you know search search Slack
00:32:32 [W] and see if there's people that you know that have had similar issues and I think from a community perspective at least speaking from Envoy.
00:32:40 [W] I'm always happy to connect people that might be working on similar things.
00:32:44 [W] So for you know for companies that are at a particular stage of their Journey.
00:32:47 [W] I'm happy to connect people with other other folks that might have things to add.
00:32:54 [W] Fabulous.
00:32:55 [W] Thanks, man.
00:32:55 [W] And then Alyssa, I think that the question that starts with do you are you involved in SMI was typed in when you were talking?
00:33:06 [W] So I'm guessing that question is for you.
00:33:16 [W] Well guess I guess Alyssa's sound does not work then Lynn.
00:33:25 [W] How about maybe you can answer for Alyssa?
00:33:28 [W] The question that starts with do you are you involved in SMI was typed in when you were talking?
00:33:36 [W] So I'm guessing that question is for you.
00:33:47 [W] well
00:33:48 [W] guess I guess Alyssa is sound does not work then Lynn.
00:33:56 [W] How about maybe you can answer for Alyssa?
00:33:58 [W] Yeah, sure.
00:34:00 [W] So for those of you not familiar what I semi is is servicemeshcon interface, right?
00:34:06 [W] So I asked them I defines at least attempts to define the standard interface for servicemeshcon which includes like traffic routing. It includes safely.
00:34:18 [W] observability API I would say the envoy and it's geo-print ejects are not so much like directly involved with us on my but we do produce
00:34:33 [W] For servicemeshcon, T includes like traffic routing. It includes safely. Observability API, I would say the envoy and it's geo-print ejects are not so
00:34:52 [W] there are adapters from as I my project that provides integration with sto because the the intention of a semi is providing like a standards or among different servicemeshcon
00:35:07 [W] Chance and it still is certainly one of the popular servicemeshcon out there.
00:35:12 [W] So there's a adapter to to integrate is still with the SMI API by the SMI community.
00:35:25 [W] All right or Allis. Are you back on know if she's not so another question came in?
00:35:34 [W] So maybe maybe Matt you could take a look at it here. It starts with we have an API manager.
00:35:44 [W] Sure. We have an API manager on top of a kubernative platform running sto as a servicemeshcon douching.
00:35:53 [W] We Face some issues for being on top of the iceberg.
00:35:56 [W] So how do you recommend keeping updated without I'm assuming complicating the operations.
00:36:05 [W] I'm going to infer that top of the iceberg means running with all this modern cloud data technology.
00:36:13 [W] I'm not I'm not exactly sure what is being referred to your question.
00:36:18 [W] Yeah, you got all these proxies you were talking about right?
00:36:22 [W] We're cake of all these proxies and you know, you're at the very top of that whole thing.
00:36:26 [W] Yeah.
00:36:27 [W] That's a that's a tough one.
00:36:29 [W] But this technology unless you're prepared to support it and debug it.
00:36:34 [W] I you know, I don't know what to say other than that is I think it's important to understand what the purpose is of every piece of your stack and use as few features as possible and be prepared to debug and if that's not possible
00:36:49 [W] You wrap the features outdoor pay a vendor.
00:36:45 [W] don't you know, I don't know of any better solution than that.
00:36:50 [W] Yeah, fabulous and then someone commented there on the in the Q&A with not really a question, but they said and make sure you stay up-to-date with the latest releases of all of the pieces of your of your layer cake, which I think is a Wise Wise.
00:37:06 [W] Pieces of all of the pieces of your of your layer cake, which I think is wise. Why is answer
00:37:12 [W] So I think we've run through all of the questions that people have typed in on the on the platform here.
00:37:19 [W] I'm not seeing any additional ones and I'm also looking over on the slack channel that Cube Khan has for select Channel and I don't see any questions over there.
00:37:27 [W] So I say thanks to the three of you again and thanks to all of the audience for coming in and listening to this panel and I hope the rest of the cube Khan talks are as is fabulously interesting as this one has been
00:37:42 [W] And see guys all around.
00:37:47 [W] Thanks for having us.
00:37:52 [W] Thank you.
