The Open Source Revolution: How Kubernetes is Changing the Games Industry: EXZW-2181 - events@cncf.io - Wednesday, November 18, 2020 3:52 PM - 40 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Hi there.
00:00:00 [W] I'm John Green. And today I'm going to be talking about how kubernative use is changing the games industry.
00:00:46 [W] Hi there.
00:00:47 [W] I'm Don green. And today I'm going to be talking about how kubernative use is changing the games industry.
00:00:55 [W] So I'm headed platform a small game Studio out of London England called Nats P games and we've built and launched a mobile MMO in just 6 months and the head of platform and let's peek now.
00:01:07 [W] What's that sounds impressive it basically means I'm a team of one the only platforming or infer engineer.
00:01:12 [W] This is the rest of the studio mainly made up of artists both 2D and 3D small amount games engineer's and a commercial team and as I've said in just 6 months, we're going to take an idea from
00:01:25 [W] Exception all the way through to launch today.
00:01:28 [W] I'm going to talk about how and why we use kubenetes along with open source Technologies for underlying infrastructure to launch a game in such a short period of time.
00:01:37 [W] So we're going to talk about why speed matters, especially for free to play online games.
00:01:45 [W] We're going to look at the infrastructure of games and what the component parts are that make it up then when we look to use kubenetes what were the challenges with this?
00:01:55 [W] Yes, thankfully.
00:01:57 [W] there was a solution and this was a going as an open source project. And also how we can use open source and communities to empower others within the studio to help them build the game faster.
00:02:10 [W] So how long does it feel it take to build a game? This is a game. You probably all heard of World of Warcraft released by blizzard.
00:02:17 [W] It's like about 30 million subscribers, which pay nine dollars a month.
00:02:22 [W] So it's got good Revenue.
00:02:25 [W] It basically means I'm a team of one the only platform it or infer engineer.
00:02:28 [W] This is the rest of the studio and mainly made up of artists both 2D and 3D small amount of games engineer's and a commercial team.
00:02:38 [W] And as I've said in just 6 months, we're going to take an idea from conception all the way through to launch today.
00:02:45 [W] I'm going to talk about how and why we use kubernative along with open source Technologies for underlying infrastructure to launch a game in such a short period of time.
00:02:55 [W] So we're going to talk about why speed matters, especially for free to play online games.
00:03:01 [W] We're going to look at the infrastructure of games and what the component parts are that make it up then when we look to use kubernative.
00:03:10 [W] What were the challenges with this?
00:03:13 [W] this? Thankfully there was a solution and this was a going as an open source project. And also how we can use open source and communities to empower others within the studio to help them build the game.
00:03:24 [W] Is that so how long does it feel take to build a game?
00:03:29 [W] This is a game.
00:03:31 [W] You've probably all heard of World of Warcraft released by blizzard and it's pretty good about 30 million subscribers, which pay nine dollars a month.
00:03:38 [W] So it's got good Revenue.
00:03:40 [W] It was also released originally as a boxed game and you paid an initial fee to buy the game and this actually took around four to five years to build and get out to launch and even after that they instill constantly updated it with patches.
00:03:54 [W] Expansions.
00:03:56 [W] I think the latest want even took about two years to build in itself.
00:03:59 [W] Then we start to look at something like this.
00:04:02 [W] This is brawl Stars by Supercell and this is a free-to-play 3vs3 battle game.
00:04:07 [W] It's probably a little bit complex but different roles for different ways of playing and it's got a lot of different content.
00:04:15 [W] However, supercell probably took around six months to build this game again after the launch.
00:04:22 [W] They probably tweaked it and made improvements after
00:04:24 [W] even though their players did
00:04:27 [W] how about free-to-play Games built on top of Snapchat?
00:04:30 [W] Well, this is bitmoji party.
00:04:32 [W] And this is quite a very simple game and you play as I said against other people, you know and Snapchat as a filter this police took a really small team about three months to play the infrastructures all there is part of the Snap Chat platform.
00:04:44 [W] It should be quite easy and quick to build with this in mind.
00:04:48 [W] Why does it why does speed matter?
00:04:52 [W] Well, we want this kind of reaction will make sure that it's fun to play for our players, especially in the
00:04:57 [W] Free to play market. So the quicker we get into our hands the quicker we find out if the games fun and if people continue to
00:05:05 [W] So what takes up the majority of the time?
00:05:07 [W] Well, actually it's building content.
00:05:09 [W] he's one of the NPC's within our game and then there's a small amount of time and for design production and kind of operations of the company and then 25% of times actually spent on Tech this includes the gameplay all the gameplay systems and
00:05:24 [W] Percent of times actually spent on Tech this includes the gameplay all the gameplay systems and things that build the game included within this 25% Is that hosting the infrastructure and the platform.
00:05:18 [W] This is where I fit in so with six months and again that needs to be built a new platform and what the my ideas firstly we don't want to build from scratch.
00:05:30 [W] The main idea was that we wanted to invest in any open source technologies that we could and
00:05:36 [W] Standing On Top of the shoulders of giants and also we want to try and make it easy for the game King to use this platform.
00:05:42 [W] We didn't want any friction for them when they were building out the game.
00:05:47 [W] After this, we'll look at the requirements.
00:05:50 [W] We've heard that we've got single engineer and six months.
00:05:53 [W] They're the two constraints.
00:05:54 [W] What do we need to be able to support? Well thousands of concurrently connected users doing thousands of requests per second resulting in hundreds of gigabytes of data that needs to be stored about the players and what they were doing on top of this we need to scale
00:06:10 [W] Games often a busier during the evenings and weekends and much much quieter during the day. So we had to have this elastic scalability.
00:06:18 [W] wanted to be in multiple locations. The closer R clusters are to our players the better naked see they'll get the which means the game will probably more enjoyable for them.
00:06:28 [W] them. We need to make sure that the platform is transparent to the team and the fact that it could evolve over time. We went didn't really want to lock ourselves into any choices early.
00:06:39 [W] on
00:06:40 [W] also, we have this idea that if we don't need to build it if we don't have to
00:06:47 [W] so let's have a quick look behind the scenes the infrastructure in the various components that make up an online game.
00:06:55 [W] First off the core of it is this idea of a dedicated game server.
00:07:00 [W] This is a single process where tens to hundreds of players will connect it stores the information about the world and constantly updates all those connected connected players about the world around them.
00:07:10 [W] It's basically running the simulation.
00:07:11 [W] For example, Sigma character was running around in the world and dancing and my client would send this up to the dedicated game server, which was then replicated back to all other connected players.
00:07:23 [W] Other underlying storage.
00:07:20 [W] This also means that in the future if we needed to we could switch out the storage for other systems if you
00:07:28 [W] Okay.
00:07:29 [W] So how do you get into an online game? The first step is authentication.
00:07:33 [W] You're going to go through a number of steps when you call it.
00:07:36 [W] Also three very right who you are where you're logged in from and send you back an authentication token.
00:07:42 [W] We actually use JWT for this from now you call in to a Matchmaker passing that token so that we can identify who you are.
00:07:50 [W] The Matchmaker them will often talk to a lot of the details in the back end to get information about the player what their experiences which things are doing.
00:07:58 [W] Time and eventually pass back the host IP and port number for the dedicated game. So that players going to connect to
00:08:07 [W] so when we actually Connect into a game server, the client actually uses UDP and it's actually transferring data backwards and forwards 30 times a second.
00:08:18 [W] This is quite a lot of data that's going backwards and forwards over the network from the client to the server. The dedicated server not only has to support that single player in that same process as we said a minute ago.
00:08:28 [W] and supports many players.
00:08:31 [W] One interesting thing to note here.
00:08:33 [W] is that at launch if an online games goes down is often not the dedicated game server that is under too much stress often.
00:08:41 [W] The client uses UDP and it's actually transferring data backwards and forwards 30 times a second.
00:08:50 [W] This is quite a lot of data that's going backwards and forwards over the network from the client to the server. The dedicated server not only has to support that single player in that same process as we said a minute ago.
00:09:00 [W] It supports many players.
00:09:03 [W] One interesting thing to note here.
00:09:05 [W] is that at launch if an online gauge goes down is often not the dedicated game server that is under too much stress often.
00:09:13 [W] We haven't scale tested either that or system or the matchmaking service both of these see a spike in traffic that they're not used to so with all this in mind why kubernative we're going back to the requirements. We need to support thousands of concurrently connected
00:09:46 [W] So with all this in mind why kubernative we're going back to the requirements. We need to support thousands of concurrently connected users. And we have thousands of requests per seconds. We also need to scale Up and Down based on the demand that we were seeing.
00:10:01 [W] We've seen that kubernative didn't really deal with this and even start to scale up to thousands of nodes and especially in lines of business applications.
00:10:09 [W] So hopefully we could take this and apply it to a game communities also runs anywhere we can deploy it into into any cloud provider or we can even use bare metal with this. It also allows us to standardize the technologies that we using both of the dedicated
00:10:24 [W] They're supporting services in the background. If all of these are running kubernative, we have a standard way of doing the majority of things along with this communities has a huge community of thousands of Engineers that if we run into any problems
00:10:39 [W] Be happy to help out.
00:10:36 [W] So was it just that easy did we just take our game server?
00:10:40 [W] Put it into a container and when it in Cuba Nettie's job done Tom takes a holiday for the remaining three months.
00:10:47 [W] Unfortunately not. The first problem we came into was containerd rising and real and real was actually first built in 95 with an engine for a first person shooter.
00:10:56 [W] The version we're using Unreal for was actually rebuilt in 2005. However, this being so old it's not like it's a cloud native.
00:11:05 [W] Location Locker in a human readable format and is no concept of things like metrics are distributed tracing.
00:11:12 [W] There's no documentation of you and how best to run this inside a container.
00:11:16 [W] Thankfully it can be cross-compiled from Windows into Linux.
00:11:19 [W] Linux. And so we're actually were able to get it into a container. However, try running as root or even the user and real and you're in for some serious
00:11:29 [W] So from here we try to run our game service deployment.
00:11:33 [W] This is the first thing we looked at deployments allows us to scale up and down easy.
00:11:36 [W] The other thing we need to do was because we are you doing UDP reaction wanted to connect straight into the host machine and Port map the host machine sport into the containers part.
00:11:47 [W] This seems easy enough so we could do that.
00:11:50 [W] We just avoided using services so we can scale up and have multiple Game Servers on different nodes. So that's fine but meshmark
00:11:58 [W] Host machine. However, the promise of Cuba Nettie's was more that we can run money many containers on the same node.
00:12:05 [W] How are this starts to become a problem if two containers on the same node are trying to map the same host poor wind up having Collision.
00:12:13 [W] So it's not just that easy to multiple containers mapping to their same host Port. We need to think of another way of doing it or some kind of clever infrastructure between to make sure that ports mapped to different ports that are exposed to the internet.
00:12:28 [W] Next what about scaling scaling the pods like scaling up quite easy just add more pods.
00:12:34 [W] This isn't going to affect anyone that's connected into a dedicated game server.
00:12:38 [W] However, when you come to scale down, how do we guarantee that?
00:12:41 [W] We're not scaling down a pot that's got players connected.
00:12:45 [W] This is definitely one of the bigger issues. It also is an issue. If you wanted to upgrade our game server if we deployed a new image version this would also result in all the containers.
00:12:57 [W] in restarted into that new version
00:13:01 [W] thankfully open source came to our rescue.
00:13:04 [W] There's a project out there called a donor's you can go to again as dr. Dev to find out more about it and it allows us to host running scale dedicated servers on top of kubenetes.
00:13:14 [W] This project was actually built by Ubisoft and Google to help you soft actually scaled their own game servers on top of Kuma Nettie's.
00:13:22 [W] Definitions which make game serves a first-class citizen of kubernative.
00:13:16 [W] He's and that just by acute Kudo here.
00:13:19 [W] You can see the llamo. I know everyone loves yellow. So it wouldn't be a cumulative presentation without a bit and hear all we've done is specify the image.
00:13:28 [W] We want our game server to be and this will pull it down from the container registry and at the top we've actually said that we want to map the container Port here.
00:13:37 [W] We have two of the default in the beacon. And so 7777 is dynamically macstadium.
00:13:41 [W] mapped to the host machine and this will see in a minute allows us to turn that port on the host machine from the point we have in the container to an arbitrary Port that is then exposed to the internet along with this Argo neighs gives us a
00:13:56 [W] How's the like the dedicated server to actually talk to kubernative Intel it about various things that's happening within the game.
00:13:52 [W] So you could communicate out from your game via the you going to sidecar with some kind of SDK when we started using a going as we realize that the SDK wasn't quite where it needed to be.
00:14:03 [W] So we internally have built rebuilt our own version.
00:14:06 [W] what we quickly decided to do was give this back to the community. We're very strong Believers in open source and not just about using open.
00:14:14 [W] Technologies but contributing back so that collectively everyone can improve together.
00:14:21 [W] What else does Sam again?
00:14:23 [W] This gives us and it gives us the concept of fleets.
00:14:26 [W] Again.
00:14:26 [W] This is another custom resource definition, which is basically a collection of Game Servers.
00:14:30 [W] It helps with allocation of users to the dedicated game server, and we'll see that in a moment also got different ways of being able to scale we can scale the game servers over a number of nodes either using
00:14:46 [W] Distribution method whereby all the games that are launched on a single node first or a distributed method. You can see at the bottom here.
00:14:41 [W] Whereby you scale out two different nodes in a route almost round robin fashion along with fleets.
00:14:47 [W] That is a fleet autoscaler. This allows us to say that we want a maximum of 10 game service in this Fleet and we always want to have say two to Game servers that are warm ready to accept players and each
00:15:01 [W] time the game servers move through different stages. This would allow us to spin up more and keep more warm for players coming in afterwards.
00:15:10 [W] So fleets are collection Game servers and this will help us scale up as you've seen in dispute over different ways over nodes. However, it will also help us when scaling down and making sure our players aren't disconnected from their dedicated Game servers to see this we have to
00:15:25 [W] Bit more of the life cycle of what happened to our dedicated Game servers.
00:15:20 [W] So here we are we start and as a pod created the sidecar actually allocate support from the host machine.
00:15:26 [W] So now we are instead of having the port 7777.
00:15:29 [W] We've mapped it to 7112 and this point the container is running it goes into a scheduled state.
00:15:39 [W] From here.
00:15:40 [W] it's over to the game server itself. The game server at this point is responsible for putting telling again is when it is ready to start accepting players. And the reason why this is you could actually be loading the number of Assets in the back hydrating some kind of state from a database.
00:15:55 [W] For some long computation to happen before you want to accept players.
00:15:50 [W] So when it finally says this in ready State this is when we can now start directing players to it.
00:15:59 [W] As you said earlier players come in through a Matchmaker.
00:16:01 [W] So the first thing the client will do is or going to the Matchmaker and say I want to find a server to connect to at this point.
00:16:09 [W] I'm a Matchmaker actually calls into a number of back-end Services gets information about the player and then asks and you're gonna say Pi is internally to allocate it a game server what this does is Gomes will actually talk to the fleet and
00:16:25 [W] Which too much game-saver to allocate this will then put the game server into an allocated State and return the IP address of the host and the port number where the player should connect to whilst. It's in the allocated State.
00:16:31 [W] This is kind of one of the most important parts or scaling down and we'll see why in a minute but this effectively saying that either a play is about to connect or has connected.
00:16:40 [W] So here we can see the client connects the UDP into the the host machine host Port into the container.
00:16:47 [W] So now the container is allocated and we can see that we have a happy user playing again.
00:16:56 [W] Finally the after planes disconnected and the game server is no longer need anymore.
00:17:02 [W] We need to scale it down.
00:17:03 [W] This is done by the game server itself saying I've got no more players left.
00:17:07 [W] I cleaned up saved all the data that I needed to I can actually shut down in doing so it calls out by the SDK again signaling to a going is to clear it up and the Pod will be replaced by another one which are going to ready state to accept more.
00:17:23 [W] So from here, let's have a look what happens if we scale up the fleet and set the number of replicas to 6, you can see that there are a number of different pods running there.
00:17:32 [W] These are actually Game servers and so which Port there much on the host machine and how long you been running so great.
00:17:40 [W] We scaled up and what about if we try and scale down all the way to zero.
00:17:44 [W] Scale of feet up to six replica down to zero replicas.
00:17:44 [W] However, it's taken all of them down apart from the game's over. There was allocated.
00:17:48 [W] This is very important in this is why going this helps with scaling up and down Game servers. It knows the players are connected to This Server so won't destroy it or move it from the machine that's on doing so would obviously end the session for the player and result in an unhappy experience.
00:18:04 [W] So we don't only have to run a single Fleet within our cluster and what we actually do is allow devs tours in a separate Fleet. All our lives inside Nats Peak can have a fleet of their own and at any point in time they can actually deploy into this Fleet.
00:18:20 [W] The same infrastructure as our players are and what's there talking to the same data services effectively, testing a new version of the game in production alongside of the running customers.
00:18:22 [W] What so what is it? What is it going to give us? Well, we've seen that it's the ability to map container ports to host ports.
00:18:17 [W] This is in a dynamic way.
00:18:19 [W] It's protected us from players or scaling down or upgrading the version of the game server.
00:18:25 [W] It's going as multiple fleets so that our developers can run in the same infrastructure as our consumers and it gives us the ability to Auto scale up and down and keep a number of warm servers for us from here.
00:18:39 [W] an SDK which we can talk to the platform to signal.
00:18:42 [W] Statesman
00:18:44 [W] so finally what I want to talk about is how this platform undergo owners along with some other open source Technologies Empower our team what we want to make sure that building this platform.
00:18:55 [W] We made it easy for a team the team to run on top of the infrastructure.
00:18:59 [W] We have gameplay programs and artists who aren't familiar with infrastructure and especially not familiar with kubernetes.
00:19:05 [W] So you wanted to make the experience as transparent as possible for them. So they could keep up this quick Cadence of the first step in this journey is making sure that they could
00:19:14 [W] Lee build-out client and the server whenever they wanted.
00:19:18 [W] So we're actually using GitHub actions to this and they can signify which Fleet they want to have the client connect to you can signal what brunch it comes from and they can do the same with the server want to do this for the client.
00:19:31 [W] You aren't familiar with infrastructure and especially not familiar with kubernetes.
00:19:34 [W] So you wanted to make the experience as transparent as possible for them.
00:19:38 [W] So they could keep up this quick Cadence of the first step in this journey is making sure that they could automatically build out the client and the server whenever they want it.
00:19:48 [W] So we're actually using GitHub actions to this and they can signify which Fleet they want to have the client connect to you can signal what brunch it comes from and they can do the same with the server.
00:19:59 [W] I want to do this for the client. It's actually uploaded.
00:20:01 [W] It and they get a notification on their device and you can automatically then download that client and connecting to a game server.
00:20:08 [W] However, we still haven't deployed the game's over into Kuma employing into communities was one of the areas which I especially real head scratcher for a while and then I thought about what some of the Technologies are out there gitops.
00:20:21 [W] It was the answer for us effectively allowing us to take advantage of get but more specifically take advantage of the fact that get her van gitlab heavy.
00:20:31 [W] User friendly UI.
00:20:33 [W] So the artist can easily go into the UI change the version number and not have to worry about what happens with the infrastructure in the background in doing so, they create a pull request which is accepted by one of the other team members and within minutes.
00:20:45 [W] They've got the new version of the server running inside a fleet on the same production Hardware by our customers are
00:20:53 [W] this allows them to really speed up and iterate fast on building out the game.
00:20:56 [W] So we've got gitops for deployment.
00:20:59 [W] We've got an automated build system that pushes our clients. We also have a Supporting Cast of other things which helped the game engineers and artists ensure that the game is being built in the correct way.
00:21:08 [W] We use things like see advisor to ensure that we have the correct metrics and CPU memory utilization which goes into Prometheus and eventually displayed to them in Griffon Anna again. This is just another website that they go to we've hidden all the magic away so they don't have to
00:21:22 [W] Incentives with this and similarly with logs.
00:21:28 [W] I mentioned earlier the real has human readable logs.
00:21:31 [W] With logs, I mentioned earlier the real has human readable logs.
00:21:36 [W] We use a tool called Vector to pass these logs out and ship them into elastic search for to eventually be displayed to the user.
00:21:43 [W] This means that the the team don't have to worry about tailing logs and kubernetes or worrying about how to use different command line tools keeping in a web interface means it's really easy and simple for people to use so what we've been able to
00:21:58 [W] Develop within six months communities has given this ability to build us a new can be deployed anywhere. As I said in any location any cloud provider or even on bare metal with the with the addition of a gona's we can now scale up and down
00:22:13 [W] I think our players that connects the game.
00:22:10 [W] This is also given us the ability to support thousands of connected users are multiple instances of unreal.
00:22:17 [W] It's allow us to do it in such a way.
00:22:19 [W] That's low friction for the game to you. And it they then have a self-service way of applying and monitoring their game.
00:22:26 [W] Hopefully this actually speeds them up and doesn't get in the way of what they're trying to achieve.
00:22:31 [W] So what we learn kubenetes gives us some kind of standardization, especially with containers.
00:22:36 [W] We run and build our dedicated game server out in the same way. We do our Matchmaker and all our data services.
00:22:42 [W] So it's one standard approach to doing infrastructure.
00:22:45 [W] We've utilized open source to make sure that we can move fast.
00:22:49 [W] We didn't have to build we didn't build anything that we didn't have to also the open stores Community adds to our team.
00:22:55 [W] They really allowed us to move fast and can help us whenever problems occur.
00:23:00 [W] Well the news and some of this homegrown and custom also empowering our people using the platform inside. The studio is really important if it gets in if it kubernative gets in the way of us building the game.
00:23:14 [W] We weren't ready to release it in the time frame we need
00:23:18 [W] So what we looked at today, we talk through why speed matters in the games industry.
00:23:22 [W] It's about getting into the hands of the users and finding what the fun experience is.
00:23:26 [W] We've looked at the introduction of games and some of the key Parts.
00:23:30 [W] And when running them inside communities, especially with just butter vanilla deployments.
00:23:33 [W] However, we have utilized open source, especially with a bonus that is helped us overcome these obstacles map the host ports to the container ports and scale up and down with ease.
00:23:45 [W] And finally we looked at how using open source and specifically gitops can really empower the people on the team.
00:23:53 [W] Thank you very much for listening today. And if you have any questions, I'd be happy to answer them.
00:36:14 [W] Hi there.
00:36:15 [W] I'm John Green. And today I'm going to be talking about how kubernative use is changing the games industry.
00:36:23 [W] So I'm headed platform a small game Studio out of London England called Nats P games and we've built and launched a mobile MMO in just 6 months and the head of platform and Nats Peak now, what's that sounds impressive it basically means I'm a team of one the only
00:36:38 [W] Just six months and they had a platform and Nats Peak now that sounds impressive.
00:36:43 [W] It basically means I'm a team of one the only platform it or infer engineer.
00:36:47 [W] This is the rest of the studio and mainly made up of artists both 2D and 3D small amount of games engineer's and a commercial team. And as I've said in just 6 months, we're going to take an idea from conception all the way through to Launch.
00:37:02 [W] Engineers and a commercial team. And as I said in just 6 months, we're going to take an idea from conception all the way through to launch today.
00:37:12 [W] I'm going to talk about how and why we use kubernative along with open source Technologies for underlying infrastructure to launch a game in such a short period of time.
00:37:21 [W] So we're going to talk about why speed matters, especially for free to play online games. We're going to look at the infrastructure of games and what the componentconfig
00:37:32 [W] Parts, are that make it up? Then when we look to use kubernative what were the challenges with this?
00:37:40 [W] Thankfully there was a solution and this was a going as an open source project.
00:37:43 [W] And also how we can use open source and communities to empower others within the studio to help them build the game faster.
00:37:54 [W] So how long does it feel it take to build a game? This is a game.
00:37:58 [W] You probably all heard of World of Warcraft released by blizzard.
00:38:01 [W] It's pretty good about thirteen million subscribers, which pay nine dollars a month.
00:38:05 [W] So it's got good Revenue.
00:38:07 [W] was also released originally as a boxed game and you paid an initial fee to buy the game and this actually took around four to five years to build and get out to launch and even after that they and still constantly updated it with patches and expansions.
00:38:23 [W] The latest one even took about two years to build in itself.
00:38:26 [W] Then we start to look at something like this.
00:38:29 [W] This is brawl Stars by Supercell.
00:38:31 [W] This is a free-to-play 3vs3 battle game.
00:38:34 [W] World of Warcraft released by blizzard it's pretty good about thirteen million subscribers, which pay nine dollars a month.
00:38:41 [W] So it's got good Revenue.
00:38:43 [W] It was also released originally as a boxed game and you paid an initial fee to buy the game and this actually took around four to five years to build and get out to launch and even after that they instill constantly updated it with patches and expansions.
00:39:39 [W] 10 however, supercell probably took around six months to build this game again after the launch the pulley tweaked it and made improvements after seeing what their players did how about free-to-play Games built on top of Snapchat
00:39:54 [W] It merges party and this is quite a very simple game and you play as I said against other people, you know and Snapchat as a filter.
00:40:01 [W] This probably took a really small team about three months to play the infrastructures all there.
00:40:06 [W] It's part of The Snap Chat platform.
00:40:08 [W] It should be quite easy and quick to build with this in mind.
00:40:12 [W] Why does it why does speed matter?
00:40:15 [W] Well, we want this kind of reaction.
00:40:17 [W] want to make sure that it's fun to play for our players, especially in the free-to-play market. So the quicker we get into our hands the quickly planetscale.
00:40:24 [W] if the games Fern and if people
