Envoy Q&A: GQCT-9658 - events@cncf.io - Wednesday, November 18, 2020 4:56 PM - 34 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] I have this is working.
00:00:04 [W] Thanks.
00:00:06 [W] That's okay for those that are there.
00:00:10 [W] We don't have any slides and we don't have any video.
00:00:13 [W] So the goal here is just to have a open Q&A with Harvey and myself.
00:00:20 [W] So I don't know. Do you want to give a brief intro Harvey of who you are and then I can I can do the same.
00:00:27 [W] So I'm Harvey talk. I work at Google on my platform. So I think
00:00:34 [W] In taking home where you're making the cut of that phenomena zenshin also supporting Envoy is an open source project and seen a maintainer.
00:00:41 [W] I've been heavily involved in Envoy in a number of areas mostly around apis the xes protocol as well as security and some amounts of just basic infrastructure and so on that
00:00:57 [W] My name is Matt Klein.
00:00:38 [W] I'm a software engineer at lift where I started the envoy proxy project about five and a half years ago and then let it through open source a bit over four years ago and now I exploit my time about 50-60 percent of my time.
00:00:54 [W] My time about 56% of my time is open source work around Envoy and cncf and the cloud native ecosystem.
00:01:01 [W] And then the other 50% of my time is infrastructure leadership at lift.
00:01:06 [W] So again, this is a really an open-ended QA.
00:01:13 [W] So happy to talk about just about anything.
00:01:16 [W] So there's a queue a box.
00:01:19 [W] That's I think in that you can answer questions.
00:01:23 [W] Ian's or you can ask questions and and we can wait for some questions and just go from there.
00:01:31 [W] So hopefully hopefully folks will have a question feel free to type away.
00:01:47 [W] I guess if we don't have any questions in a minute or two, we can we can seed it with some other questions.
00:01:56 [W] Let's see if there's
00:02:15 [W] Would you like to take that hervey or would you like me to I think you are but you're better off taking that one.
00:02:20 [W] I mean, I think the answer is yes, but yes, I think young and more kind of the exact status of where we are because we had a question that previous maintain a separate around the documentation and stability and examples. I think that's what the community is really looking to actually
00:02:36 [W] Sure, so obviously quick an HTTP three at least the ietf version is still in the process of being ratified.
00:02:45 [W] I think it's very close quick obviously came out of Google.
00:02:50 [W] So Google has been using quick introduction for quite some time.
00:02:53 [W] We're very fortunate with Envoy.
00:02:55 [W] the team that shipped quick at Google also works on Envoy and historically the way that the code worked is in-toto.
00:03:05 [W] Was part of the chromium code base. So it was already open source, but in the interest of making it easier to consume in Chrome as well as Envoy as well as other projects, it's been moved out to a different Library called quiche and
00:03:20 [W] There's a team of people that I'm working on integrating that into Envoy for actually quite some time.
00:03:23 [W] I think they were working on it for six or nine months and I believe it's very close to an MVP.
00:03:28 [W] I think there are people that are that are actually standing it up now and I think one of the maintainers Greg is actually working on it now, not a Google so I think there are people that are pretty actively working on it.
00:03:40 [W] it. We don't have documentation yet, but the the support is planned. It'll support the old Google Quick it'll support that
00:03:47 [W] I support the ietf quick.
00:03:49 [W] Oops.
00:03:51 [W] Sorry.
00:03:51 [W] My phone is beeping but it will you know, could everyone else who's in the conference Bridge?
00:04:04 [W] Yeah. I just I just closed mine.
00:04:07 [W] Maybe it wasn't mine.
00:04:09 [W] anyhow, so it it is coming and I I think that hopefully we'll have some documentary support.
00:04:21 [W] So, let's see next.
00:04:25 [W] So next question is are either of you involved in the windows Port of envoy. Neither of us is really involved happy to give a brief brief status update
00:04:41 [W] I'm not sure if that's something that you want to talk to you Harvey or if you want me to take that one, too.
00:04:41 [W] Yeah, I think the envoy for the definitive sort of status.
00:04:44 [W] I recommend looking at the watching the envoy con 2020 talks on this and that is all operative on YouTube right now, I think.
00:04:56 [W] We now have a pretty significant progress there.
00:05:00 [W] It's sitting at its most of the tests are actually passing.
00:05:04 [W] There's a still a backlog of tests, which you need to pass.
00:05:07 [W] There's quite a bit of work.
00:05:09 [W] We got on tooling and see I to make sure it's possible to actually make maintainable significant investment from VMware and Microsoft a don't know if anyone's actually using it in production yet Matt have you
00:05:24 [W] I think the answer is probably not because the current implementation because of the edge triggered versus level triggered situation.
00:05:09 [W] It doesn't perform very well.
00:05:10 [W] So I think it is functionally complete meaning it has all the features but it does not perform well, and that's just related to how how event triggering Works within windows and the team is working on that currently.
00:05:26 [W] Our goal is by the end of the year to have something that performs well for a beta version.
00:05:33 [W] Let's see new to cncf.
00:05:37 [W] What is Envoy?
00:05:39 [W] That's probably a good thing to cover.
00:05:41 [W] I don't know you want to give like a 60-second overview Harvey of what is online all our main?
00:05:47 [W] What's the pitch in the right side always a cloud native servicemeshcon oxy or something like that?
00:05:51 [W] But basically what I think of envoy is actually is doing a number of different respects provides some alfoil 7 load balancing and proxying data plane.
00:06:02 [W] It's it's a central component of many servicemeshcon.
00:06:06 [W] So you'll see it as part of things like sto.
00:06:09 [W] And also a kid's using a number of just like very bespoke applications. Like for example building Edge load balancers for very large organizations or Cloud native companies. One thing.
00:06:24 [W] like to think about over the perspective of how I take of always it's really is a platform and it's what really distinguishes it from many of the other proxies and
00:06:32 [W] Load balances in this space is extensibility and as both an extensible data plane with various extension points and also a control plane built around open apis, and these are the XDS protocol apis and protocol that you may hear
00:06:47 [W] It's the envoy and the things like history iot and this is where I want the power of Boy comes about in that it enables and talk ecosystems of extensions and other components such as control planes and management
00:07:00 [W] Interoperate with it.
00:06:38 [W] So yeah, I don't know.
00:06:40 [W] I'm sure you match as the founder of you you have a particular take as well, right?
00:06:44 [W] Sure.
00:06:46 [W] No, I think that was a that was a great overview.
00:06:49 [W] I think what I typically say to this question is if you're looking for projects that its most similar to what's going to be most similar to other software load balancers like nginx haproxy, you know, that's that's the most similar thing that you would compare
00:07:04 [W] An Envoy has become very popular because of a bunch of the features around how it does configuration and extensibility and the community that we've built but at the end of the day, it's a software load balancer.
00:07:14 [W] All right. Let's see next question. I have a file access log question.
00:07:23 [W] I am currently using the file access log and my filter for a grpc service and it's creating thousands of access.
00:07:32 [W] As per minute. Is there a way to limit that yes, there are various ways of limiting it. I would take a look at what Envoy calls runtime support which basically allows you to do stable sampling so
00:07:47 [W] This logs I think to one in a million or one in 10,000 and there's various filters that you can use to limit the log output.
00:07:53 [W] Mark that one answer and let's see we answered answered live. Okay, and let's see the next one.
00:08:03 [W] what let's see.
00:08:06 [W] What are your favorite or the most interesting uses of XDS? Relay?
00:08:11 [W] talk briefly and then all that Harvey talked also so XDS relay for those that don't know it's a it's basically an X DS caching proxy.
00:08:22 [W] See so you can think of it as like varnish for XTS and you know a bunch of the problems that people have when they're trying to run Envoy or other XDS compliant proxies is it can be difficult to write control plants? It's just it's
00:08:37 [W] It's not super simple.
00:08:33 [W] So our goal with that project is to make it easier for people to write scalable control planes similar to how people frequently run CD ends in front of their HTTP origin servers.
00:08:45 [W] We believe that there's an opportunity to have a common caching layer that can offer, you know, distributed systems best practices around things like back pressure and rate limiting and all of those things and then also more advanced functionality around things like subsetting.
00:09:00 [W] Or implementing incremental XTS and things like that.
00:08:57 [W] So the project is in early stages.
00:08:59 [W] We're currently deploying it in production lift right now, and we're hoping to get more people involved, but I'll let Harvey answer to because he's interested in all this API stuff.
00:09:09 [W] Yeah, I would definitely say one of the compelling use cases that I think is a pretty high priority and XTS real a roadmap is this idea of bridging state of the world updates which you know, very relatively simple configuration pipeline.
00:09:23 [W] The control planes can speak and dealing with the nuances around Delta and even on demand or XTS updates.
00:09:31 [W] I don't think that's like their immediate goal.
00:09:33 [W] I think the access protocol itself is actually starting to building more capabilities in sort of first class support for cash ability as we go for scalability and you can see this in things like I'm very recently
00:09:48 [W] Introduced which is pretty important from that perspective. But also we're havin a new sort of your L based naming scheme inside XDS, which will be capable of really
00:10:00 [W] XDS resource names as cash keys and make things like XDS relay that much I guess easier to use and more effective.
00:10:02 [W] I think, you know Excellence relay events and things like it's going to be super important as we talk about scale out uses of xdf areas when such as for example Edge XTS, so when things like come on board
00:10:17 [W] Adults xes which it doesn't today, but it has it has it does this kind of application of excess relay as well as other more traditional CDN kind of methods are Distributing caching.
00:10:27 [W] The Casual resources will be I think pretty important.
00:10:30 [W] Yeah. I mean, I think it's kind of like a Swiss army knife essentially of control plane capabilities, which you know can be used for this that our capability.
00:10:43 [W] way I see it.
00:10:47 [W] Alright next question. Is there a plan to incorporate latency based load balancing like linkerd? Ezw Ma?
00:10:56 [W] I don't know of anyone that has been interested in implementing this so far. All of envoy is load balancing systems are actually pluggable. So it wouldn't be terribly hard for someone to
00:11:09 [W] Implement this we just need someone to come forward and do so, I think my experience with the latency based little balancing systems is that you know, I mean, they add a bunch of complexity and it's not clear that they had enough value to
00:11:24 [W] This with the latency base little balancing systems is that you know, I mean they add a bunch of complexity and it's not clear that they had enough value to warrant warrant the complexity, but we would certainly be open to having those be implemented if there's people that would want to implement them.
00:11:36 [W] madam
00:11:39 [W] let's see next up any tips if I want or need to write a control plane for Envoy from scratch all that Harvey take that one.
00:11:47 [W] Yeah.
00:11:47 [W] I think you definitely almost certainly want to use something like go control plane or Java control plane as your basic transport like Library fine.
00:12:05 [W] And obviously depends upon which language you intend to use to implement your control plane, but this is essentially what many of the users in the community of converged around and there is a lot of code there for reuse.
00:12:16 [W] So many of the hard lessons have been solved there.
00:12:19 [W] Another question obviously is like, you know, why do you want to build a control plane?
00:12:25 [W] in there? And there's many good reasons to building another control plane particular when folks have you know, in-house control planes for existing Hardware or software load balancers in there?
00:12:34 [W] Teaching Envoy, but there is also a number of Open Source and Commercial control player offerings is service.
00:12:43 [W] And so I'm saying that full space is probably very important before, you know, embarking on this group effort, but I would definitely start by taking a look at one of those libraries method you have any other suggestions?
00:12:58 [W] No II think I would just Echo the same thing, which is I would really not recommend writing a control plane from scratch at this point.
00:13:06 [W] Tall Pines for existing Hardware or software load balancers in there adopting Envoy, but there is also a number of Open Source and Commercial control player offerings is service.
00:13:20 [W] And so I'm saying that full space is probably very important before, you know, embarking on this group effort, but I would definitely start by taking a look at one of those libraries method you have any other suggestions?
00:14:12 [W] Always Solutions and the servicemeshcon Lucia that are out there.
00:14:16 [W] I would really recommend starting from from something open source, even if it requires it to be customized next question.
00:14:25 [W] Where do you stand on the Spire integration?
00:14:28 [W] I don't I don't know really what that means. So if the person that asked that what wants to clarify I think when it comes to spiffe e and Spire Envoy, it doesn't really have
00:14:42 [W] any direct dependencies on things like kubernative A's or spiffe E and Spire.
00:14:47 [W] It's a pretty generic solution, you know that can interoperate with different certificate providers and different ways of specifying principles and our back rolls and all of those things.
00:14:59 [W] So I think we're very open to obviously integrating with different different authentication authorization providers and it's a pretty pretty pluggable system. So I think we're
00:15:12 [W] Do it.
00:15:13 [W] Did you have anything to add there? Hurry?
00:15:15 [W] No, I didn't think so.
00:15:16 [W] I mean other than to point out that yeah as you point out like as I met also mentioned before, you know, part of onwards extensibility extends to things like certificate providers and we have a recently added mechanism to sort of very flexibly adding additional sources of certificate
00:15:34 [W] Right next question. Are there interesting public overlaps using open API and Envoy. I can answer this. I'm not sure if there's something that you know about Harvey If you want to
00:15:49 [W] May I take this so I think from an open API perspective.
00:15:42 [W] I'm not an expert.
00:15:43 [W] I don't think there are any explicit overlaps right now.
00:15:48 [W] What I will say is that Envoy it does I would say quite a lot already with API transcoding so particularly around grpc to Json and and things like that and I think
00:16:03 [W] Entire ecosystem Brewing particularly around protobuf and grpc apis of how annotations, you know can be added to apis to allow them to be shared across different ecosystem. So whether that be something like Swagger
00:16:16 [W] I or grpc and automatic conversion between grpc and Json and llamo. So I don't know that Envoy least initially would be involved in this but I do think that over time we're going to
00:16:28 [W] Ends in how people Define apis.
00:16:30 [W] I think they'll be an increased movement towards IDL.
00:16:33 [W] And then I think as people move towards IDL.
00:16:37 [W] I believe that we can one of the complaints against ideal based apis is they tend to be harder to consume like it requires more tooling and a bit more expertise.
00:16:46 [W] And I think that Envoy can help bridge the gap between people better. You may potentially used to using curl based, you know, rest apis and and how we can prodyna
00:16:56 [W] programmatically Define them and then have them be more accessible to Developers.
00:17:03 [W] So yeah, let's see.
00:17:06 [W] Let's see.
00:17:07 [W] We already talked about the windows Port so I think that's ongoing.
00:17:10 [W] I'm thinking that they're going to have something by the end of the year. Hopefully that's beta ready. So hope it's already featured ready, but it's not production performance ready. So that will be coming the question of how broad the adoption of yeah when the ball is outside of later.
00:17:25 [W] So there's no one else using it so far that I know of and you know to be clear with Envoy mobile weaveworks.
00:17:32 [W] Open sourced it really at the very beginning before there wasn't there wasn't really anything.
00:17:37 [W] So it was developed in the open.
00:17:38 [W] So we are finishing our production roll out by by the end of the year.
00:17:44 [W] So if you're using lift most rides and functionality now are already going over on my mobile.
00:17:50 [W] I can't speak to any of them now, but I am expecting broader adoption in 2021, but we'll have to see how it goes.
00:17:58 [W] I'm still very bullish on the technology. I think the goal of the project which is to share the networking stack everywhere tends to resonate with people and this comes back to actually what we're talking about before about the open API aspect, which is I think when you
00:18:13 [W] To finding apis and look at them end to end from the client to the server.
00:18:10 [W] I think there's very interesting functionality that we can provide if we only had 10 networking stack.
00:18:16 [W] Yeah, very exciting announcement that it transferred to the envoy haproxy organization or just the other day, right?
00:18:21 [W] Yep.
00:18:23 [W] Yep that happened now.
00:18:24 [W] So now it's a long with Envoy and I would expect us to use that over time to better integrate the ci/cd stems of both projects. Hopefully hopefully make things make things better.
00:18:37 [W] Let's see any plan to support additional language is natively, but Ian C++ without using webassembly.
00:18:46 [W] I don't know. That's something that you've probably been thinking about Harvey if you want to take that one.
00:18:50 [W] Yeah, so I think I mean we've seen over time unofficially there's been other attempts to build things like go filters and this kind of thing. I think webassembly is probably one of the key
00:19:06 [W] places that most the community's going to head towards because it provides very stable interface and the ebi for building these kinds of Integrations and it's kind of you know, highly aligned with idea of multi-language support
00:19:21 [W] Yeah, sir. I think I mean we we've seen over time unofficially.
00:19:26 [W] There's been other attempts to build things like go filters and this kind of thing. I think webassembly is probably one of the key places that most the community's going to head towards because it provides very stable interface and the he bi for
00:20:11 [W] The tracking it go around Ross to use in Envoy and this is a place where I think if anyone's interested in contributing, we would definitely interested in trying to see what's possible. It's unclear whether we would be able to offer it for example the same.
00:20:26 [W] level of integration as existing C++ extensions to Roscoe largely because of this problem of you know, essentially the foreign function interface, you know, Russ is Amal, like see like abstraction level and
00:20:42 [W] Kind of how to make it work well with C++ and there's just generally in an open issue in and thrust Community around that but we're definitely interested in you know potential nobl9 use of rust. I mean one thing I would point out is that we actually have a pretty large
00:20:56 [W] Large array of extensibility options in Envoy now and that folks approaching, you know building an extension for envoy can choose between you know, things like the traditional C++ knative filters. We have webassembly we have things like
00:21:07 [W] Which allows you to write C++ filled with against the stable webassembly Abi.
00:21:11 [W] We also have lower obviously.
00:21:16 [W] We have things like how network-based filters which you can be also very attractive design point in the design space and so examples of these include things like I'm already an Envoy exorcists. He's actually a protocol which is used to build a whole
00:21:31 [W] Beyond just the say authorization because you're basically able to intercept requests and operate on their headers and going forward we have actually right now in the process that's great contribution from a Grail which is going to be around
00:21:45 [W] And going forward we have actually right now in the process that's great contribution from a Grail which is going to be around as thing called external processing filter, which will essentially allow you to build a filter which is able to participate in the full
00:21:58 [W] External processing filter which will essentially allow you to build a filter which is able to participate in the full Envoy request from spawns life cycle as a grpc service and so obviously that means anything that you implement which is sits behind
00:22:13 [W] And so obviously that means anything that you implement which is sits behind a grpc stub for this service can actually then provide this functionality.
00:22:25 [W] So that's actually a pretty interesting and novel space for like your multi-language support and so on.
00:22:32 [W] it. Yeah. Yeah, I think in general just just to summarize. I don't think we're opposed to having other.
00:22:43 [W] Images right?
00:22:44 [W] It's like if someone actually wanted to figure out how to Upstream go filters or whatever else we're not opposed to it, but it's pretty hard to actually make this work.
00:22:56 [W] It's a substantial amount of effort and it's unclear that someone's going to be willing to do that.
00:23:02 [W] So, I think it really depends on on the overall community ecosystem and my experience has been that for the vast majority of use cases when rubber
00:23:13 [W] Meets the road C++ works luo works and I think webassembly will end up working for most people. So I'm just skeptical that people will actually put up put up the work other than rust because I think rust is the future.
00:23:28 [W] Yeah.
00:23:29 [W] Okay.
00:23:30 [W] Let's see.
00:23:31 [W] There's another question here.
00:23:32 [W] Sorry. If this is a vague question, we manually setup Envoy for to Services Envoy egress Envoy Ingress we have
00:23:44 [W] When under a load, we are seeing the error occurrence decrease when we increase the cluster connect timeout.
00:23:49 [W] Is it a good idea to keep the connect time out to be the same for all services any idea our guideline about what is happening to be honest.
00:23:58 [W] It's really hard to you know, comment or debug this type of thing remotely over over conference video.
00:24:05 [W] So I would encourage you to either file file an issue or hop into Envoy slack. I would say in general mean from
00:24:13 [W] You're saying is that it's not surprising to me that under load, you know things take longer to connect and you might have to raise the timeouts.
00:24:22 [W] So at the end of the day with a lot of the time outs, you know that you can set in Envoy you're trying to balance performance with overall availability and the only way to really tune that is going to be to look at
00:24:37 [W] And the only way to really tune that it's going to be to look at your particular use case and do load testing and figure out what type of error budget you are comfortable with depending on the look that you're taking
00:24:40 [W] We're out of questions.
00:24:42 [W] Feel free to type in some more.
00:25:12 [W] Oh, apparently there's another page.
00:25:15 [W] I think these are covered in this other.
00:25:18 [W] Oh, yeah.
00:25:18 [W] No, I think I think I felt her at all the answer question. So I think we're I think we've done them all.
00:25:33 [W] Yeah, I think so.
00:25:56 [W] See the question in math. So what are you most excited for in that coming year and Envoy?
00:26:03 [W] What what am I most excited for?
00:26:07 [W] I think I'm excited for webassembly.
00:26:11 [W] I really do think that is the future of extensibility.
00:26:14 [W] So I am very excited for that one and I'm excited for a quick and it should be three excited for I think a bunch of the work that we're going to do in the envoy mobile space.
00:26:28 [W] I'm excited for Jen, you know General componentconfig.
00:26:32 [W] Continued focus on security. So I think that's something where we you know, we've made great strides and there's always always more to do.
00:26:39 [W] It's a very messy space.
00:26:42 [W] I think those are things that come to mind.
00:26:44 [W] I will turn it around and ask you the same question.
00:26:47 [W] Yeah.
00:26:48 [W] I would definitely agree with you on that space. I mean just generally extensibility in general. I think, you know, we're going to see a continued of growth in terms of extensibility and many different levels whether it's
00:27:02 [W] it's how people are building on very extensions.
00:27:04 [W] It's how we're constructing the API and you know, making that built around the concept is extensibility and less fewer sort of baked in Concepts.
00:27:12 [W] I think and generally sort of a bit gung-ho about that what the Heimlich County involved in around trying to improve things like scalability cash ability federation's for this kind of stuff in XDS and sort of try to open it up to a
00:27:28 [W] I think I'm generally sort of a bit gung-ho about that with the time account evolving around trying to improve things like scalability cash ability federation's for this kind of stuff in XDS and sort of try to open it up to a
00:27:46 [W] Audience and I think it'll be very interesting to see other the xes ecosystem grow as a whole as we see additional proxies and data plane components jump on board. And I think that's we definitely will see in the previous year.
00:28:01 [W] I mean, I think we're going to see quite a few more folks.
00:28:03 [W] Come on board in 2021.
00:28:06 [W] So yeah, those are things that I'm definitely very excited about and I think like on the security front.
00:28:11 [W] I'm very interested to see more what we exciting to see more folks and companies sort of getting involved in contributing their because I think we're starting to see this happening and it's actually really great to see security becoming a
00:28:26 [W] common responsibilities and something which many companies are giving back to the Ombre Community with
00:28:34 [W] yep.
00:28:36 [W] Let's see.
00:28:37 [W] what efficiency gains has left made by implementing Envoy. You know, that's a tough one to answer right? Because I'm not sure what efficiency this person is talking about.
00:28:49 [W] Are we talking about like compute efficiency or person efficiency and to be honest. It's really hard to answer that because Envoy was developed relatively early on in live to solve a bunch of problems
00:29:04 [W] Brother microservice roll out at a certainly satisfied those goals.
00:29:08 [W] But at this point Envoy is so intertwined with everything that live does its heart, you know, it's hard to go back five years and understand what it would mean to unwind that I mean, it's not it's it is not really possible.
00:29:23 [W] I think that these from the initial goals, we started the project five and a half years ago.
00:29:19 [W] It was honestly mostly around developer productivity.
00:29:23 [W] It wasn't really around like machine performance.
00:29:25 [W] And I think the goal was to make it easier to do the Micro Surface roll out and I think from that perspective the microservice rollout went from being stalled to being successful.
00:29:36 [W] So I think I would I would I would measure more on the developer productivity side things.
00:29:45 [W] So, let's see has anyone put on by proxy in front of the kubernative API server?
00:29:52 [W] Don't know.
00:29:53 [W] Do you know Harvey?
00:29:58 [W] Don't know.
00:29:59 [W] Yeah, let's see.
00:30:02 [W] Could you discuss some of the differences between Envoy and sto would you like to take that one hurry?
00:30:12 [W] This a lot from that even Folks at Google hosts of ramping up an Envoy because the truest sometimes sort of treated synonymously and so the way I would describe this as sto is a complete servicemeshcon offering and Envoy is the data plane component
00:30:28 [W] Oxy and also using your things like the you know Edge egressing rest proxy that form that is used as a building block asparagus here is so it's during loodse many other things Beyond just Envoy in terms of things like, you know a CA.
00:30:42 [W] It's used as a building block as part of this here. So it's your includes many other things Beyond just Envoy in terms of things. Like, you know, a CA I'm a policy engine configuration control management system.
00:30:53 [W] So all these things are sort of what constitutes to the sto so you can think about always being a single proxy which you would have liked it a single node or a single exit Pauline is and that is co and issue is really that the whole network the comprehensive servicemeshcon.
00:31:08 [W] Chaosmesh offering their yeah, I think you have matter.
00:31:14 [W] No, I think you know, I think it's the control plane versus data plane discussion, and I think Envoy is I'm biased but it's becoming the de facto data plane, but we see lots
00:31:29 [W] And I think Envoy is I'm biased but it's becoming the de facto data plane, but we see lots of different control points on top.
00:31:38 [W] Yeah.
00:31:39 [W] Let's see. Are there any sample go filters which we can use as a template. So like I was saying before there's no Upstream go filter support there have been a couple of projects that have done and I know that psyllium has done it, but it's not Upstream.
00:31:52 [W] I think there's a couple other companies that have done it but nothing is Upstream.
00:31:55 [W] I know that they're working on a tiny go webassembly runtime, so
00:31:59 [W] So, you know that might be an option. But other than that, I don't think there's anything really out there.
00:32:04 [W] I think we're almost out of time.
00:32:09 [W] So let's see we can take another couple. Is there any integration between Envoy Andy BPF not directly, but if you look at psyllium again, they're doing a lot of stuff with EPF and Envoy, so I would I would look at them
00:32:24 [W] It trying to look through if anything we can do quick.
00:32:27 [W] I don't know.
00:32:27 [W] What is the what are the weirdest and surprising use cases of envoy that you've seen?
00:32:34 [W] I don't know anything that could end on that anything that comes to mind with you Harvey.
00:32:42 [W] Trying to think weirdest and most surprising.
00:32:53 [W] Well, I am not sure if I have any super surprising ones. One thing I will notice is as you browse the web increasingly these days or use certain platforms your make a GC.
00:33:06 [W] No healthy up streams and you notice on board popping up in various places, which you wouldn't expect.
00:33:13 [W] Yeah, I think I would say the same thing.
00:33:17 [W] It's just it's everywhere right? And so it's like it
00:33:21 [W] Used in Telecom and internet and like finance and it's just all over the place.
00:33:26 [W] So I think the most surprising thing for me is just how widely it's been deployed and is deployed all over the place from servicemeshcon ternal load balancer to API Gateway. So from a project perspective, it's really fantastic to see all that growth.
00:33:41 [W] So I think we're about at time. So for all of these other questions, I think there's a there's an Envoy chat room and cncf.
00:33:51 [W] Various places which you are wouldn't expect.
00:33:44 [W] Yeah, I think I would say the same thing.
00:33:46 [W] It's just it's everywhere. Right?
00:33:49 [W] And so it's like it's used in Telecom and internet and like finance and it's just all over the place.
00:33:55 [W] So I think the most surprising thing for me is just how widely it's been deployed and is deployed all over the place from servicemeshcon Turtle load balancer to API Gateway. So from a project perspective,
00:34:07 [W] It's really fantastic to see all that growth.
00:34:10 [W] So I think we're about at time. So for all of these other questions, I think there's a there's an Envoy chat room and cncf slack.
00:34:20 [W] There's an Envoy slack happy that happened to answer questions there.
00:34:24 [W] Thank you.
00:34:28 [W] Okay.
00:34:29 [W] All right.
00:34:30 [W] Bye.
