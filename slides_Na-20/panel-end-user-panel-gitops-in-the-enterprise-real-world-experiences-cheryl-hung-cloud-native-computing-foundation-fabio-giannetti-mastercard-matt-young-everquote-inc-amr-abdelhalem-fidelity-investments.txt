Panel: End User Panel: GITOPS in the Enterprise -Real World Experiences: RFYJ-4317 - events@cncf.io - Thursday, November 19, 2020 3:47 PM - 38 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Hi and welcome to this session at Cube Khan.
00:00:03 [W] I'm Cheryl hung. I'm going to be the host for today's panel discussion.
00:00:07 [W] in the Enterprise so cncf end user Community is this group of companies who are adopting cloud knative and kubernative and who get together to share their experiences and figure out what
00:00:22 [W] is this group of companies who are adopting cloud knative and kubernative and who get together to share their experiences and figure out what challenges they can overcome together, and I'm extremely
00:00:43 [W] overcome together
00:00:46 [W] and I'm extremely honored to have three members of the end user Community joining me here today, and I'd like them each to introduce themselves so I can start I'm Cheryl.
00:00:56 [W] I'm the VP of ecosystem at the cloud native Computing Foundation.
00:01:02 [W] Matt please introduce yourself.
00:01:04 [W] Well, I'm young. I'm an architect at ever quote on our Cloud engineering team is I might have done I hit the cloud form team at Fidelity Investment.
00:01:18 [W] I'm also cncf board member.
00:01:22 [W] Hi, my name is Father. Jannetty. I'm leading the internal Cloud group at MasterCard.
00:01:30 [W] Fantastic.
00:01:31 [W] Thank you all so much for joining today.
00:01:33 [W] So we've got a couple of questions that we're going to start off with and we're just going to Talk Amongst ourselves. And so learn how you've approached these questions at each of your companies.
00:01:45 [W] So first thing what is get-ups, let's define gitops and why your organization chose to adopt it Fabio.
00:01:57 [W] Let's talk to you.
00:01:57 [W] Thank you. So for us gitops
00:02:00 [W] really has been a journey to represent our infrastructure through code as well as what we Define the core application of those applications that we deploy an hour kubernative cluster to run the infrastructure itself and
00:02:15 [W] Rosen this is to allow us to represent everything we have in our internal Cloud as a git commit or git Repository.
00:02:28 [W] And why did Master Card choose to adopt we did choose to adopt it because you simplify our operations any allow us to have a good handle on the different teams and the different environments where we are deploying our application.
00:02:43 [W] Easy to track everything that we run on our Cloud environment.
00:02:24 [W] I'm here. Is that the same for you?
00:02:26 [W] Yeah.
00:02:27 [W] Yeah. Yeah similar to probably on the must have talked about kid Fidelity workloads word the platform team that responsible to build the platform the platform's so we responsible to enable when govern and regulate about like hundreds of
00:02:42 [W] Workloads what the platform team that responsible to build the Box on the platform's so we are responsible to enable and govern and regulate about like hundreds of pastors and that forms like different one's different very very the been
00:03:02 [W] Like different one's different very very the been demanding bit different business units and different capabilities and features as well.
00:03:09 [W] And that was our way of scaling that that phone throughout gitops and building like full automation around it right now.
00:03:18 [W] We're running over log 400 Blockbuster was using second.
00:03:23 [W] So over 500 clusters.
00:03:30 [W] And what about you format?
00:03:33 [W] I know you want a bit different scale. Sure.
00:03:37 [W] So ever quote is a fairly young company and we've been growing rapidly over the last few years. We are Cloud engine earring team is a fairly small team embedded within an organization our customers
00:03:52 [W] Bit different scale sure. So ever quote is a fairly young company and we've been growing rapidly over the last few years.
00:03:59 [W] We are Cloud engine earring team is a fairly small team embedded within an organization our customers our engineering teams and and they all like to run fast
00:04:22 [W] And and they all like to run fast.
00:04:26 [W] So we've spent the last year rebuilding our infrastructure to set us up and position us to support all of this horizontal scaling if you will of the business and in order to do that without you
00:04:41 [W] Of our team we've really leverage gitops into context one for our core infrastructure as others have said and it's really for us about toil reduction disaster recovery, but perhaps most importantly
00:04:56 [W] You know, all of our infrastructure is described in a variety of ways, but it's all in get and we partner with a lot of our teams.
00:05:01 [W] So if they need to do things faster than we can see ours are welcome.
00:05:05 [W] So we've been quite successful over the last few quarters of employing a lot of Open Source methodologies and workflows for how we're managing our infrastructure additionally and I'll be brave teams are our engineering teams are also
00:05:20 [W] A lot of Open Source methodologies and workflows for how we're managing our infrastructure additionally and I'll be brave teams are our engineering teams are also beginning to adopt some of these workflows as well.
00:05:33 [W] Although their scenarios are somewhat different a lot of the same benefits have been realized.
00:05:39 [W] What do you mean by some of their workflows have been a little bit different?
00:05:43 [W] Can you elaborate?
00:05:45 [W] Well sure. So, you know like many companies in our position that our public in the last few years perhaps or are rapidly growing. We have a variety of systems.
00:05:55 [W] Some are very Legacy and we're very much made by hand and then you know as the organization has matured we've gotten more Automation in place and more, you know, automated deployments, but we still have a good number of systems that
00:06:09 [W] Not today described declaratively in get there's an operational or procedural aspect to them.
00:06:16 [W] So we are somewhat polyglot in our in our CI NCD mechanisms.
00:06:22 [W] For example, we have bamboo as well as flux City what we'll get into that later.
00:06:28 [W] I think we differed we definitely have some teams building that new things and generally those we would our gitops methodology, but we have to be realistic that it's not
00:06:39 [W] The hammer for every now and then it's supposed to be.
00:06:46 [W] I'm going to did you have a something that you wanted to add to that?
00:06:52 [W] That it's not the hammer for every now and then so speak.
00:07:01 [W] I'm going to did you have a something that you wanted to add to that?
00:07:08 [W] And not really like in just like in one last comment is like, you know, it was very useful mechanism to enable our platform in multi-cloud model or you have like different Cloud providers and different infrastructure
00:07:23 [W] Providers and different infrastructure beside our private Cloud as well and having that like, you know differentiation differentiator in the in the layer underneath the kubernative itself, or you have like different network model and different like, you know mecanism and and virtualization model
00:07:38 [W] Underneath the hood that were actually gitops was like is abstracted layers that kind of mind it all this component and is all this Cloud forms together.
00:07:50 [W] All right.
00:07:50 [W] Thank you.
00:07:51 [W] And let's go to the next question. And I think this is the one it's almost jumping to the end immediately.
00:07:57 [W] But what what that lessons did you learn?
00:07:59 [W] I like to I'd like you to talk about like the scale of what you're doing.
00:08:05 [W] Maybe the journey that you've taken to get here what you would recommend for other people.
00:08:09 [W] I mean, why don't you you go ahead sure so I would say like, you know, if you lose the lesson learned is number one understanding the
00:08:19 [W] Tian the whole the whole like, you know big picture about like we're going to be used and how we can Implement that and how we can introduce that to the development team was building that gitops model.
00:08:30 [W] That was one of the challenges or one of the lessons learned. The second one was mainly as our team is more of like the engineering team who's handing over that automation.
00:08:39 [W] Peace to all the develops communities inside within the our business unit. We have about many of them actually in the company. So enables this culture and let them
00:08:49 [W] stand like how that would work and has that is different than the traditional operational model how the declarative you know aspect of communities and how the declarative aspect of managing your infrastructure that that was knew that was unique and new for them
00:09:04 [W] Like this aha moment like after a while like how we do that?
00:09:06 [W] Where is my process? Where is my validation process but after after a while to get used to this idea it took what?
00:09:14 [W] And I can go next for us.
00:09:17 [W] One of the very interesting lesson learned has been around audit Trail.
00:09:23 [W] And so we because we use gitops to drive upgrades and do deployment and changes the reflect all the environments including our production environments, you know, the company is set to audit Trail based on
00:09:38 [W] So one of the issues we were facing is that those gitops operations needs to be mirrored into the audit Trail. And so we've spent a significant amount of time to build some automation. So when you do a commit and you create a pull request
00:09:40 [W] Open a ticket automatically and then the the approached of accepting that ticket will automatically give a plus 1 into our pull request and we made a plus-one mandatory
00:09:49 [W] I'm going to be merged unless the +1 exist. And so this is being for us a game changer because you allow us to be so compliant PCI Compliant. It made us work very well with the rest of the company without forcing us to be to change
00:10:01 [W] company fall over on audit
00:10:03 [W] Yeah, that's a that's a great point and we have similar concerns, you know, as we partner with a number of insurance companies and other other entities.
00:10:15 [W] We have a lot of regulatory and compliance issues not issues but concerns and one thing about a gitops methodology is, you know, effectively access to get and they are and the role based Access
00:10:30 [W] That is really important to think through because now get is your control surface and there's different ways to address them and we're employing similar, you know approaches with automation around web Hooks and
00:10:43 [W] Other lessons as well in the last year at the top level I would say ux really matters developer experience and usability matters.
00:10:49 [W] For example, we're using flux CD for most of our infrastructure that is in kubernative and it's working quite well, but the primary user of that is our Cloud engineering team, who knows that full-stack, you know for a new developer
00:11:05 [W] Development team that's just getting started the ux of that is really look at logs.
00:11:08 [W] And so there's lots of different tools. You can bring to bear but let's think up front about who's going to use it and what interactions do they need and what workflows need to be supported and when choosing tools I'll also say that particularly
00:11:24 [W] Workloads and grenades itself. One thing that gitops will really shine a light on quickly when you get to scale out horizontally as how are you dealing with configuration management?
00:11:31 [W] We clean Helm customize and Tonka and or Json it there's a variety of approaches to cannot just end up with a bunch of copy-pasted Yama Library where and so it's worth investing some time
00:11:46 [W] In deciding how your organization wants to manage configuration and how you want to abstract out differences the rabbit hole runs deep and there's a lot there we in fact use all three of those tools.
00:11:55 [W] It's worth bearing in mind up from
00:12:00 [W] I'll also say that in terms of workflows around branch management promotion of code between environments.
00:12:10 [W] You know, how are you running things?
00:12:12 [W] You know, when you when you move to gitops if you if you have gaps there or if you have varying points of view and your organization, you're going to find out quickly.
00:12:22 [W] So again, I'm up front to work out how as an organization you want to do that and if you want to support different methodologies,
00:12:31 [W] Just that's all stuff that you really want to think about prior to diving it with both feet.
00:12:39 [W] Yeah, absolutely.
00:12:40 [W] I've heard the same from quite a few different companies Matthew already mentioned this a little bit before but let's talk a little bit about the toolings and the projects that you're using in your companies to kind of implement gitops
00:12:56 [W] Can I start with you?
00:12:58 [W] Yeah, sure.
00:12:59 [W] So I like Matt mentioned actually using the similar Frameworks that are around gitops and in communities in general like to flux is one of them Helm is the second one and in addition. We had to start like we start using as well like, you know other projects outside
00:13:14 [W] Indeed the picture so completing that ecosystem.
00:13:10 [W] So for example, like 70 beds was required for us was part of the ecosystem that we had to build and use as well about Prometheus was another component was Griffon as well what I had to completely because you need that reporting piece. I mean that kind of like,
00:13:25 [W] Durability front for your cluster management side as well.
00:13:28 [W] Yeah, and from from my side we value a lot the landscape.
00:13:33 [W] I think it brings all the technology.
00:13:36 [W] It gives you the ability to understand the level of maturity.
00:13:39 [W] So personally we used customized we use l but we don't deploy and directly with user templating capability of are and to convert it and then weíll a customized on top of it.
00:13:51 [W] We also experimented with Argo City.
00:13:54 [W] like the declarative that's imperative approach of deployment one of the
00:13:58 [W] Things that we would like to see more on the landscape is to go more into the details of Helm charts and operators.
00:14:07 [W] We use those quite extensively and you know, the technology is the suspect.
00:14:13 [W] Alma is a graduated project but inside a Helm many charts are in different state.
00:14:19 [W] So we would like to see those being more mapped out or or owned by the project themselves. So they become more stable and more reliable the
00:14:28 [W] same applies to the operator. So we had a lot of items with the maturity and and support and quality of the operators that there are around.
00:14:41 [W] Would you agree with that much? You said you use Helm as well.
00:14:44 [W] Absolutely.
00:14:47 [W] Graduated project but inside a Helm many charts are in different state.
00:14:50 [W] So we would like to see those being more mapped out or owned by the project themselves.
00:14:57 [W] So they become more stable and more reliable and the same applies to The Operators. We had a lot of items with the maturity and and support and quality of the operators that there are around.
00:15:12 [W] Would you agree with that Matt? You said you use Helm as well.
00:15:15 [W] Absolutely.
00:15:18 [W] So again, we started our journey with gitops really at the beginning of this year. And we have some of the same challenges around around Helm charts Helm moving to its current version and getting rid of tiller
00:15:50 [W] earlier at the beginning of this year and we have some of the same challenges around around Helm charts Helm moving to its current version and getting rid of tiller certainly simplified things and that you don't have an orchestrator atop an orchestrator so to speak until
00:16:05 [W] We're doing a similar approach today.
00:16:07 [W] We're we're using customized combined with Helm to pre-render templates so that it's very obvious.
00:16:14 [W] what's happening and we're actually beginning to explore using Tonka Eng a sonnet as they've recently added the capability to import Helm charts into into a Json IT project,
00:16:30 [W] You know, we've certainly evaluated a bunch of other things as well.
00:16:34 [W] You know, we're you know, we've looked at everything from Spinnaker to Argo GitHub actions bamboo flux Edie. There's a law a wine and that just kind of scratches the surface of what's there in the in the community but
00:16:49 [W] It has been very good particularly because you know, we have quite locked down environments.
00:16:53 [W] you know, we have a lot of security concerns and so flux in particular since it's you know, effectively up bought sitting inside the cluster reaching out versus something like you have actions or more traditional things where from outside the cluster you want to authenticate over
00:17:08 [W] For you know, just somewhere else to the API server of a kubernative cluster, you know, we don't have to have credentials and keys to the kingdom stored in third-party systems. If you're using a SAS variant or in other internal systems, it's it's a pull based
00:17:18 [W] Also consistent with what the others have said in order to make all of this reality.
00:17:20 [W] We've adopted a largely cncf based stock which includes, you know, Prometheus and Griffon.
00:17:25 [W] Oh, we've also when evaluating, you know, what should we use for logging?
00:17:30 [W] For example, we're using the Bonsai Cloud logging operator because it's declarative in nature.
00:17:35 [W] once you start down this gitops and you and you start seeing the benefit of oh, I want to change something. I'll make a quick PR the pumps are
00:17:44 [W] In number and then like done right?
00:17:47 [W] No toil no drama.
00:17:48 [W] You start taking a really hard look at at systems and other building blocks of your infrastructure that are not described declaratively and that's been one big mind shift. I think in our organization, you know
00:18:03 [W] No toil no drama.
00:18:02 [W] You start taking a really hard look at at systems and other building blocks of your infrastructure that are not described declaratively and that's been one big mind shift. I think in our organization, you know.
00:18:27 [W] The it ends up as as a filter you almost apply to say well I have this wonderful thing in place that I don't have to deal with because it's automated.
00:18:37 [W] I don't want to add something that has a manual step to it or that is not declared and item potent and all of those sort of things.
00:18:44 [W] Yeah, and I want to I want to build on the point of Matt was making on the giving the keys of the realm. So one of the approach we use is we create what we call a control cluster. So is the cluster where the deploy your seats. So the hour
00:18:57 [W] Argo City will sits in that control cluster which only the platform team advances to so when I when an application team goes and made a pull request to deploy something in reality the the tool that deploys sits on our controller cluster and that's lockdown.
00:19:12 [W] Lee we are the only one they've asked us to it so that's been an extra step of security that we put in place there. Our security team liked because it reduced or limited the surface of attack and in our case, actually
00:19:27 [W] Hold on framework.
00:19:21 [W] We actually did it was released like in a couple of weeks ago to the open source communities as well Corcoran and that's kind of it's a management here for all the operators that we run today and we govern and calm, you know psoriasis was infidelity system and that
00:19:36 [W] Officers willing to be his own flocks and that that framework model basically will allow like the system admin and convince Administration communities inside Fidelity to State what version of what control or not operators is being used for
00:19:49 [W] Is and and manage that done for SATs will get laughs.
00:19:51 [W] So it's pretty cool actually because it does allow us to extend the dino the number of operators at all. So it puts in like into multiple level with its production grid operators or experimental operators that can only get accede to certain level of maturity and
00:20:06 [W] For like a div level for development purposes for an additional tool.
00:20:09 [W] It does have multiple version management control as well around that and it does up, you know to follow the same approach for how we can was gitops you can manage this sort of mission managers complexity, of course like 400 plus coasters.
00:20:22 [W] Yeah, I think I think there are challenges to as organizations scale.
00:20:27 [W] I mean if you're a small start-up and everybody can fit in the same room. You can just pick a stack or pick a tool and just you know, altogether do it in our case.
00:20:35 [W] However, you know, we're only you know, six or seven years old now, but you know, we have existing processes, for example, you know, some teams might use bamboo or some other system for starburns Oxley compliance so that we have a
00:20:50 [W] Pick a tool and just you know, altogether do it in our case.
00:20:50 [W] However, you know, we're only you know, six or seven years old now, but you know, we have existing processes, for example, you know, some teams might use bamboo or some other system for starburns Oxley compliance so that we have a
00:21:19 [W] Of changes to the code as well as the infrastructure, but then on the other hand we might want to use flux. So so I would encourage folks looking at this not to be too absolute and just keep your focus on what problems you're trying to solve, you know, for example
00:21:35 [W] An existing ticketing system or a workflow system like bamboo or Jenkins or whatever that you know that is used for compliance and then the provides that audit and that control workflow. It could just merge a branch and then something like
00:21:49 [W] And wake up and do it. You know when you put these systems together and everything is moving in parallel, you know, you can make a lot of work for yourself that you didn't expect if you say oh well since this is gitops now gitops has to be
00:22:02 [W] A lot of work for yourself that you didn't expect if you say oh well since this is gitops now gitops has to be our control surface as well.
00:22:07 [W] So we need to get rid of things that work just fine and move everything to communities are back and teams and all of that right you can you can put these things together in a lot of different ways some better than others, but, you know keep an open mind and
00:22:23 [W] Keep an open mind and be careful of you know rabbit holes as because some of them can go quite deep you can you can find yourself doing a bunch of work that you hadn't intended on doing or that you actually don't need to do if you're
00:22:39 [W] Interest about having just one pool.
00:22:45 [W] Yeah, that makes sense of loving flux and we're using it for almost all of our inference. Mm-hmm.
00:22:51 [W] Okay, awesome.
00:22:52 [W] Let's go to the next question.
00:22:54 [W] one is what how has the lifecycle management of kubenetes been impacted by gitops?
00:23:04 [W] Let me start with that.
00:23:05 [W] Like actually I'm going to mention that two examples that we that there was an in big impact on our lot in a coordinate is live site lifecycle management using it off. So the first one was mainly the cluster management because it's similar to Fabiana Matt. We have like a very highly regulated
00:23:21 [W] so we have requirement actually to do rehydration and upgrades and refresh for all of our clusters in monthly basis, which is it's a challenge because basically start to have to treat your kubernative postures itself as more 5 bits not kettles and have to be
00:23:34 [W] the same consistency need to be up and running all the time during that and have to be done in a canary model and that will be used like, you know that approach in additional to the complexity of having all of our operators need to be deployed in the same version and
00:23:43 [W] Is coasters that that to get simplified so gitops because in our gitops is again or get we had repurpose existing for each one of those clusters and that will have the specs for this cluster and have it look like and what the deployment happen and all the upgrade and rehydration
00:23:56 [W] We'll take advantage of like, you know, I want to move from a minor version of Courtney keys to the next one or major version or I want to attach my am I like, you know, an update like the images that I'm using for my notes and so on.
00:24:08 [W] So it was a control management very decent actually the Second Use case I would call that impact our cluster is large its multi-tenancy.
00:24:17 [W] So we build using a gitops model as well among hit multi-tenancy operator that operator will guarantee the same application on board.
00:24:25 [W] Ting so for instance, you know using gitops in this case you can Define your application.
00:24:30 [W] You can connect it to our ticketing system in the back end you can Define who's the team responsible for that what rules they are and that will pray to attack would take that. It will create its own in spaces.
00:24:41 [W] It will connected to all the Fidelity ecosystem in a back end it will set up that namespace and we'll set up drafting the Ingress Ingress is management and routing rules and firewalls or like old aspect. So at the end of the day, you know, the developing team will get
00:24:55 [W] Like a 3D environment already why it was then that cluster for the development effort again gitops was used in this case and it was actually very like, you know successful like some of this cost to reach out like 270 namespaces
00:25:10 [W] And Sharon shared environment. I wouldn't say there was another method that we can actually just kind of automation without gitops.
00:25:15 [W] Yeah, and I like I could have the biggest benefit for us is the automation that we can drive with this right? So when we have a minor release of kubernative we can basically Drive the automation from our sandbox environment if
00:25:31 [W] Asked then we can go out to the calves and we can do selective upgrades of different clusters.
00:25:24 [W] So we have a test cluster in every environment plus our control cluster that we can go and upgrade and then we can move to other classes. We have like over a year later key of clusters depending on the impact of those application may have and so we go to a certain order
00:25:39 [W] Is that we express when we create a cluster teams have the ability to choose a type for a type. It could be a single tenant.
00:25:47 [W] It could be a Singleton and we PCI compliance on it could be a multi-tenant or it could be a cluster that they use for specific things that may be created and destroyed after a while.
00:25:58 [W] So all of that is expressed in gate and that will trigger the automation to build all of those right before all this was done through tickets with our VM environment furnaces all done more manually.
00:26:09 [W] Than what we were able to do.
00:26:10 [W] So, you know definitely allow us to see what happened allow us to automate the majority of the operations.
00:26:18 [W] mean while keeping compliance with it.
00:26:22 [W] yeah, I mean we're operating at a slightly lower scale by an order of magnitude at least in total number of clusters or total number of developers, but I would definitely you know, again it's sort of a lesson learned but
00:26:37 [W] Cases when managing kubernative clusters, generally we run across multiple clouds were running both GK e and e KS and production and we have a multi account set up
00:26:51 [W] For example race conditions when to playing various operators. There are things that should just work but in reality, you know, sometimes they still do need human intervention and depending on the size of your team
00:26:56 [W] Completely automate everything you might have to make some decisions as we have to automate some things that are readily automatable but take care of with others going back to the helm bits. Another just small concrete example is
00:27:07 [W] a plug-in model so you might use a Helm chart that when doing an upgrade actually executes things right to help my mutate or migrate migrate state, but if you're taking a templating approach and you're not actually running Helm against, you know in this way, you might
00:27:20 [W] right to help my mutate or migrate migrate state, but if you're taking a templating approach and you're not actually running Helm against, you know in this way, you might actually inadvertently not realize that some upgrade to a Helm chart that was put in use as a plug-in
00:27:42 [W] Advertently not realize that some upgrade to a Helm chart that was put in use as a plug-in and and that's not being captured by your workflow.
00:27:50 [W] So there are you know exercise caution and you know, just do just don't assume that just because everything is automated. Everything's everything's working. So so investing in things like Prometheus and alerting and you know, how you handle
00:28:06 [W] Well as really critical because particularly with kubernetes and you know as anyone who's who's used it knows there's a lot going on and it's very easy. If you're not if you're not consciously and intentionally alerting
00:28:21 [W] Our to not realize that something might be not working.
00:28:20 [W] so well, and if you have a small team, you might not notice so
00:28:25 [W] yeah, they're there.
00:28:29 [W] Well, I think we do in that be no.
00:28:31 [W] Sorry. One thing we do a now at upgrading the sandbox validated the upgrade happen. Successfully. We ran solo boy and kubenetes to basically see the final result of the upgrade has some sort of compliance to
00:28:46 [W] Client with the CIS benchmarking and then we ran some synthetic test to see that you know, you can deploy an application comes up and all this kind of stuff. So that's that's been a way for us to enable some automation around, you know upgrades
00:28:59 [W] Especially minor upgrades more than major upgrades.
00:28:58 [W] Yes honorable is yet another gift from happy.
00:29:01 [W] Oh the world for sure.
00:29:05 [W] It's a modified the actually have the similar process.
00:29:09 [W] We have our own validation process that run after most of these processes, right and we had to we had a full framework like using cucumber another section to do like validation for each one of these operators and some of them are very critically like, you know all about your secret.
00:29:24 [W] Interrogation piece for example like so that's a that's a require.
00:29:28 [W] That's a that's a must.
00:29:29 [W] Yeah species is I can you need the validation so weak so after each one of the upgrade processes and so on we have turn on like a full validation process and then also setting monitoring software that that will look very similar to what you guys do in MasterCard.
00:29:44 [W] Yeah, but actually the experience of the last year has had a you know, had me taking a hard.
00:29:49 [W] Look at what we do next year around, you know, should we upgrade it all or should we just install new clusters at the new Target version and use DNS load balancing or canaries.
00:30:01 [W] We're also running linkerd e in production across all clusters.
00:30:04 [W] there's multi claw multi cluster routing capabilities that weren't there a year or two ago that that also pave the way
00:30:13 [W] towards just not dealing with upgrades at all.
00:30:15 [W] Even even with diligence so, you know, we're exploring what it would it be simple to just move to a full disposable cluster model in reality.
00:30:24 [W] I think we're not there given the size of our team and and if you're using some actually managed kubernative offerings Like You cast your gke they have their own upgrade workflows and and provisioning a new cluster
00:30:39 [W] Provisioning a hardened multi-tenant, you know scalable cluster that has a lot that you put into it to make it that way that the challenge for us between zebrium.
00:30:48 [W] Will then upgrade is mainly the ecosystem around kubernative not the communities upgrade itself.
00:30:52 [W] So the difficulty like around everything else around like, you know, all the security aspect of the regulation the firewalls the confi configuration syndication syseleven back to some of our
00:31:03 [W] data in our data center like, you know resources and others that will we see the challenges are like for Mike rebuild besides rehydrate every month since in every way so so I have actually question if you guys don't mind like, you know,
00:31:18 [W] Did any of your development team experience gitops for application deployment site?
00:31:19 [W] Yes, we have we have also I'll say we are a work in progress. But earlier this year. We had a couple of applications moved to using flux for application deployments.
00:31:35 [W] Think about what comes next for flux with the new version.
00:31:28 [W] I know that I know that the project is doing some work around observability and then making the ux around that a little easier I think for for some teams that we have the have on boarded their first few services to use flux.
00:31:40 [W] There's been a lot of a bit of a learning curve.
00:31:42 [W] We've also had really good luck with our email remarketing team using low key to help understand what's happening in flux.
00:31:52 [W] So we've got dashboards. Do you know they've got you know, what's happening with this?
00:31:56 [W] Service and and what's happening with flux, but again like that put that tool in particular is sort of watch and look for things in logs.
00:32:05 [W] It doesn't have a great ux.
00:32:07 [W] that's broadly accessible.
00:32:13 [W] for us is meant to be more complex because the application teams are basically they have Dale, you know, ci/cd pipeline around Jenkins being Define used for for a very long time and
00:32:28 [W] Things in logs.
00:32:29 [W] It doesn't have a great ux.
00:32:31 [W] that's broadly accessible.
00:32:37 [W] for us is maybe more complex because the application teams are basically they have Dale, you know, ci/cd pipeline around Jenkins being Define used for for a very long time and
00:33:10 [W] A lot of security hardening and things to being built on top of the year. So go in there and say hey guys replace all of these with something different eventually it will but I think is a longer conversation and it's going to take a good amount of time. So
00:33:25 [W] we've been talking a lot about infrastructure which particular with kubernetes is, you know, you can you can very quickly deploy flux rather gitops mechanisms irrespective of tools and very quickly get some wins, but when it comes to Applications again, just like you know
00:33:40 [W] The light on things like a oftentimes the tricky part about having applications of using gitops comes with everything around that application.
00:33:49 [W] So we use tariff on probably right but how do you actually deal with you know, all of these things outside of the actual service itself, but it uses the database is the buckets the cues all of that.
00:34:00 [W] How do you make that work as well?
00:34:04 [W] And there are approaches to do that as well that that were that were using.
00:34:09 [W] But there are complexities around that work.
00:34:12 [W] Well, for example many Frameworks the first time the new version of the service hits an older scheme of they'll do a schema migration.
00:34:18 [W] Well, one of the cool things about gitops is that you can revert things unless you two hens those migrations don't go backwards.
00:34:24 [W] So there's a lot of things that like once you get over the initial.
00:34:26 [W] Hey, I could deploy my service again. Like when you really think through, you know, all you do those things that are not necessarily declarative where if they are declared if they're declared f+ lie.
00:34:39 [W] Careful Mur confirmation or something. That actually has to be we run that maybe can't be rolled back. Just like, you know containerd version can yeah, I need I need an Intel experiment was very really an experiment what we use we look at all them.
00:34:53 [W] Location deployments and so the open application model is a new format that came out and still evolving but is a very good starting point if you guys have a look at them.
00:35:05 [W] Yeah, I think around January our first saw the initial specs for CCC NAB cnib, we're not using it yet. But I've been following the project over the year and I'm quite excited by the potential there again.
00:35:18 [W] It's a cloud native application bundle and I'm not involved with that project we
00:35:22 [W] Don't have you know, we don't have my hands dirty from from playing with it yet, but you know things like that that Encompass not just the application but all of the surrounding infrastructure and pooling that can be packaged together in a version bundle that for us is I'm quite excited.
00:35:37 [W] Out that in particular and a lot of our folks is vs code and some of the Integrations for lenses move the other related bills to to see an AB promising as well.
00:35:50 [W] Now that they've matured over the year and we're pretty much running out of time.
00:35:55 [W] So I'm going to have to go on to the next question.
00:35:56 [W] So he to interrupt the discussion.
00:35:58 [W] I'll just give this to Emma to sort of answer this one. So what does membership in their cncf end user community mean for your teams?
00:36:07 [W] It did mean a lot.
00:36:10 [W] I mean it started number one, I think for Fidelity in general. It digitally shape our like multi-cloud astrology.
00:36:16 [W] So right now we have like a very United storageos using like, you know, multi public cloud provider and even in our private Cloud using the Community Technology and and containerd technology in general that built this portability between the cloud provider. It did United
00:36:32 [W] I think for Fidelity in general it digitally shape our like multi-cloud astrology.
00:36:29 [W] So right now we have like a very United storageos thing like, you know, multi public cloud provider and even in our private Cloud using the Community Technology and and containerd technology in general that built this portability between the cloud provider. It did United.
00:37:00 [W] Use One Direction around how to manage your workload across multi clouds.
00:37:05 [W] I think it did also add a lot of value for our teams like, you know going through the ecosystem cncf Explorer to all the project that's going on right now understanding what's coming. And what is the community is and where to invest it did also
00:37:21 [W] It's going on right now understanding what's coming in.
00:37:23 [W] What is a community is and where to invest?
00:37:26 [W] It did also cheap shoot a power like no work model also like in the past like few months as we started releasing our own open source project like really stuck to them so far connectivity to would call T connect to connect to multi-cloud multiculturalism multi-cloud
00:37:41 [W] It to connect to multi-cloud Multicultural multi cloud with different variation models and the second one, which is Kira and the one that we highlighted accurately around like how to deploy like oh and govern operators management.
00:37:53 [W] So that cherry she about developing model itself, like how we are development and building all this like management tools for our environments.
00:38:01 [W] So I truly appreciate like the membership.
00:38:04 [W] kid's grade and just take and I'm really happy to hear that your teams are getting more involved with their
00:38:11 [W] community and with open source because that's how all of this runs together.
00:38:15 [W] We're pretty much out of time.
00:38:18 [W] I really wanted to say thank you to Matt and Emma and Fabio for giving your time and talking about the challenges and experiences that you faced.
00:38:28 [W] If you want to come and join the end user community and meet other people like this then please go to that link at the bottom.
00:38:37 [W] And that is it from us.
00:38:38 [W] Thank you so much.
00:38:40 [W] Thank you Sherry.
