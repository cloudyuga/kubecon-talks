Evolution of Metric Monitoring and Alerting: Upgrade Your Prometheus Today: GVBZ-4153 - events@cncf.io - Wednesday, November 18, 2020 3:01 PM - 30 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Hello everyone.
00:00:01 [W] Welcome to Q Khan, and I hope you're all having a great time. Welcome to this Roundtable discussion on the evolution of metric monitoring and alerting Via Prometheus. My name is Kunal and I have been contributing to open source ever since I was in my freshman year currently.
00:00:15 [W] This particular talk. So let's just start by introducing the speakers that we have for today's panel.
00:00:21 [W] Why don't we start with Julius?
00:00:23 [W] Yeah.
00:00:24 [W] Hi there.
00:00:24 [W] I'm Julius. I co-founded the Prometheus monitoring system back in 2012 at SoundCloud the last year's I spend freelancing around it.
00:00:33 [W] Just helping companies build stuff on top of it use it get training Etc. And this year. I created my own Prometheus related company called prom Labs. So
00:00:45 [W] basically continuing what I've been doing but also building commercial software on top like prominence. So yeah, if you need to start or any help with Prometheus, please reach out.
00:00:57 [W] Yeah. Hello.
00:00:58 [W] My name is beyond I have been with Prometheus almost from the beginning.
00:01:03 [W] That's a fun story because I kind of watched Julio's and Matt proud his co-founder creating it.
00:01:09 [W] I thought it's like a very weird idea and nobody will ever use this but they still lured me over. Like I was sitting our had this privilege of sitting in the living as one of the kind of only Google Engineers who could work from from Berlin back then and
00:01:25 [W] Yeah, Julius was there at SoundCloud the invited me for beers and told me the story and at some point, I don't know if it was just Prometheus or just because they're nice people to work with I came over and then yeah, that was 2013.
00:01:24 [W] that's long ago now and we were starting to work on this and I have never stopped working on Prometheus ever since and now I'm here.
00:01:34 [W] Hi, I'm Richard.
00:01:35 [W] I joined Prometheus in 2015 was looking at for New monitoring solution for a network for for high-speed better data center. Also monitor the data center with Prometheus basically
00:01:51 [W] His in 2015 was looking at for New monitoring solution for a network for for a nine speed but the data center also monitor the data center with Prometheus basically fell in love with with with
00:02:00 [W] Sweet delicious meal T coz it's just more powerful and you can do actual math on your monitoring data.
00:02:06 [W] data. I've been around ever since.
00:02:10 [W] Yeah, my name is Bartok and I'm a software engineer at Red Hat.
00:02:14 [W] Currently, we are doing everything observability mainly on openshift.
00:02:20 [W] However, my journey with prompt you started four years ago when I was in my crib is job as a sari and we are doing the very beginning rotations between teams and I was supposed to do game engine and I end up actually
00:02:35 [W] Ink observability Prometheus and I fell in love in that so this is how my journey started and then I meant I become Prometheus maintainer and we started tunnels as well on the way.
00:02:48 [W] Thanks a lot for the introduction everyone. And before we move forward with like some more like we'll be talking about the what Prometheus is and like how it started.
00:02:59 [W] So it's even if you're a beginner in Prometheus or someone who is much more experience. There's a Best of Both Worlds that you can get out of it. But before moving on to all of that I have just the first question that I have is what is actually what actually is Prometheus and how did it start?
00:03:17 [W] so Prometheus is a metrics based monitoring system that includes a Time series data base that allows you to monitor software devices anything that you can really get numeric metrics out of and then either
00:03:32 [W] First question that I have is what is actually what actually is Prometheus and how did it start?
00:03:37 [W] So Prometheus is a metrics based monitoring system that includes a Time series data base that allows you to monitor software devices anything that you can really get numeric metrics out of and then either
00:04:08 [W] - boards based on the collected data or also integrate that data into your alerts to wake yourself up at night.
00:04:14 [W] Hopefully not at night to fix the problem and detect these problems and yeah how it started.
00:04:22 [W] So I found myself in my dream job at Google in-toto 2012 being a site reliability engineer in Zurich working to keep one of Google services online and working and
00:04:37 [W] We had a great monitoring tool called Bachmann everyone hated it. But everyone else has said is the worst tool except for everything else.
00:04:45 [W] And when I then left Google to go to SoundCloud to Berlin, ironically, actually, I really like the job at Google, but I really wanted to just go back to my home town of Berlin after so many years
00:05:00 [W] clouds and another X kublr also joined met proud and we were both really missing the kind of monitoring tool or come on that Google had and we looked at everything in the open source world back then and
00:05:15 [W] Horse World back then and we're really not happy with the data model the UI the query languages or complete lack thereof the efficiency and storage being able to deal with Dynamic environments.
00:05:27 [W] cloud back then already had built a complete own cluster scheduler before Docker existed before kubernative existed many years before that and there were hundreds of microservices running on that thing with thousands of instances and
00:05:42 [W] Impossible to find out when there was a problem like a latency Spike was it all of the instances?
00:05:48 [W] We just one like we're what's really happening in detail on that cluster.
00:05:51 [W] So we were really convinced that we should at least try to build something that is inspired by Bachmann to help like both our own job, but also create something for the open source world that we could use in our
00:06:06 [W] Is could use and yeah, we basically started in our free time and eventually after it became useful enough.
00:06:13 [W] We started introducing it at SoundCloud and it was still like a long path to actually make it work and make like convince people.
00:06:21 [W] I remember talking to Buren initially, I think like in an elevator and he was like what you're recreating Bachmann. This is totally crazy.
00:06:28 [W] Like why would you do that?
00:06:30 [W] And I think yeah now now he's happy and yugabyte.
00:06:34 [W] yeah, but that really helped in the end get a totally different level of insight into what was happening with the microservices in that cluster get way more precise alerting and helped teams work in a totally different way than before
00:06:49 [W] Get a totally different level of insight into what was happening with the microservices in that cluster get way more precise alerting and help teams work in a totally different way than before like even testing their own software
00:07:05 [W] testing their own software and it's got released and so on and yeah, then we really finally published it properly with a blog post and everything from SoundCloud and others in 2015,
00:07:21 [W] He finally published it properly with a blog post and everything from SoundCloud and others in 2015. And we didn't really expect it to you know, we didn't really expect anyone to really get what we're doing because
00:07:42 [W] expected to you know, we didn't really expect anyone to really get what we're doing because Prometheus does a lot of things differently than other monitoring systems before it with this Arcane as queer e-language pull model instead of
00:07:57 [W] data collection and like many little other things but I think it really hit the nerve at that time with people starting to adopt kubernative needing something to monitor stuff running on top of it and
00:08:11 [W] Is really integrating well with Dynamic environments by service discovery, which we might get into later the rest of the story. Basically, you know, like it got really large adoption from there.
00:08:20 [W] We were really happy and a year later roughly.
00:08:24 [W] We joined the cncf and yeah by now we are happy cncf project and it's for some reason became the basically de facto standard and open source monitoring, which is amazing, but was
00:08:38 [W] Totally not what we set out to do initially that is that is in fact really amazing and like Judas mentioned something about the time series. So like can someone give a bit more insights about the time series for our viewers
00:08:53 [W] The time series for our viewers and like how is it how does it sort of compare from something traditional like nagios?
00:08:59 [W] Yeah, I mean, I guess I can take that.
00:09:01 [W] So now your Source kind of the gold standard in whatever 2012-2013 when Prometheus started and I mean it's many people are from still probably using it and it's doing a good job in
00:09:17 [W] When when Prometheus started and I mean, it's many people are from still probably using it and it's doing a good job in certain traditional scenarios.
00:09:26 [W] But there is this one thing that naggers essentially is you run checks and if they fail you get an alert, it's kind of this binary thing it fails or not.
00:09:40 [W] only kind of thing you can do is that you count checks and if like three out of five fail than yugabyte.
00:09:46 [W] You alert or something like this is a bit of a Time Dimension, but there is no real time series in there, right?
00:09:54 [W] And this was I mean that existed a bit with like stats tea and graphite which was fairly new at this time as well.
00:10:01 [W] I mean, it paved the road already and kudos for that.
00:10:05 [W] definitely, but then people always thought about dashboards, right you write lines onto a dashboard but like yeah this this region of doing this all
00:10:16 [W] One and have alerting combined with that that that was really really important Paradigm Shift.
00:10:23 [W] We usually tell people the cool thing is that you can do like it's called trending. I think where you can say, okay, I don't have to alert if I cross a threshold if the disc is full I can actually alert if it's
00:10:39 [W] getting full right, so this will allow me to alert way earlier if there's a steep increase the disk usage and I can totally right through like 90% disk usage if this is just constant and might be fine, right
00:10:55 [W] The one thing there's also more to that to make alerts more meaningful. Like if you alert on on like a queuing system being behind you can actually stop overacting if the queue is getting shorter because it's still fairly long and that's bad. But you know, the system
00:11:03 [W] You don't need to alert.
00:11:03 [W] So that was the one big thing you could also buy time series. You could have this whole notion of a culture where like, I mean, let's say Apache like ancient Apache already had like this kind of metrics module
00:11:18 [W] You how many requests of us serving per second and how many it has served all together and this is essentially redundant information.
00:11:23 [W] If you if you just record and it times the estate of Ace how this counter evolves then you can take a rate like differentiate the counter and you you get the rate and you can actually Define if you want the rate over the last
00:11:38 [W] It's so much more powerful, but the requires you to recall this as a Time series, and that's what Prometheus did and it unlocked an enormous amount of things you could do and it was not just for drawing lines in the dashboard. It was also for alerting.
00:11:50 [W] Mound of things you could do and it was not just for drawing lines in the dashboard.
00:11:54 [W] It was also for alerting and the other thing is that we label those times yours. And that was where we went from like the started hierarchical strings from graphite stats the to a label model which is like non-hierarchical and
00:12:09 [W] Keiko and you can slice and dice along all these dimensions that's really important material said to really go down to to certain failure cases or when causes and this is was such a nice coincidence that kubernative
00:12:24 [W] Right so kublr that has came out when we were already done with the Prometheus prototype essentially and the kublr lettuce people. They could have noticed already doing with Prometheus, but they didn't know it was an opening repository, but nobody knew it and then it came out
00:12:38 [W] It was like Greek words kubernative and Prometheus.
00:12:39 [W] They are both 10-letter word.
00:12:40 [W] So you could say k8s & p8 S.
00:12:43 [W] The logos are like exactly complementary colors orange and blue So for anybody outside it looked like this was designed on purpose to work together and to fit together, but it's not true.
00:12:57 [W] It's like really converging Eeveelution essentially and also like you can do a lot of Prometheus monitoring for non Quality Systems Like It SoundCloud we did it for
00:13:06 [W] For our own homegrown orchestration platform, but you can do it use it for everything.
00:13:12 [W] It's not it's really separate development, but it played perfectly together. And that's also I guess the reason why the first two projects in this cncf are kubernative sin, Prometheus.
00:13:26 [W] Absolutely. Yeah. Yeah, go ahead.
00:13:30 [W] So I just want to make one shout out to cervix because even back then it was doing time series. It was pulled based. At least mainly you could also do push it allows you to do basic math still
00:13:45 [W] Blew it out of the water. Don't already back. Then you had something which was it has all the many things but not as nicely integrated as Prometheus stood.
00:13:55 [W] Yeah, absolutely.
00:13:56 [W] That was a really good explanation for like y parameters started what it is, but I'm currently like let's say I want to use my let's say I have a Java application.
00:14:05 [W] So if I want to use Prometheus then how do I actually like send a matrix to Prometheus?
00:14:11 [W] So how does that usually work?
00:14:14 [W] And that's why you know broom to use. This is very unique in this field because you don't actually send metrics to Prometheus from here's collects that metric value from your application. And this is the you know, sometimes controversial and discussion between poor and pushed model.
00:14:29 [W] Prometheus is primarily a pull model here.
00:14:20 [W] It allows you to configure certain scrape targets and and certain interval with you know, how often you collect certain metrics and with simple HTTP endpoint, you know
00:14:35 [W] You collect certain metrics and with simple HTTP endpoint, you know page that you expose in each of your applications.
00:14:36 [W] You just point permit used to those endpoints and Prometheus will collect this data from those endpoints periodically, and this is essentially how Prometheus collects regular regular intervals
00:14:51 [W] Our metrics that are exposed within your application and that was pretty novel, you know back then when Prometheus started because everyone used to something called like black box or closed box and monitoring where for example in nagios you are creating
00:15:07 [W] And around your system that checks from outside. What is happening within your application right now?
00:15:12 [W] It's there is this direction of exposing more observability kind of signals within your applications. So maybe you can count, you know your cue sizes HTP, you know request and
00:15:28 [W] Signals within your applications.
00:15:28 [W] So maybe you can count, you know your cue sizes HTP, you know request and serverless 8nc and and stuff like that, which is extremely important and you do that by not pushing this data to
00:15:43 [W] That which is extremely important and you do that by not pushing this data to do some monitoring system, but actually just allowing some other system to collect it and Prometheus liver. Is that this
00:15:59 [W] This me it might mean that you know, the coach has to be instrumented like you need to use some client library in and there are plenty of libraries for for the major, you know languages available and supported by either Community or
00:16:13 [W] But at the end with this it's much much easier and more efficient than pushing metrics because you don't need to worry from the client perspective on the application into you know, how to handle failover scenarios
00:16:26 [W] Made sweat rise How We Do Your buffer this data essentially you can perform pretty stiff stateless applications and and have reliable monitoring on top of that.
00:16:34 [W] This also allows you to simplify Discovery and configuration. So make it kind of top-down Discovery and I think Julia's you can tell more about that.
00:16:48 [W] Yeah, so once you have those applications that have instrumentation like an HTTP endpoint where Prometheus can pull metrics from the next question is how does Prometheus know where it should pull from?
00:17:01 [W] Obviously the simplest way would be to just statically configure some endpoints in your Prometheus configuration, but that work maybe 20 years ago when you have these static database servers and web server and they never change nowadays you have
00:17:16 [W] Cloud instances popping up going down you have kubernative on top you have on top of that kubernative like many changing microservices instances and the key here is service Discovery.
00:17:26 [W] So Prometheus can integrate with different types of service Discovery in your infrastructure. The most prominent one would be the kubernative service Discovery where it continuously talks to the kubernetes API server to get a constantly updated
00:17:41 [W] Should exist in the world, right?
00:17:37 [W] So for monitoring system is really important to know what should be there.
00:17:41 [W] And what is it? And so Prometheus no uses service Discovery information.
00:17:49 [W] Let's go with the kubernative example, but there's others to know.
00:17:53 [W] What should be there.
00:17:54 [W] How do I pull from it? And then also enrich the pulled time series data with information it got from service Discovery, so it will know.
00:18:05 [W] What kind of parted spalling from in kubernative for example, which kind of environment is in what's the part name?
00:18:11 [W] Etcetera Etc.
00:18:12 [W] And yeah, it just really helps Prometheus deal with these two Dynamic environments and allows you to Define alerts when Prometheus is trying to pull from something that currently should be there but isn't
00:18:28 [W] I will also note that notice that automatically and yeah, so there are service discoveries integrated in Prometheus for instances of the different Cloud providers for kubernative mezzos
00:18:38 [W] In S2 keeper and some other ones and there's also a an interface to plug in your custom one and potentially if it's if you are missing a built-in service Discovery in Prometheus, that
00:18:46 [W] Popular we might be able to include it in Prometheus itself.
00:18:52 [W] And this also has a political angle course while we have that system which which allows you to nicely transport your metric data.
00:19:01 [W] This is inherently tied to the name of Prometheus and we got hundreds back then thousands of these days of Integrations and exporters from people running their own stuff or instrumenting their own stuff
00:19:16 [W] Supporters, of course, they needed it for their own things yet.
00:19:18 [W] There was this political angle of competing projects or competing vendors not wanting to record something which which carried the name of communities which is why openmetrics was started which is basically an
00:19:33 [W] or it's something which which carried the name of Prometheus which is why openmetrics was started which is basically an effort to standardize the Prometheus position forward with some slight changes
00:19:44 [W] Standardized the Prometheus position forward with some slight changes and it's been that concept has been in use for like five years now.
00:19:55 [W] We are actually in a really mean this we are close to to publishing the actual draft with India ITF.
00:20:03 [W] Just yesterday night.
00:20:04 [W] We finished the to-do list, so we have to find punishing.
00:20:07 [W] So what is this? It's basically just taking permitted Exposition format.
00:20:13 [W] Taken all the goodness putting it into its own thing. So you don't have that political angle of supporting something from a competing product while also allowing you to have an official standard within iot fa can just say, okay.
00:20:29 [W] Please support us which is especially important when you come to networking Hardware or more traditional vendors course, they usually work on ITF standards at least in the in the networking space.
00:20:41 [W] So this is why why why I started this Quest it's just important to not only have Prometheus as this super nice efficient powerful data engine and framework
00:20:57 [W] Clotee but also permeating this concept of label-based metrics throughout the whole ecosystem throughout this industry and other Industries, and that's basically the intention behind us, and I think it's
00:21:05 [W] Which is super nice and again within weeks when you actually publish the standard.
00:21:11 [W] No, really? Yeah.
00:21:12 [W] Yeah. That was that was that's really helpful. But the like Bartok mentioned about you know, the pool versus push mechanism. So what if like the question that I have even from like the viewers point
00:21:27 [W] How do I actually like fetch the data and actually like visualize it visualize the data that I have collected? So how does that usually go?
00:21:37 [W] Yeah, so there is a query language called prom KL in Prometheus, which really forms the heart of
00:21:46 [W] building alerts building dashboards, but also doing ad hoc debugging digging around in your data and this query language was initially inspired by what we were used to in Bachmann at Google and now of course, it's of
00:22:01 [W] same but it uses similar principles and it is not a SQL like language like you would find in some other time series data bases, but a more functional language which just allows you to select data and then
00:22:12 [W] more and more and more Transformations around the selected data and I think some of the core features that really make it powerful is that you can do math between whole sets of Time series for example dividing a whole
00:22:23 [W] Ever raids by whole set of total rates, for example, automatically joining them on either completely identical able sets or related label set. So there's modifiers you can use so it allows a level of
00:22:36 [W] And math between PSI X here is that wasn't really seen before that.
00:22:37 [W] It is admittedly. It has some sharp edges and is different from what people are used to in preview languages, but I think it really pays off and it allows you to do, you know, very precise alerts as well.
00:22:53 [W] Yeah, thanks, Julius and what about visualizing the data that I have collected? So there's there are several approaches to this. Obviously you have the UI built into Community itself, which is super nice for exposing your data and which I still
00:23:08 [W] because it's just very Snappy and nice but there's also something which is called prom - which was - boarding tool for Prometheus and it is an absolute pain to use and to create dashboards with
00:23:23 [W] I've never liked it and just by happenstance also around the same time 2014.
00:23:25 [W] I think it was torture founded or started the Griffon of project initially to visualize graphite data, but there was a plug-in for forward Prometheus as well within a few months,
00:23:40 [W] And basically as I was mentioning, I was trying to find new monitoring for my new Forum on the Internet or for my backbone and was looking at both Griffon and Prometheus at the same time and just
00:23:54 [W] all with each other while mainly ignoring problem - because it was just so painful and at some point talking with Carla just realized hey, why don't we try and make graphology actual default recommendation for Greece's
00:24:06 [W] This house with him. I don't think mrs. Team existed back then but like within within the group which was around Prometheus, we discussed this and basically decided that yes.
00:24:15 [W] This is not the focus of committees anyway and having something which is taking care of actually the visualization part for for fixed dashboards is absolutely nice and something which helps the project in as much as we
00:24:30 [W] Of course these days Griffon has the Explorer UI which basically mirrors and even enhances what you have within permissions proper, which doesn't mean that that doing it with in Prometheus is still not also fully fully.
00:24:42 [W] Okay, and sometimes the quickest way to get something done, but for dashboards, basically we switch the officially accommodation towards graph a line either 2015 or 16. I think I think 15.
00:24:57 [W] Yep.
00:24:58 [W] Thanks a lot Richie. I do have a follow-up question on that like when we using like monitoring and alerting tools. So one of the one of the reasons and one of the most like advantages that we can take off is figuring out and detecting the incidents that might cause,
00:25:13 [W] Damages, so do I need to glare at these dashboards to detect those incidents or is there like another like better way to do that now?
00:25:20 [W] That's exactly what was their kind of one of the primary goals of Prometheus.
00:25:24 [W] Prometheus was not only about dashboard in graphing those data is really about alerting and kind of reactive work and and focusing on incidents only when and on focusing on the running workloads only when there is some
00:25:40 [W] Alerting and kind of reactive work and and focusing on incidents only when and on focusing on the running workloads only when there is something wrong going on. So this is kind of a Natural Evolution when
00:25:51 [W] So this is kind of Natural Evolution when someone introduce them on touring first, there was no more enduring than for example for Matthias is introduced and they try to you know, visualization some data some
00:26:06 [W] And then you sit up at alerts so you can actually stop, you know, looking on those Health System to monitor yourself.
00:26:13 [W] You can actually let Prometheus to monitor for you. And this is really really kind of Novel and amazing and kind of the way going forward because you can as and you know operator devops as a you can focus on Feature work, you know.
00:26:28 [W] your business instead of operating and manually watching, you know help of your system and you can you know configure let's say rules that will trigger an alert
00:26:40 [W] you can you know configure let's say rules that will trigger an alert that will be sent to alert manager, which is part of the Prometheus ecosystem and alert manager allows you to route to the notification system
00:26:54 [W] The Prometheus ecosystem and alert manager allows you to route to the notification system of your choice. It can route the pagerduty lon under kind of systems that allows you to send message to your phone slack, whatever email grpc.
00:27:09 [W] And what is also a revolutionary here is that you can actually trigger an alert on the symptom of potential systems incident that will happen soon potentially.
00:27:22 [W] For example, you know, this space is running low or you predict that the CPU cetera et cetera will happen soon because there is like growing increase in nothing is is going down or maybe memory utilization is constantly growing so you predict that will you run
00:27:37 [W] soon so you can actually predict that ahead of time and an X actually react faster, but the true kind of value in Tru truly automated kind of system infrastructure monitoring is
00:27:50 [W] True kind of value in Tru truly automated kind of system infrastructure monitoring is kind of SLO based others. And this is kind of those huge ecosystem and lots of talks around and Tools around around that I really recommend
00:28:01 [W] Uh, echo system and lots of talks around and Tools around around that. I really recommend the tool that wrote Matthias my coworker.
00:28:08 [W] It's called prom tools and it lets you generate, you know error budget based s ellos which you define, you know, the service level objective that you care for because you don't care if one user may be request fails you care if you know
00:28:24 [W] Second amount of users cannot reach your service. For example for some amount of time that is maybe you know described in the contract. So you can alert you can you know add just the alerting to match those
00:28:39 [W] There and also only be notified for you know, human response only very very needed to avoid noise.
00:28:45 [W] Yeah that answers my question.
00:28:47 [W] Thanks a lot for sharing and I just have one more question for Julia's like always the those the naming inspiration behind Prometheus.
00:28:57 [W] Like we know for Thanos it's Marvel Avengers and stuff like that.
00:29:00 [W] There's low key and what was the inspiration behind like?
00:29:06 [W] Yeah.
00:29:07 [W] I'm just name.
00:29:07 [W] Well, I mean to be honest. We initially we just needed a name so we did what everyone does we went to Wikipedia?
00:29:15 [W] It's of Greek gods and goddesses and all the Titans and all that and eventually we did stumble over Prometheus and hey, it wasn't taking it in that relevant space. We could even get the GitHub or gov course it are existed already at the time, but it was
00:29:30 [W] So GitHub actually gave it to us.
00:29:29 [W] But also we just noticed like the symbolism fit nicely a we kind of know Prometheus stole fire from the gods and brought it to the humans the outside world in a way.
00:29:41 [W] I wouldn't say. Okay, I would say we were inspired by Google's Bachmann and build something like that for the open world.
00:29:50 [W] And the second meaning is the fire right like a monitoring system gives you insight as
00:29:57 [W] As does fire, so it's Illuminating things and the torch is is a nice symbol for that.
00:30:03 [W] So yeah, it worked out really well and the fact that then all these other Cloud native tools also ended up with Greek names like kubernative has and sto and so on that was a complete coincidence.
00:30:18 [W] Alrighty. Yeah.
00:30:19 [W] thanks a lot everyone for joining and everyone who is watching this and will be also available to answer any questions life.
00:30:28 [W] So you make sure that if you have any questions any follow-up questions, you can ask those and have a great Cube Khan.
00:30:38 [W] Thank you. Bye. Bye.
